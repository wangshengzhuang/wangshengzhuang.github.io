<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小强斋太-Study Notes</title>
  <subtitle>Stay hungry. Stay foolish</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wangshengzhuang.com/"/>
  <updated>2017-09-17T10:11:05.827Z</updated>
  <id>http://wangshengzhuang.com/</id>
  
  <author>
    <name>小强斋太</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>sysctl.conf禁用ipv6导致nfs无法启动的问题解决</title>
    <link href="http://wangshengzhuang.com/2017/06/08/Linux/Linux%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/sysctl.conf%E7%A6%81%E7%94%A8ipv6%E5%AF%BC%E8%87%B4nfs%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    <id>http://wangshengzhuang.com/2017/06/08/Linux/Linux问题解决/sysctl.conf禁用ipv6导致nfs无法启动的问题解决/</id>
    <published>2017-06-07T16:00:00.000Z</published>
    <updated>2017-09-17T10:11:05.827Z</updated>
    
    <content type="html"><![CDATA[<h3 id="rpcbind-socket-failed-to-listen-on-sockets-Address-family-not-supported-by-protocol"><a href="#rpcbind-socket-failed-to-listen-on-sockets-Address-family-not-supported-by-protocol" class="headerlink" title="rpcbind.socket failed to listen on sockets: Address family not supported by protocol"></a><a href="http://www.golinuxhub.com/2017/06/rpcbindsocket-failed-to-listen-on.html" target="_blank" rel="external">rpcbind.socket failed to listen on sockets: Address family not supported by protocol</a></h3><a id="more"></a>
<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>虚拟机模板禁用了ipv6，创建了虚拟机<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@centos7 ~]# <span class="keyword">cat</span> /etc/sysctl.<span class="keyword">conf</span> </div><div class="line"># System default settings live <span class="keyword">in</span> /usr/lib/sysctl.<span class="keyword">d</span>/00-system.<span class="keyword">conf</span>.</div><div class="line"># To override those settings, enter new settings here, or <span class="keyword">in</span> <span class="keyword">an</span> /etc/sysctl.<span class="keyword">d</span>/&lt;name&gt;.<span class="keyword">conf</span> <span class="keyword">file</span></div><div class="line">#</div><div class="line"># <span class="keyword">For</span> <span class="keyword">more</span> information, see sysctl.<span class="keyword">conf</span>(5) and sysctl.<span class="built_in">d</span>(5).</div><div class="line"><span class="keyword">net</span>.ipv6.<span class="keyword">conf</span>.all.disable_ipv6 =1</div><div class="line"><span class="keyword">net</span>.ipv6.<span class="keyword">conf</span>.default.disable_ipv6 =1</div></pre></td></tr></table></figure></p>
<p>启动nfs报错，报错如下</p>
<h3 id="Error"><a href="#Error" class="headerlink" title="Error:"></a>Error:</h3><p>rpcbind service fails to start with below error message in /var/log/messages</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">rpcbind.socket failed <span class="keyword">to</span> listen <span class="keyword">on</span> sockets: Address family <span class="keyword">not</span> support</div><div class="line">ed <span class="keyword">by</span> protocol</div></pre></td></tr></table></figure>
<p>I got this error the other day while working on Red Hat Enterprise Linux 7.3 and after digging for a while I got to know there is a sort of a BUG in RHEL 7.3.</p>
<h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis:"></a>Analysis:</h3><p>I found a BUG reported for this issue and I was facing the exact one.</p>
<p><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1402961" target="_blank" rel="external">https://bugzilla.redhat.com/show_bug.cgi?id=1402961</a></p>
<p>As explained by one of the engineers on the above page</p>
<figure class="highlight mizar"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">"The problem <span class="keyword">is</span> <span class="keyword">that</span> if you disable ipv6 n sysctl.conf, it <span class="keyword">is</span> <span class="keyword">not</span> disabled <span class="keyword">from</span> the beginning <span class="keyword">of</span> the boot, but actually quite late <span class="keyword">in</span> the boot process. Meanwhile systemd found out <span class="keyword">that</span> ipv6 <span class="keyword">is</span> enabled <span class="keyword">and</span> scheduled a start <span class="keyword">of</span> a socket, <span class="keyword">that</span> would listen on ipv6."</div></pre></td></tr></table></figure>
<p>Just to summarise if you have disabled ipv6 using your sysctl configurations then it is disabled only on kernel level but not via GRUB so it is not disabled completely hence systemd will attempt to make a connection on port 111 on any ipv6 address, [::]:111 during the boot up.</p>
<p>To know more on how to disable ipv6 follow below link</p>
<p>How to disable or enable ipv6 in Linux</p>
<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法:"></a>解决办法:</h3><p> /etc/sysctl.conf</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">net<span class="selector-class">.ipv6</span><span class="selector-class">.conf</span><span class="selector-class">.all</span><span class="selector-class">.disable_ipv6</span> = <span class="number">1</span></div></pre></td></tr></table></figure>
<p>grub级别禁用ipv6</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> dracut -v <span class="_">-f</span></span></div><div class="line"><span class="meta">#</span><span class="bash"> systemctl start rpcbind</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;rpcbind-socket-failed-to-listen-on-sockets-Address-family-not-supported-by-protocol&quot;&gt;&lt;a href=&quot;#rpcbind-socket-failed-to-listen-on-sockets-Address-family-not-supported-by-protocol&quot; class=&quot;headerlink&quot; title=&quot;rpcbind.socket failed to listen on sockets: Address family not supported by protocol&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.golinuxhub.com/2017/06/rpcbindsocket-failed-to-listen-on.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rpcbind.socket failed to listen on sockets: Address family not supported by protocol&lt;/a&gt;&lt;/h3&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://wangshengzhuang.com/categories/Linux/"/>
    
      <category term="Linux问题解决" scheme="http://wangshengzhuang.com/categories/Linux/Linux%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="NFS" scheme="http://wangshengzhuang.com/tags/NFS/"/>
    
      <category term="Linux" scheme="http://wangshengzhuang.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7安装配置 NFS</title>
    <link href="http://wangshengzhuang.com/2017/06/07/Linux/Linux%E5%9F%BA%E7%A1%80/CentOS%207%20%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%20NFS/"/>
    <id>http://wangshengzhuang.com/2017/06/07/Linux/Linux基础/CentOS 7 安装配置 NFS/</id>
    <published>2017-06-06T16:00:00.000Z</published>
    <updated>2017-08-20T14:54:42.829Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、NFS-简介"><a href="#一、NFS-简介" class="headerlink" title="一、NFS  简介"></a>一、NFS  简介</h1><p>NFS（Network File System）即网络文件系统，它允许网络中的计算机之间通过TCP/IP网络共享资源。在NFS的应用中，本地NFS的客户端应用可以透明地读写位于远端NFS服务器上的文件，就像访问本地文件一样。</p>
<p><img src="http://image.wangshengzhuang.com/17-8-7/50203549.jpg" alt=""></p>
<a id="more"></a>
<h2 id="1-1-nfs为什么需要RPC"><a href="#1-1-nfs为什么需要RPC" class="headerlink" title="1.1 nfs为什么需要RPC?"></a>1.1 nfs为什么需要RPC?</h2><p>RPC（NFS服务需要依赖RPC服务，这个比较重要） 要想了解NFS，必然要提到RPC这个服务。 因为NFS支持的功能还是比较多的，并且不同的功能都会使用不同的程序来启动。每启动一个功能就会启用一些端口来传输数据，因此NFS的功能所对应的端口才没有固定，而是采用随机取用一些未被使用的小于1024的端口来作为传输之用。但如此一来又造成客户端要连接服务器时的困扰，因为客户端要知道服务器端的相关端口才能够联机，此时我们需要远程过程调用（RPC）的服务。 RPC最主要的功能就是指定每个NFS功能所对应的端口号，并且回报给客户端，让客户端可以连接到正确的端口上。当服务器在启动NFS时会随机选用数个端口，并主动地向RPC注册。因此RPC可以知道每个端口对应的NFS功能。然后RPC固定使用端口111来监听客户端的请求并回报客户端正确的端口，所以可以让NFS的启动更为容易。 注意，启动NFS之前，要先启动RPC服务；否则NFS无法向RPC注册。另外，重新启动RPC时原本注册的数据会不见，因此RPC重新启动后它管理的所有程序都需要重新启动以重新向RPC注册，比如NFS服务。</p>
<p>其实，我们可以简单的理解为：NFS当作RPC服务中的一种，同时将RPC服务当作NFS服务器与NFS客户端的中间接口人，就是说NFS客户端访问NFS服务器，必须经过RPC这个接口人，才可以去访问。</p>
<h2 id="1-2-NFS的工作流程"><a href="#1-2-NFS的工作流程" class="headerlink" title="1.2 NFS的工作流程"></a>1.2 NFS的工作流程</h2><p>1、由程序在NFS客户端发起存取文件的请求，客户端本地的RPC(rpcbind)服务会通过网络向NFS服务端的RPC的111端口发出文件存取功能的请求。`</p>
<p>2、NFS服务端的RPC找到对应已注册的NFS端口，通知客户端RPC服务。</p>
<p>3、客户端获取正确的端口，并与NFS daemon联机存取数据。</p>
<p>4、存取数据成功后，返回前端访问程序，完成一次存取操作。</p>
<h1 id="二、NFS服务安装配置"><a href="#二、NFS服务安装配置" class="headerlink" title="二、NFS服务安装配置"></a>二、NFS服务安装配置</h1><p>安装rpcbind、nfs-utils</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum <span class="keyword">install</span>  rpcbind nfs-utils</div></pre></td></tr></table></figure>
<p>设置开机自启动</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">systemctl <span class="built_in">enable</span> rpcbind</div><div class="line">systemctl <span class="built_in">enable</span> nfs-server</div></pre></td></tr></table></figure>
<p>查看当前服务状态（<strong>暂时不要启动nfs-server， 等下面固定好nfs服务端口后再启动，可以避免重启电脑</strong>）</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[root@test002 ~]# systemctl status rpcbind</div><div class="line">● rpcbind.service - RPC bind service</div><div class="line">   Loaded: loaded (/usr/lib/systemd/system/rpcbind.service; indirect; vendor preset: enabled)</div><div class="line">   Active: active (running) since Sun 2017-08-13 13:34:40 CST; 31s ago</div><div class="line"> Main PID: 2289 (rpcbind)</div><div class="line">   CGroup: /system.slice/rpcbind.service</div><div class="line">           └─2289 /sbin/rpcbind -w</div><div class="line"></div><div class="line">Aug 13 13:34:39 test002 systemd[1]: Starting RPC bind service...</div><div class="line">Aug 13 13:34:40 test002 systemd[1]: Started RPC bind service.</div><div class="line">[root@test002 ~]# systemctl status nfs-server</div><div class="line">● nfs-server.service - NFS server and services</div><div class="line">   Loaded: loaded (/usr/lib/systemd/system/nfs-server.service; disabled; vendor preset: disabled)</div><div class="line">   Active: inactive (dead)</div></pre></td></tr></table></figure>
<p>看nfs服务向rpc注册的端口信息(当前nfs-server 没有启动，所有没有注册端口)</p>
<figure class="highlight tap"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@test002 ~]<span class="comment"># rpcinfo -p</span></div><div class="line">   program vers proto   port  service</div><div class="line">   <span class="number"> 100000 </span>  <span class="number"> 4 </span>  tcp   <span class="number"> 111 </span> portmapper</div><div class="line">   <span class="number"> 100000 </span>  <span class="number"> 3 </span>  tcp   <span class="number"> 111 </span> portmapper</div><div class="line">   <span class="number"> 100000 </span>  <span class="number"> 2 </span>  tcp   <span class="number"> 111 </span> portmapper</div><div class="line">   <span class="number"> 100000 </span>  <span class="number"> 4 </span>  udp   <span class="number"> 111 </span> portmapper</div><div class="line">   <span class="number"> 100000 </span>  <span class="number"> 3 </span>  udp   <span class="number"> 111 </span> portmapper</div><div class="line">   <span class="number"> 100000 </span>  <span class="number"> 2 </span>  udp   <span class="number"> 111 </span> portmapper</div></pre></td></tr></table></figure>
<p>如果你此时启动nfs,可以发现nfs 随机注册的端口如下（<strong>暂时不要启动nfs-server， 等下面固定好nfs服务端口后再启动，可以避免重启电脑</strong>）</p>
<figure class="highlight tap"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">[root@test006 ~]<span class="comment"># rpcinfo -p</span></div><div class="line">   program vers proto   port  service</div><div class="line">   <span class="number"> 100000 </span>  <span class="number"> 4 </span>  tcp   <span class="number"> 111 </span> portmapper</div><div class="line">   <span class="number"> 100000 </span>  <span class="number"> 3 </span>  tcp   <span class="number"> 111 </span> portmapper</div><div class="line">   <span class="number"> 100000 </span>  <span class="number"> 2 </span>  tcp   <span class="number"> 111 </span> portmapper</div><div class="line">   <span class="number"> 100000 </span>  <span class="number"> 4 </span>  udp   <span class="number"> 111 </span> portmapper</div><div class="line">   <span class="number"> 100000 </span>  <span class="number"> 3 </span>  udp   <span class="number"> 111 </span> portmapper</div><div class="line">   <span class="number"> 100000 </span>  <span class="number"> 2 </span>  udp   <span class="number"> 111 </span> portmapper</div><div class="line">   <span class="number"> 100024 </span>  <span class="number"> 1 </span>  udp <span class="number"> 49056 </span> status</div><div class="line">   <span class="number"> 100005 </span>  <span class="number"> 1 </span>  udp <span class="number"> 20048 </span> mountd</div><div class="line">   <span class="number"> 100024 </span>  <span class="number"> 1 </span>  tcp <span class="number"> 49730 </span> status</div><div class="line">   <span class="number"> 100005 </span>  <span class="number"> 1 </span>  tcp <span class="number"> 20048 </span> mountd</div><div class="line">   <span class="number"> 100005 </span>  <span class="number"> 2 </span>  udp <span class="number"> 20048 </span> mountd</div><div class="line">   <span class="number"> 100005 </span>  <span class="number"> 2 </span>  tcp <span class="number"> 20048 </span> mountd</div><div class="line">   <span class="number"> 100005 </span>  <span class="number"> 3 </span>  udp <span class="number"> 20048 </span> mountd</div><div class="line">   <span class="number"> 100005 </span>  <span class="number"> 3 </span>  tcp <span class="number"> 20048 </span> mountd</div><div class="line">   <span class="number"> 100003 </span>  <span class="number"> 3 </span>  tcp  <span class="number"> 2049 </span> nfs</div><div class="line">   <span class="number"> 100003 </span>  <span class="number"> 4 </span>  tcp  <span class="number"> 2049 </span> nfs</div><div class="line">   <span class="number"> 100227 </span>  <span class="number"> 3 </span>  tcp  <span class="number"> 2049 </span> nfs_acl</div><div class="line">   <span class="number"> 100003 </span>  <span class="number"> 3 </span>  udp  <span class="number"> 2049 </span> nfs</div><div class="line">   <span class="number"> 100003 </span>  <span class="number"> 4 </span>  udp  <span class="number"> 2049 </span> nfs</div><div class="line">   <span class="number"> 100227 </span>  <span class="number"> 3 </span>  udp  <span class="number"> 2049 </span> nfs_acl</div><div class="line">   <span class="number"> 100021 </span>  <span class="number"> 1 </span>  udp <span class="number"> 56137 </span> nlockmgr</div><div class="line">   <span class="number"> 100021 </span>  <span class="number"> 3 </span>  udp <span class="number"> 56137 </span> nlockmgr</div><div class="line">   <span class="number"> 100021 </span>  <span class="number"> 4 </span>  udp <span class="number"> 56137 </span> nlockmgr</div><div class="line">   <span class="number"> 100021 </span>  <span class="number"> 1 </span>  tcp <span class="number"> 33826 </span> nlockmgr</div><div class="line">   <span class="number"> 100021 </span>  <span class="number"> 3 </span>  tcp <span class="number"> 33826 </span> nlockmgr</div><div class="line">   <span class="number"> 100021 </span>  <span class="number"> 4 </span>  tcp <span class="number"> 33826 </span> nlockmgr</div></pre></td></tr></table></figure>
<h1 id="三、防火墙设置"><a href="#三、防火墙设置" class="headerlink" title="三、防火墙设置"></a>三、防火墙设置</h1><p>NFS 的防火墙特别难设定规则，为什么呢？因为除了固定的port 111, 2049 之外， 还有很多不固定的端口是由rpc.mountd, rpc.rquotad 等服务所开启的。因此我们需要在/etc/sysconfig/nfs 指定特定的端口，这样每次启动nfs 时，相关服务启动的端口就会固定，如此一来， 我们就能够设定正确的防火墙了！</p>
<h2 id="3-1-固定nfs服务端口"><a href="#3-1-固定nfs服务端口" class="headerlink" title="3.1 固定nfs服务端口"></a>3.1 固定nfs服务端口</h2><p>固定端口nfs 2049、portmapper111 ，另外3个服务端口可设置为mountd 892、rpc.statd 662、  nlockmgr 32803、32769</p>
<p>具体配置：</p>
<p><strong>1.修改/etc/sysconfig/nfs文件，将下列内容的注释去掉，如果没有则添加：</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"># Port rpc.mountd should listen on.</div><div class="line">MOUNTD_PORT=892</div><div class="line">#</div><div class="line"># Optional arguments passed to rpc.statd. See rpc.statd(8)</div><div class="line">STATDARG=""</div><div class="line"># Port rpc.statd should listen on.</div><div class="line">STATD_PORT=662</div><div class="line"># Outgoing port statd should used. The default is port</div><div class="line"># is random</div><div class="line">STATD_OUTGOING_PORT=2020</div></pre></td></tr></table></figure>
<p><strong>2. vim /etc/modprobe.d/lockd.conf</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># Set the TCP port that the NFS lock manager should use.</div><div class="line"># port must be a valid TCP port value (1-65535).</div><div class="line">options lockd nlm_tcpport=32803</div><div class="line">#</div><div class="line"># Set the UDP port that the NFS lock manager should use.</div><div class="line"># port must be a valid UDP port value (1-65535).</div><div class="line">options lockd nlm_udpport=32769</div></pre></td></tr></table></figure>
<p>固定之后,启动nfs-server服务，后执行<code>rpcinfo -p</code>命令,查看nfs向rpc注册的端口</p>
<p>（如果你已经启动过nfs-server服务，则光重启NFS服务不能解决问题，需要重启电脑，才能将端口固定）</p>
<figure class="highlight tap"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">[root@test006 ~]<span class="comment"># rpcinfo -p</span></div><div class="line">   program vers proto   port  service</div><div class="line">   <span class="number"> 100000 </span>  <span class="number"> 4 </span>  tcp   <span class="number"> 111 </span> portmapper</div><div class="line">   <span class="number"> 100000 </span>  <span class="number"> 3 </span>  tcp   <span class="number"> 111 </span> portmapper</div><div class="line">   <span class="number"> 100000 </span>  <span class="number"> 2 </span>  tcp   <span class="number"> 111 </span> portmapper</div><div class="line">   <span class="number"> 100000 </span>  <span class="number"> 4 </span>  udp   <span class="number"> 111 </span> portmapper</div><div class="line">   <span class="number"> 100000 </span>  <span class="number"> 3 </span>  udp   <span class="number"> 111 </span> portmapper</div><div class="line">   <span class="number"> 100000 </span>  <span class="number"> 2 </span>  udp   <span class="number"> 111 </span> portmapper</div><div class="line">   <span class="number"> 100005 </span>  <span class="number"> 1 </span>  udp   <span class="number"> 892 </span> mountd</div><div class="line">   <span class="number"> 100005 </span>  <span class="number"> 1 </span>  tcp   <span class="number"> 892 </span> mountd</div><div class="line">   <span class="number"> 100005 </span>  <span class="number"> 2 </span>  udp   <span class="number"> 892 </span> mountd</div><div class="line">   <span class="number"> 100005 </span>  <span class="number"> 2 </span>  tcp   <span class="number"> 892 </span> mountd</div><div class="line">   <span class="number"> 100005 </span>  <span class="number"> 3 </span>  udp   <span class="number"> 892 </span> mountd</div><div class="line">   <span class="number"> 100005 </span>  <span class="number"> 3 </span>  tcp   <span class="number"> 892 </span> mountd</div><div class="line">   <span class="number"> 100024 </span>  <span class="number"> 1 </span>  udp   <span class="number"> 662 </span> status</div><div class="line">   <span class="number"> 100024 </span>  <span class="number"> 1 </span>  tcp   <span class="number"> 662 </span> status</div><div class="line">   <span class="number"> 100003 </span>  <span class="number"> 3 </span>  tcp  <span class="number"> 2049 </span> nfs</div><div class="line">   <span class="number"> 100003 </span>  <span class="number"> 4 </span>  tcp  <span class="number"> 2049 </span> nfs</div><div class="line">   <span class="number"> 100227 </span>  <span class="number"> 3 </span>  tcp  <span class="number"> 2049 </span> nfs_acl</div><div class="line">   <span class="number"> 100003 </span>  <span class="number"> 3 </span>  udp  <span class="number"> 2049 </span> nfs</div><div class="line">   <span class="number"> 100003 </span>  <span class="number"> 4 </span>  udp  <span class="number"> 2049 </span> nfs</div><div class="line">   <span class="number"> 100227 </span>  <span class="number"> 3 </span>  udp  <span class="number"> 2049 </span> nfs_acl</div><div class="line">   <span class="number"> 100021 </span>  <span class="number"> 1 </span>  udp <span class="number"> 32769 </span> nlockmgr</div><div class="line">   <span class="number"> 100021 </span>  <span class="number"> 3 </span>  udp <span class="number"> 32769 </span> nlockmgr</div><div class="line">   <span class="number"> 100021 </span>  <span class="number"> 4 </span>  udp <span class="number"> 32769 </span> nlockmgr</div><div class="line">   <span class="number"> 100021 </span>  <span class="number"> 1 </span>  tcp <span class="number"> 32803 </span> nlockmgr</div><div class="line">   <span class="number"> 100021 </span>  <span class="number"> 3 </span>  tcp <span class="number"> 32803 </span> nlockmgr</div><div class="line">   <span class="number"> 100021 </span>  <span class="number"> 4 </span>  tcp <span class="number"> 32803 </span> nlockmgr</div></pre></td></tr></table></figure>
<h2 id="3-2-配置防火墙："><a href="#3-2-配置防火墙：" class="headerlink" title="3.2 配置防火墙："></a>3.2 配置防火墙：</h2><p>编辑firewalld中nfs服务的配置文件：</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp /usr/<span class="class"><span class="keyword">lib</span>/<span class="title">firewalld</span>/<span class="title">services</span>/<span class="title">nfs</span>.<span class="title">xml</span> /<span class="title">etc</span>/<span class="title">firewalld</span>/<span class="title">services</span>/</span></div></pre></td></tr></table></figure>
<p>将刚才固定的那几个端口加入配置文件：</p>
<figure class="highlight vhdl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</div><div class="line">&lt;service&gt;</div><div class="line">  &lt;short&gt;NFS4&lt;/short&gt;</div><div class="line">  &lt;description&gt;The NFS4 protocol <span class="keyword">is</span> used <span class="keyword">to</span> share files via TCP networking. You will need <span class="keyword">to</span> have the NFS tools installed <span class="keyword">and</span> properly configure your NFS server <span class="keyword">for</span> this option <span class="keyword">to</span> be useful.&lt;/description&gt;</div><div class="line">  &lt;<span class="keyword">port</span> protocol=<span class="string">"tcp"</span> <span class="keyword">port</span>=<span class="string">"111"</span>/&gt;</div><div class="line">  &lt;<span class="keyword">port</span> protocol=<span class="string">"tcp"</span> <span class="keyword">port</span>=<span class="string">"662"</span>/&gt;</div><div class="line">  &lt;<span class="keyword">port</span> protocol=<span class="string">"tcp"</span> <span class="keyword">port</span>=<span class="string">"892"</span>/&gt;</div><div class="line">  &lt;<span class="keyword">port</span> protocol=<span class="string">"tcp"</span> <span class="keyword">port</span>=<span class="string">"2049"</span>/&gt;</div><div class="line">  &lt;<span class="keyword">port</span> protocol=<span class="string">"tcp"</span> <span class="keyword">port</span>=<span class="string">"32803"</span>/&gt;</div><div class="line">  &lt;<span class="keyword">port</span> protocol=<span class="string">"udp"</span> <span class="keyword">port</span>=<span class="string">"111"</span>/&gt;</div><div class="line">  &lt;<span class="keyword">port</span> protocol=<span class="string">"udp"</span> <span class="keyword">port</span>=<span class="string">"662"</span>/&gt;</div><div class="line">  &lt;<span class="keyword">port</span> protocol=<span class="string">"udp"</span> <span class="keyword">port</span>=<span class="string">"892"</span>/&gt;</div><div class="line">  &lt;<span class="keyword">port</span> protocol=<span class="string">"udp"</span> <span class="keyword">port</span>=<span class="string">"2049"</span>/&gt;</div><div class="line">  &lt;<span class="keyword">port</span> protocol=<span class="string">"udp"</span> <span class="keyword">port</span>=<span class="string">"32769"</span>/&gt;</div><div class="line">&lt;/service&gt;</div></pre></td></tr></table></figure>
<p>开启nfs</p>
<figure class="highlight subunit"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@test006 nfs]# firewall-cmd --permanent --zone=public --add-service=nfs</div><div class="line"><span class="keyword">success</span></div><div class="line">[root@test006 nfs]# firewall-cmd --reload</div><div class="line">success</div></pre></td></tr></table></figure>
<h1 id="四、挂载"><a href="#四、挂载" class="headerlink" title="四、挂载"></a>四、挂载</h1><h2 id="4-1-exports文件配置格式"><a href="#4-1-exports文件配置格式" class="headerlink" title="4.1 exports文件配置格式"></a>4.1 exports文件配置格式</h2><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">NFS共享的目录 NFS客户端地址<span class="number">1</span>(参数<span class="number">1</span>,参数<span class="number">2</span>,...) 客户端地址<span class="number">2</span>(参数<span class="number">1</span>,参数<span class="number">2</span>,...)</div></pre></td></tr></table></figure>
<p><strong>说明：</strong><br>NFS共享目录：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">要用绝对路径，可被nfsnobody读写。</div></pre></td></tr></table></figure>
<p>NFS客户端地址：</p>
<figure class="highlight x86asm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">指定<span class="built_in">IP</span>: <span class="number">192.168</span><span class="meta">.0</span><span class="meta">.1</span></div><div class="line">指定子网所有主机: <span class="number">192.168</span><span class="meta">.0</span><span class="meta">.0</span>/<span class="number">24</span></div><div class="line">指定域名的主机: <span class="keyword">test</span>.com</div><div class="line">指定域名所有主机: *.test.com</div><div class="line">所有主机: *</div></pre></td></tr></table></figure>
<p>参数：</p>
<table>
<thead>
<tr>
<th>参数值</th>
<th>内容说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>rw ro</td>
<td>该目录分享的权限是可擦写(read-write) 或只读(read-only)，但最终能不能读写，还是与文件系统的rwx 及身份有关。</td>
</tr>
<tr>
<td>sync async</td>
<td>sync 代表数据会同步写入到内存与硬盘中，async 则代表数据会先暂存于内存当中，而非直接写入硬盘！</td>
</tr>
<tr>
<td>no_root_squash root_squash</td>
<td>客户端使用NFS 文件系统的账号若为 root 时，系统该如何判断这个账号的身份？预设的情况下，客户端root 的身份会由root_squash 的设定压缩成nfsnobody， 如此对服务器的系统会较有保障。但如果你想要开放客户端使用root 身份来操作服务器的文件系统，那么这里就得要开 no_root_squash 才行！</td>
</tr>
<tr>
<td>all_squash</td>
<td>不论登入NFS 的使用者身份为何， 他的身份都会被压缩成为匿名用户，通常也就是 nobody(nfsnobody) 啦！</td>
</tr>
<tr>
<td>anonuid anongid</td>
<td>anon 意指anonymous (匿名者) 前面关于*_squash 提到的匿名用户的UID 设定值，通常为nobody(nfsnobody)，但是你可以自行设定这个UID 的值！当然，这个UID 必需要存在于你的/etc/passwd 当中！anonuid 指的是UID 而anongid 则是群组的GID 啰。</td>
</tr>
</tbody>
</table>
<h2 id="4-2-Server创建nfs共享"><a href="#4-2-Server创建nfs共享" class="headerlink" title="4.2 Server创建nfs共享"></a>4.2 Server创建nfs共享</h2><p>假如uid=1001 gid=1001是应用用户</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir -p /opt/nfsshare</div><div class="line">[root@<span class="built_in">test</span>006 ~]<span class="comment"># cat /etc/exports</span></div><div class="line">/opt/nfsshare 172.17.84.72(rw,sync,root_squash,all_squash,anonuid=1001,anongid=1001)</div></pre></td></tr></table></figure>
<p>重新加载nfs配置</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root<span class="variable">@test006</span> ~]<span class="comment"># exportfs -rv</span></div><div class="line">exporting <span class="number">172.17</span>.<span class="number">84.72</span><span class="symbol">:/opt/nfsshare</span></div></pre></td></tr></table></figure>
<p>客户端查看nfs服务器挂载情况</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">showmount</span> <span class="selector-tag">-e</span> 172<span class="selector-class">.17</span><span class="selector-class">.84</span><span class="selector-class">.71</span></div></pre></td></tr></table></figure>
<h2 id="4-3-Client端挂载"><a href="#4-3-Client端挂载" class="headerlink" title="4.3 Client端挂载"></a>4.3 Client端挂载</h2><p>挂载测试</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir -p /mnt/nfsshare</div><div class="line">mount -t nfs  -o soft <span class="number">172.17</span>.<span class="number">84.71</span><span class="symbol">:/opt/nfsshare</span> /mnt/nfsshare</div></pre></td></tr></table></figure>
<p>写入fstab</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root<span class="variable">@mysql002</span> ~]<span class="comment"># tail -n 1 /etc/fstab</span></div><div class="line"><span class="number">172.17</span>.<span class="number">84.71</span><span class="symbol">:/opt/nfsshare</span>  /mnt/nfsshare  nfs defaults  <span class="number">0</span> <span class="number">0</span></div></pre></td></tr></table></figure>
<p>因为ID不一致的问题 建议Client端新建相同uid和gid的用户</p>
<h1 id="五、autofs实现自动挂载"><a href="#五、autofs实现自动挂载" class="headerlink" title="五、autofs实现自动挂载"></a>五、autofs实现自动挂载</h1><p>参考：<a href="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Storage_Administration_Guide/nfs-autofs.html" target="_blank" rel="external">autofs</a></p>
<h2 id="5-1-客户端安装autofs"><a href="#5-1-客户端安装autofs" class="headerlink" title="5.1  客户端安装autofs"></a>5.1  客户端安装autofs</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">yum <span class="keyword">install</span> autofs -y</div><div class="line">systemctl <span class="keyword">enable</span> autofs</div><div class="line">systemctl <span class="keyword">start</span> autofs</div></pre></td></tr></table></figure>
<h2 id="5-2-挂载为本地的非一级目录"><a href="#5-2-挂载为本地的非一级目录" class="headerlink" title="5.2  挂载为本地的非一级目录"></a>5.2  挂载为本地的非一级目录</h2><p>将192.168.0.103:/data目录挂载到192.168.0.104的/dir1/dir2目录</p>
<p>查看服务端共享</p>
<figure class="highlight x86asm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@mysql002 ~]# showmount -e <span class="number">192.168</span><span class="meta">.0</span><span class="meta">.103</span></div><div class="line">Export list for <span class="number">192.168</span><span class="meta">.0</span><span class="meta">.103</span>:</div><div class="line">/data <span class="number">192.168</span><span class="meta">.0</span><span class="meta">.104</span></div></pre></td></tr></table></figure>
<p>修改客户端<code>vim /etc/auto.master</code>,添加以下内容, 意思是系统访问dir1下面的文件的时候，去/etc/auto.nfs 去查找nfs的配置</p>
<figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">/dir1</span>      <span class="string">/etc/auto.nfs</span></div></pre></td></tr></table></figure>
<p>/etc/auto.nfs 内容如下，文件需要新建</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root<span class="variable">@mysql002</span> dir2]<span class="comment"># cat /etc/auto.nfs</span></div><div class="line">dir2 -fstype=nfs <span class="number">192.168</span>.<span class="number">0</span>.<span class="number">103</span><span class="symbol">:/data</span></div></pre></td></tr></table></figure>
<h2 id="5-3-挂载位本地的一级目录"><a href="#5-3-挂载位本地的一级目录" class="headerlink" title="5.3 挂载位本地的一级目录"></a>5.3 挂载位本地的一级目录</h2><p>修改客户端<code>vim /etc/auto.master</code>,添加以下内容, </p>
<figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">/-</span>      <span class="string">/etc/auto.nfs</span></div></pre></td></tr></table></figure>
<p>/etc/auto.nfs 内容如下，文件需要新建</p>
<figure class="highlight haskell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/<span class="class"><span class="keyword">data</span>  -fstype=nfs 192.168.0.103:/<span class="keyword">data</span></span></div></pre></td></tr></table></figure>
<h1 id="五、常见错误"><a href="#五、常见错误" class="headerlink" title="五、常见错误"></a>五、常见错误</h1><p>1 .  在CentOS7服务器上配置NFS服务并共享出目录后，发现客户端不能Mount共享出的目录，错误提示：</p>
<figure class="highlight gauss"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[NFS mount <span class="built_in">Error</span>] <span class="keyword">System</span> <span class="built_in">Error</span>: No route to host.</div></pre></td></tr></table></figure>
<p>关闭服务器端的防火墙后，问题解决，说明是防火墙端口的问题。</p>
<p>2  client端无法读写</p>
<ul>
<li>确保nfs-server /etc/exports中开启了rw</li>
<li>确保client端映射到server端的用户对于server端的目录有读写权限（涉及到uid,gid是否被压缩）</li>
<li>确保client端挂载参数包含rw</li>
</ul>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Storage_Administration_Guide/ch-nfs.html" target="_blank" rel="external">CHAPTER 8. NETWORK FILE SYSTEM (NFS)</a></p>
<p><a href="http://linux.vbird.org/linux_server/0330nfs.php" target="_blank" rel="external">第十三章、文件服务器之一：NFS服务器</a></p>
<p><a href="https://www.howtoforge.com/tutorial/setting-up-an-nfs-server-and-client-on-centos-7/" target="_blank" rel="external">https://www.howtoforge.com/tutorial/setting-up-an-nfs-server-and-client-on-centos-7/</a></p>
<p><a href="http://www.golinuxhub.com/2017/06/rpcbindsocket-failed-to-listen-on.html" target="_blank" rel="external">sysctl.conf禁用ipv6导致nfs无法启动的问题解决</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、NFS-简介&quot;&gt;&lt;a href=&quot;#一、NFS-简介&quot; class=&quot;headerlink&quot; title=&quot;一、NFS  简介&quot;&gt;&lt;/a&gt;一、NFS  简介&lt;/h1&gt;&lt;p&gt;NFS（Network File System）即网络文件系统，它允许网络中的计算机之间通过TCP/IP网络共享资源。在NFS的应用中，本地NFS的客户端应用可以透明地读写位于远端NFS服务器上的文件，就像访问本地文件一样。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://image.wangshengzhuang.com/17-8-7/50203549.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://wangshengzhuang.com/categories/Linux/"/>
    
      <category term="Linux基础" scheme="http://wangshengzhuang.com/categories/Linux/Linux%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="NFS" scheme="http://wangshengzhuang.com/tags/NFS/"/>
    
      <category term="Linux" scheme="http://wangshengzhuang.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Configuring Simple Virtual IP Address Failover Using Keepalived</title>
    <link href="http://wangshengzhuang.com/2017/06/06/%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3/Keepalived/Configuring%20Simple%20Virtual%20IP%20Address%20Failover%20Using%20Keepalived/"/>
    <id>http://wangshengzhuang.com/2017/06/06/运维相关/Keepalived/Configuring Simple Virtual IP Address Failover Using Keepalived/</id>
    <published>2017-06-06T15:26:47.000Z</published>
    <updated>2017-07-03T14:32:21.030Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍了利用Keepalived实现简单的VIP自动切换。</p>
<p><img src="http://image.wangshengzhuang.com/17-7-3/62480061.jpg" alt=""></p>
<a id="more"></a>
<h1 id="Configuring-Simple-Virtual-IP-Address-Failover-Using-Keepalived"><a href="#Configuring-Simple-Virtual-IP-Address-Failover-Using-Keepalived" class="headerlink" title="Configuring Simple Virtual IP Address Failover Using Keepalived"></a>Configuring Simple Virtual IP Address Failover Using Keepalived</h1><p>A typical Keepalived high-availability configuration consists of one master server and one or more backup servers. One or more virtual IP addresses, defined as <em>VRRP instances</em>, are assigned to the master server’s network interfaces so that it can service network clients. The backup servers listen for multicast VRRP advertisement packets that the master server transmits at regular intervals. The default advertisement interval is one second. If the backup nodes fail to receive three consecutive VRRP advertisements, the backup server with the highest assigned priority takes over as the master server and assigns the virtual IP addresses to its own network interfaces. If several backup servers have the same priority, the backup server with the highest IP address value becomes the master server.</p>
<p>The following example uses Keepalived to implement a simple failover configuration on two servers. One server acts as the master, the other acts as a backup, and the master server has a higher priority than the backup server.</p>
<p><img src="http://image.wangshengzhuang.com/17-7-2/60540152.jpg" alt=""></p>
<p> the virtual IP address 10.0.0.100 is initially assigned to the master server (10.0.0.71). When the master server fails, the backup server (10.0.0.72) becomes the new master server and is assigned the virtual IP address 10.0.0.100.</p>
<h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><p><code>/etc/keepalived/keepalived.conf</code>  on the master server:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">global_defs &#123;</div><div class="line">   notification_email &#123;</div><div class="line">     root@mydomain.com</div><div class="line">   &#125;</div><div class="line">   notification_email_from svr1@mydomain.com</div><div class="line">   smtp_server localhost</div><div class="line">   smtp_connect_timeout 30</div><div class="line">&#125;</div><div class="line"></div><div class="line">vrrp_instance VRRP1 &#123;</div><div class="line">    state MASTER</div><div class="line">#   Specify the network interface to which the virtual address is assigned</div><div class="line">    interface enp0s8</div><div class="line">#   The virtual router ID must be unique to each VRRP instance that you define</div><div class="line">    virtual_router_id 41</div><div class="line">#   Set the value of priority higher on the master server than on a backup server</div><div class="line">    priority 200</div><div class="line">    advert_int 1</div><div class="line">    authentication &#123;</div><div class="line">        auth_type PASS</div><div class="line">        auth_pass 1066</div><div class="line">    &#125;</div><div class="line">    virtual_ipaddress &#123;</div><div class="line">        10.0.0.100/24</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>/etc/keepalived/keepalived.conf</code> </p>
<p>The configuration of the backup server is the same except for the values of <code>notification_email_from</code>, <code>state</code>, <code>priority</code>, and possibly <code>interface</code> if the system hardware configuration is different:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">global_defs &#123;</div><div class="line">   notification_email &#123;</div><div class="line">     root@mydomain.com</div><div class="line">   &#125;</div><div class="line">   notification_email_from svr2@mydomain.com</div><div class="line">   smtp_server localhost</div><div class="line">   smtp_connect_timeout 30</div><div class="line">&#125;</div><div class="line"></div><div class="line">vrrp_instance VRRP1 &#123;</div><div class="line">    state BACKUP</div><div class="line">#   Specify the network interface to which the virtual address is assigned</div><div class="line">    interface enp0s8</div><div class="line">    virtual_router_id 41</div><div class="line">#   Set the value of priority lower on the backup server than on the master server</div><div class="line">    priority 100</div><div class="line">    advert_int 1</div><div class="line">    authentication &#123;</div><div class="line">        auth_type PASS</div><div class="line">        auth_pass 1066</div><div class="line">    &#125;</div><div class="line">    virtual_ipaddress &#123;</div><div class="line">        10.0.0.100/24</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>查看IP 绑定</p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ip <span class="keyword">addr </span><span class="keyword">show </span></div><div class="line">ip <span class="keyword">addr </span>list</div></pre></td></tr></table></figure>
<p>另外切换时 <code>/var/log/messages</code> 记录了主从切换的信息</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p> (Configuring Simple Virtual IP Address Failover Using Keepalived](<a href="https://docs.oracle.com/cd/E52668_01/E54669/html/section_uxg_lzh_nr.html" target="_blank" rel="external">https://docs.oracle.com/cd/E52668_01/E54669/html/section_uxg_lzh_nr.html</a>)</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍了利用Keepalived实现简单的VIP自动切换。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://image.wangshengzhuang.com/17-7-3/62480061.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="运维相关" scheme="http://wangshengzhuang.com/categories/%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3/"/>
    
      <category term="Keepalived" scheme="http://wangshengzhuang.com/categories/%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3/Keepalived/"/>
    
    
      <category term="Keepalived" scheme="http://wangshengzhuang.com/tags/Keepalived/"/>
    
  </entry>
  
  <entry>
    <title>VRRP(Virtual Router Redundancy Protocol) 虚拟路由器冗余协议简介</title>
    <link href="http://wangshengzhuang.com/2017/06/05/%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3/Keepalived/VRRP(Virtual%20Router%20Redundancy%20Protocol)%20%E8%99%9A%E6%8B%9F%E8%B7%AF%E7%94%B1%E5%99%A8%E5%86%97%E4%BD%99%E5%8D%8F%E8%AE%AE%E7%AE%80%E4%BB%8B/"/>
    <id>http://wangshengzhuang.com/2017/06/05/运维相关/Keepalived/VRRP(Virtual Router Redundancy Protocol) 虚拟路由器冗余协议简介/</id>
    <published>2017-06-05T15:26:47.000Z</published>
    <updated>2017-07-03T14:32:10.810Z</updated>
    
    <content type="html"><![CDATA[<p>因工作中使用Keepalived配置Nginx代理和MySQL代理的高可用，而Keepalived是VRRP协议在linux上的软件实现。因此了解了下VRRP的基础。</p>
<p><img src="http://image.wangshengzhuang.com/17-7-2/71192622.jpg" alt=""></p>
<a id="more"></a>
<h1 id="1-VRRP技术的引入"><a href="#1-VRRP技术的引入" class="headerlink" title="1. VRRP技术的引入"></a>1. VRRP技术的引入</h1><p>随着Internet的发展，人们对网络的可靠性的要求越来越高。对于局域网用户来说，能够时刻与外部网络保持联系是非常重要的。</p>
<p>我们知道，为了实现不同子网之间的设备通信，需要配置路由。</p>
<p>目前常用的指定路由方法有两种：</p>
<ol>
<li>​       第一种是通过路由协议 ：RIP、OSPF动态学习</li>
<li>​       第二种是通过静态路由： 对终端PC机配置静态路由。</li>
</ol>
<p>这两种路由各有各的优缺点：</p>
<p>第一种路由可以自动寻找最优路径，邻居路由也可以通过学习来获得路由表，但是动态路由占用线路带宽和CPU处理时间。</p>
<p>第二种路由是不需要CPU处理时间同样也不占用线路带宽，但是这个路由需要对终端的PC机进行配置网关来实现，工作量是比较大的。内部网络中的所有主机都设置一条相同的缺省路由，指向出口网关，实现主机与外部网络的通信。</p>
<p>对于以上的两种路由在现在来说都是广泛应用的。我们现在只来分析静态路由的缺点，因为VRRP技术就是使用在静态路由上，而不是动态路由上。</p>
<p>对于静态路由来说，对终端PC机配置默认网关。如果作为默认网关的路由器出现故障，所有使用该网关为下一跳的主机的通信是要中断的。如下图所示；</p>
<p><img src="http://image.wangshengzhuang.com/17-7-2/90512760.jpg" alt=""></p>
<p>在上图中，主机Ａ—Ｄ都配置了一个默认的网关：１0.1.1.1，网关路由的下一跳指向主机所在网段内的一个路由器RouterA，RouterA将报文发送到外网，但是如果现在RouterA坏掉了，那么所有的主机将无法与其他网段进行通信了。</p>
<p>配置多个出口网关是提高系统可靠性的常见方法，但局域网内的主机设备通常不支持动态路由协议，如何在多个出口网关之间进行选路是个问题。</p>
<p>为了解决以上的问题，将可以承担网关功能的路由器加入到备份组中，形成一台虚拟路由器，由VRRP的选举机制决定哪台路由器承担转发任务，局域网内的主机只需将虚拟路由器配置为缺省网关。我们可以加一个路由器RouterB，当RouterA坏掉时，所有的PC机将网关切换到RouterB上的网关。这样就实现了路由器的备份。这个技术就是VRRP技术—虚拟路由器冗余协议。</p>
<p><img src="http://image.wangshengzhuang.com/17-7-2/30323425.jpg" alt=""></p>
<h1 id="2-VRRP简介"><a href="#2-VRRP简介" class="headerlink" title="2. VRRP简介"></a>2. VRRP简介</h1><p><strong>VRRP（Virtual Router Redundancy Protocol）虚拟路由冗余协议</strong>，IETF（Internet Engineering Task Force，因特网工程任务组）推出，用来解决局域网主机访问外部网络的可靠性问题。<strong>VRRP协议的实现有VRRPv2和VRRPv3两个版本</strong>，VRRPv2于IPv4，VRRPv3基于IPv6。Vrrp协议在linux上的实现（软件实现）是keepalived。</p>
<p>VRRP是一种容错协议，它通过把几台路由设备联合组成一台虚拟的路由设备，并通过一定的机制来保证当主机的下一跳设备出现故障时，可以及时将业务切换到其它设备，从而保持通讯的连续性和可靠性。使用VRRP的优势在于：既不需要改变组网情况，也不需要在主机上配置任何动态路由或者路由发现协议，就可以获得更高可靠性的缺省路由。如下图所示： 有两个路由器，从两个路由器中选举出一个路由器作为主路由器，其他的都是备份路由器，主路由器负责发转发数据报，而备份路由器处于空闲状态，当主路由器出现故障后，备份路由器会成为主路由器，代替主路由器实现转发功能。</p>
<p><img src="http://image.wangshengzhuang.com/17-7-2/45816589.jpg" alt=""></p>
<h1 id="3-VRRP相关概念"><a href="#3-VRRP相关概念" class="headerlink" title="3. VRRP相关概念"></a>3. VRRP相关概念</h1><table>
<thead>
<tr>
<th><strong>概念</strong></th>
<th><strong>解释</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>VRRP路由器（VRRP Router</td>
<td>所有运行VRRP协议的路由器就叫做VRRP路由器，它可能属于一个或多个虚拟路由器。</td>
</tr>
<tr>
<td>虚拟路由器（Virtual Router）</td>
<td>虚拟路由器是VRRP备份组中所有路由器的集合，它是一个逻辑概念，并不是正真存在的。从备份组外面看备份组中的路由器，感觉组中的所有路由器就像一个 一样，你可以理解为 在一个组中： 主路由器+所有备份路由器=虚拟路由器。虚拟路由器有一个虚拟的IP地址和MAC地址。如果虚拟IP和备份组中的某台路由器的IP相同的话，那么这台路由器称为IP地址拥有者，并且作为备份组中的主路由器。</td>
</tr>
<tr>
<td>虚拟IP地址(Virtual IP Address)</td>
<td>虚拟路由器的IP地址，一个虚拟路由器可以有一个或多个IP地址，由用户配置。</td>
</tr>
<tr>
<td>IP地址拥有者（IP Address Owner）</td>
<td>如果一个VRRP路由器将虚拟路由器的IP地址作为真实的接口地址，则该设备是IP地址拥有者。 当这台设备正常工作时，它会响应目的地址是虚拟IP地址的报文，如ping、TCP连接等。</td>
</tr>
<tr>
<td>虚拟MAC地址</td>
<td>是虚拟路由器根据虚拟路由器ID生成的MAC地址。 一个虚拟路由器拥有一个虚拟MAC地址，格式为：00-00-5E-00-01-{VRID}。 VRID为VRRP组的编号，范围是0~255. 当虚拟路由器回应ARP请求时，使用虚拟MAC地址，而不是接口的真实MAC地址。</td>
</tr>
<tr>
<td>主IP地址（Primary IP Address）</td>
<td>虚拟路由器的 IP 地址可以是备份组所在网段中未被分配的IP 地址，也可以和备份组内的某个路由器的接口IP 地址相同。从接口的真实IP地址中选出来的一个主用IP地址，通常选择配置的第一个IP地址。 VRRP广播报文使用主IP地址作为IP报文的源地址。</td>
</tr>
<tr>
<td>Master路由器（Virtual Router Master）</td>
<td>是承担转发报文或者应答ARP请求的VRRP路由器，转发报文都是发送到虚拟IP地址的。 如果IP地址拥有者是可用的，通常它将成为Master。</td>
</tr>
<tr>
<td>Backup路由器（Virtual Router Backup）</td>
<td>一组没有承担转发任务的VRRP路由器，当Master设备出现故障时，它们将通过竞选成为新的Master。</td>
</tr>
<tr>
<td>抢占模式</td>
<td>在抢占模式下，如果Backup的优先级比当前Master的优先级高，将主动将自己升级成Master。</td>
</tr>
</tbody>
</table>
<p>如下图所示:  RA、RB和RC都是VRRP路由器，他们构成了一个VRRP备份组，RA为主路由器，RB和RC为备份路由器，这三台路由器从外界来看就像一台一样，这样构成一个虚拟路由器Router Group，虚拟路由器有一个虚拟的ＩＰ地址为10.1.1.1（RA主路由器的IP）。RA是IP地址拥有者，也是主路由器。</p>
<p><img src="http://image.wangshengzhuang.com/17-7-2/71893986.jpg" alt=""></p>
<h1 id="4-VRRP的工作过程和原理"><a href="#4-VRRP的工作过程和原理" class="headerlink" title="4. VRRP的工作过程和原理"></a>4. VRRP的工作过程和原理</h1><p>VRRP将局域网的一组路由器构成一个备份组，相当于一台虚拟路由器。局域网内的主机只需要知道这个虚拟路由器的IP地址，并不需知道具体某台设备的IP地址，将网络内主机的缺省网关设置为该虚拟路由器的IP地址，主机就可以利用该虚拟网关与外部网络进行通信。</p>
<p>VRRP将该虚拟路由器动态关联到承担传输业务的物理路由器上，当该物理路由器出现故障时，再次选择新路由器来接替业务传输工作，整个过程对用户完全透明，实现了内部网络和外部网络不间断通信。</p>
<p><img src="http://image.wangshengzhuang.com/17-7-2/71192622.jpg" alt=""></p>
<p>如图所示，虚拟路由器的组网环境如下：</p>
<ul>
<li>RouterA、RouterB和RouterC属于同一个VRRP组，组成一个虚拟路由器，这个虚拟路由器有自己的IP地址10.110.10.1。虚拟IP地址可以直接指定，也可以借用该VRRP组所包含的路由器上某接口地址。</li>
<li>物理路由器RouterA、RouterB和RouterC的实际IP地址分别是10.110.10.5、10.110.10.6和10.110.10.7。</li>
<li>局域网内的主机只需要将缺省路由设为10.110.10.1即可，无需知道具体路由器上的接口地址。</li>
</ul>
<h2 id="4-1-VRRP的状态"><a href="#4-1-VRRP的状态" class="headerlink" title="4.1 VRRP的状态"></a>4.1 VRRP的状态</h2><p>VRRP协议中定义了三种状态机：初始状态（Initialize）、活动状态（Master）、备份状态（Backup）。其中，只有处于活动状态的设备才可以转发那些发送到虚拟IP地址的报文。</p>
<p><img src="http://image.wangshengzhuang.com/17-7-2/70221115.jpg" alt=""></p>
<p><strong>Initialize</strong></p>
<p>设备启动时进入此状态，当收到接口Startup的消息，将转入Backup或Master状态（IP地址拥有者的接口优先级为255，直接转为Master）。在此状态时，不会对VRRP报文做任何处理。</p>
<p><strong>Master</strong></p>
<p>当路由器处于Master状态时，它将会做下列工作：</p>
<ul>
<li>定期发送VRRP报文。</li>
<li>以虚拟MAC地址响应对虚拟IP地址的ARP请求。</li>
<li>转发目的MAC地址为虚拟MAC地址的IP报文。</li>
<li>如果它是这个虚拟IP地址的拥有者，则接收目的IP地址为这个虚拟IP地址的IP报文。否则，丢弃这个IP报文。</li>
<li>如果收到比自己优先级大的报文则转为Backup状态。</li>
<li>如果收到优先级和自己相同的报文，并且发送端的主IP地址比自己的主IP地址大，则转为Backup状态。</li>
<li>当接收到接口的Shutdown事件时，转为Initialize。</li>
</ul>
<p><strong>Backup</strong></p>
<p>当路由器处于Backup状态时，它将会做下列工作：</p>
<ul>
<li>接收Master发送的VRRP报文，判断Master的状态是否正常。</li>
<li>对虚拟IP地址的ARP请求，不做响应。</li>
<li>丢弃目的MAC地址为虚拟MAC地址的IP报文。</li>
<li>丢弃目的IP地址为虚拟IP地址的IP报文。</li>
<li>Backup状态下如果收到比自己优先级小的报文时，丢弃报文，不重置定时器；如果收到优先级和自己相同的报文，则重置定时器，不进一步比较IP地址。</li>
<li>当Backup接收到MASTER_DOWN_TIMER定时器超时的事件时，才会转为Master。</li>
<li>当接收到接口的Shutdown事件时，转为Initialize。</li>
</ul>
<h2 id="4-2-VRRP工作过程"><a href="#4-2-VRRP工作过程" class="headerlink" title="4.2 VRRP工作过程"></a>4.2 VRRP工作过程</h2><ol>
<li>路由器使能VRRP 功能后，会根据优先级确定自己在备份组中的角色。优先级高的路由器成为Master 路由器，优先级低的成为Backup 路由器。Master 路由器定期发送VRRP 通告报文，通知备份组内的其他设备自己工作正常；Backup 路由器则启动定时器等待通告报文的到来。</li>
<li>在抢占方式下，当Backup 路由器收到VRRP 通告报文后，会将自己的优先级与通告报 文中的优先级进行比较。如果大于通告报文中的优先级，则成为Master 路由器；否则将保持Backup状态</li>
<li>在非抢占方式下，只要Master 路由器没有出现故障，备份组中的路由器始终保持Master 或Backup 状态，Backup 路由器即使随后被配置了更高的优先级也不会成为Master 路由器</li>
<li>如果Backup 路由器的定时器超时后仍未收到Master 路由器发送来的VRRP 通告报文，则认为Master 路由器已经无法正常工作，此时Backup 路由器会认为自己是Master 路由器，并对外发送VRRP 通告报文。一个VRRP组里有多台备份路由器时，短时间内可能产生多个Master，此时，路由器将会将收到的VRRP报文中的优先级与本地优先级做比较。从而选取优先级高的设备做Master。备份组内的路由器根据优先级选举出Master 路由器，承担报文的转发功能</li>
<li>虚拟路由器状态切换时，Master路由器由一台设备切换为另外一台设备，新的 Master路由器只是简单地发送一个携带虚拟路由器的 MAC 地址和虚拟 IP地址信息的免费 ARP报文，这样就可以更新与它连接的主机或设备中的ARP 相关信息。网络中的主机感知不到Master路由器已经切换为另外一台设备。</li>
</ol>
<h2 id="4-3-VRRP选举机制"><a href="#4-3-VRRP选举机制" class="headerlink" title="4.3 VRRP选举机制"></a>4.3 VRRP选举机制</h2><p>VRRP使用选举机制来确定路由器的状态，运行VRRP的一组路由器对外构成了一个虚拟路由器，其中一台路由器处于Master状态，其他处于Backup状态。所以主路由器又叫做Master路由器，备份路由器又叫做Backup路由器。</p>
<p><strong>优先级选举：</strong></p>
<ol>
<li>1.VRRP组中IP拥有者。如果虚拟IP地址与VRRP组中的某台VRRP路由器IP地址相同，则此路由器为IP地址拥有者，这台路由器将被定位主路由器。</li>
<li>比较优先级。如果没有IP地址拥有者，则比较路由器的优先级，优先级的范围是0~255，大的作为主路由器。</li>
<li>比较IP地址。在没有Ip地址拥有者和优先级相同的情况下，IP地址大的作为主路由器。</li>
</ol>
<p>如下图所示： 虚拟IP为10.1.1.254，在VRRP组中没有IP地址拥有者，则比较优先级，很明显RB和RA的优先级要大于RC，则比较RA和RB的IP地址，RB的IP地址大。所以RB为组中的主路由器。</p>
<p><img src="http://image.wangshengzhuang.com/17-7-2/19860403.jpg" alt=""></p>
<h2 id="4-4-VRRP报文格式"><a href="#4-4-VRRP报文格式" class="headerlink" title="4.4. VRRP报文格式"></a>4.4. VRRP报文格式</h2><p>VRRP只使用VRRP通告报文。</p>
<p>VRRP通告报文使用Ip组播数据包进行封装，组播地址为223.0.0.18，IANA给其分配的协议号为112。</p>
<p> VRRP通告报文的TTL值必须是255，如果VRRP路由器接受到TTL值不为255的VRRP通告报文，必须丢弃。</p>
<p> VRRP组中的主路由器会定期发送通告报文，备份路由器接受，他们通过这种方式来交流选举</p>
<h1 id="5-负载均衡"><a href="#5-负载均衡" class="headerlink" title="5.负载均衡"></a>5.负载均衡</h1><p>在一组VRRP组中，主路由器承担数据转发任务的同时，备份路由器的链路将处于空闲状态，这必然造成了带宽资源的浪费。为了避免这种浪费，使用VRRP负载均衡。</p>
<p>   　VRRP并不具备对流量进行监控的机制，它的负载均衡只是通过使用多个VRRP组来实现的。VRRP负载均衡是通过实现将路由器加入到多个VRRP组实现的，使VRRP路由器在不同的组中担任不同的角色。</p>
<p><img src="http://image.wangshengzhuang.com/17-7-2/36995365.jpg" alt=""></p>
<p>如上图所示：RA为组35的主路由器，同时又是组36的备份路由器。 RB为组36的主路由器，同时又是组35的备份路由器。</p>
<p>在正常状态下，PC1和PC2走RA，PC3和PC4走RB，但是两个路由器一旦出现故障，就将网关切换到备份路由器。RA和RB可以说是相辅相成的。</p>
<p>负载分担方式具有以下特点。</p>
<ul>
<li>每个备份组都包括一个Master设备和若干Backup设备。</li>
<li>各备份组的Master可以不同。</li>
<li>同一台路由器可以加入多个备份组，在不同备份组中有不同的优先级。</li>
</ul>
<p><img src="http://image.wangshengzhuang.com/17-7-2/15448999.jpg" alt=""></p>
<p>如图所示：</p>
<ul>
<li><p>配置两个备份组：组1和组2；</p>
</li>
<li><p>RouterA在备份组1中作为Master，在备份组2中作为Backup；</p>
</li>
<li><p>RouterB在备份组1和2中都作为Backup；</p>
</li>
<li><p>RouterC在备份组2中作为Master，在备份组1中作为Backup。</p>
</li>
<li><p>一部分主机使用备份组1作网关，另一部分主机使用备份组2作为网关。</p>
</li>
</ul>
<p>这样，以达到分担数据流，而又相互备份的目的。</p>
<h1 id="6-VRRP的安全功能"><a href="#6-VRRP的安全功能" class="headerlink" title="6. VRRP的安全功能"></a>6. VRRP的安全功能</h1><p>对于安全程度不同的网络环境，可以在报头上设定不同的认证方式和认证字。</p>
<p>VRRP提供了三种认证方式：</p>
<p>1.无认证：不进行任何 VRRP 报文的合法性认证，不提供安全性保障。一般不要用这种。</p>
<p>2.简单字符认证：在一个有可能受到安全威胁的网络中，可以将认证方式设置为简单字符认证。发送 VRRP 报文的路由器将认证字填入到<br>VRRP 报文中，而收到 VRRP 报文的路由器会将收到的 VRRP 报文中的认证字和本地配置的认证字进行比较。如果认证字相同，则认为接收到的报文是合法的 VRRP 报文；否则认为接收到的报文是一个非法报文。</p>
<p>一般用的就是这种。</p>
<ol>
<li>MD5 认证：在一个非常不安全的网络中，可以将认证方式设置为 MD5 认证。发送 VRRP 报文的路由器利用认证字和 MD5 算法对 VRRP 报文进行加密，加密后的报文保存在 Authentication Header（认证头）中。收到 VRRP报文的路由器会利用认证字解密报文，检查该报文的合法性。MD5比较麻烦，有一些路由设备不支持。</li>
</ol>
<h1 id="7-其他VRRP功能"><a href="#7-其他VRRP功能" class="headerlink" title="7. 其他VRRP功能"></a>7. 其他VRRP功能</h1><h2 id="监视接口状态"><a href="#监视接口状态" class="headerlink" title="监视接口状态"></a>监视接口状态</h2><p>VRRP可以监视所有接口的状态。当被监视的接口Down或Up时，该路由器的优先级会自动降低或升高一定的数值，使得备份组中各设备优先级高低顺序发生变化，VRRP路由器重新进行Master竞选。</p>
<h2 id="虚拟IP地址Ping开关"><a href="#虚拟IP地址Ping开关" class="headerlink" title="虚拟IP地址Ping开关"></a>虚拟IP地址Ping开关</h2><p>RFC3768并没有规定虚拟IP地址应不应该Ping通。不能Ping通虚拟IP地址，会给监控虚拟路由器的工作情况带来一定的麻烦，能够Ping通虚拟IP地址可以比较方便的监控虚拟路由器的工作情况，但是带来可能遭到ICMP攻击的隐患。控制Ping通虚拟IP地址的开关命令，用户可以选择是否打开。</p>
<h2 id="VRRP定时器"><a href="#VRRP定时器" class="headerlink" title="VRRP定时器"></a>VRRP定时器</h2><p>①　VRRP通告报文时间间隔定时器</p>
<ol>
<li>VRRP备份组中的Master路由器会定时发送VRRP通告报文，通知备份组内的 路由器自己工作正常</li>
<li>用户可以通过设置VRRP定时器来调整Master路由器发送VRRP 通告报文的时间间隔</li>
<li>如果Backup路由器在等待了3个间隔时间后，依然没有收到VRRP 通告报文，则认为自己是Master路由器，并对外发送VRRP通告报文，重新进行Master路由器的选举</li>
</ol>
<p>②　VRRP抢占延迟时间定时器</p>
<ol>
<li>为了避免备份组内的成员频繁进行主备状态转换，让Backup路由器有足够的</li>
<li>时间搜集必要的信息（如路由信息），Backup 路由器接收到优先级低于本地优 先级的通告报文后，不会立即抢占成为Master</li>
<li>而是等待一定时间——抢占延迟时间后，才会对外发送VRRP通告报文取代原 来的Master路由器</li>
</ol>
<h1 id="8-VRRP基本配置（略）"><a href="#8-VRRP基本配置（略）" class="headerlink" title="8. VRRP基本配置（略）"></a>8. VRRP基本配置（略）</h1><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>VRRP简单的讲，就是利用心跳信息实现高可用。主节点不断的向备用节点广播信息，信息包含自己的心跳和优先级。不光如此，还可以在主节点上安装一个监控，来监控其他资源，如果这些资源运行正常，就可以给其他客户端发送心跳信息（包含优先级），一旦监控的资源出现问题了，就降低自己的优先级（降低后的优先级要低于备用节点的优先级，自己设置）。这时候，备用节点可以在主节点未出现故障的时候，就抢占主节点的资源（工作在抢占模式的备用节点）。备用节点发现自己的优先级比主节点的优先级高，就触发一次选举。将主节点变为备用节点，备用节点变为主节点。主节点拥有VIP.</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="http://zhaoyuqiang.blog.51cto.com/6328846/1166840/" target="_blank" rel="external">虚拟路由器冗余协议【原理篇】VRRP详解</a></p>
<p><a href="https://en.wikipedia.org/wiki/Virtual_Router_Redundancy_Protocol" target="_blank" rel="external">Virtual Router Redundancy Protocol</a></p>
<p><a href="https://tools.ietf.org/html/rfc5798#section-8.3.2" target="_blank" rel="external">Virtual Router Redundancy Protocol (VRRP) Version 3 for IPv4 and IPv6</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;因工作中使用Keepalived配置Nginx代理和MySQL代理的高可用，而Keepalived是VRRP协议在linux上的软件实现。因此了解了下VRRP的基础。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://image.wangshengzhuang.com/17-7-2/71192622.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="运维相关" scheme="http://wangshengzhuang.com/categories/%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3/"/>
    
      <category term="Keepalived" scheme="http://wangshengzhuang.com/categories/%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3/Keepalived/"/>
    
    
      <category term="VRRP" scheme="http://wangshengzhuang.com/tags/VRRP/"/>
    
      <category term="Keepalived" scheme="http://wangshengzhuang.com/tags/Keepalived/"/>
    
  </entry>
  
  <entry>
    <title>keepalived.conf说明</title>
    <link href="http://wangshengzhuang.com/2017/06/04/%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3/Keepalived/keepalived%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%AE%80%E4%BB%8B/"/>
    <id>http://wangshengzhuang.com/2017/06/04/运维相关/Keepalived/keepalived配置文件简介/</id>
    <published>2017-06-04T15:26:47.000Z</published>
    <updated>2017-09-02T06:58:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍了Keepalived配置文件keepalived.conf。</p>
<p><img src="http://image.wangshengzhuang.com/17-7-3/62480061.jpg" alt=""></p>
<a id="more"></a>
<p>keepalived只有一个配置文件keepalived.conf，里面主要包括以下几个配置区域，分别是global_defs、static_ipaddress、static_routes、vrrp_script、vrrp_instance和virtual_server。</p>
<h3 id="1-global-defs区域"><a href="#1-global-defs区域" class="headerlink" title="1. global_defs区域"></a>1. global_defs区域</h3><p>主要是配置故障发生时的通知对象以及机器标识</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">global_defs &#123;</div><div class="line">    notification_email &#123;</div><div class="line">        a@abc.com</div><div class="line">        b@abc.com</div><div class="line">        ...</div><div class="line">    &#125;</div><div class="line">    notification_email_from alert@abc.com</div><div class="line">    smtp_server smtp.abc.com</div><div class="line">    smtp_connect_timeout 30</div><div class="line">    enable_traps</div><div class="line">    router_id host163</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>notification_email 故障发生时给谁发邮件通知。</li>
<li>notification_email_from 通知邮件从哪个地址发出。</li>
<li>smpt_server 通知邮件的smtp地址。</li>
<li>smtp_connect_timeout 连接smtp服务器的超时时间。</li>
<li>enable_traps 开启SNMP陷阱（<a href="http://en.wikipedia.org/wiki/Simple_Network_Management_Protocol" target="_blank" rel="external">Simple Network Management Protocol</a>）。</li>
<li>router_id 标识本节点的字条串，通常为hostname，但不一定非得是hostname。故障发生时，邮件通知会用到。</li>
</ul>
<h3 id="2-static-ipaddress和static-routes区域"><a href="#2-static-ipaddress和static-routes区域" class="headerlink" title="2. static_ipaddress和static_routes区域"></a>2. static_ipaddress和static_routes区域</h3><p>static_ipaddress和static_routes区域配置的是是本节点的IP和路由信息。<strong>如果你的机器上已经配置了IP和路由，那么这两个区域可以不用配置</strong>。其实，一般情况下你的机器都会有IP地址和路由信息的，因此没必要再在这两个区域配置。</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">static_ipaddress &#123;</div><div class="line">    <span class="number">10.210</span><span class="number">.214</span><span class="number">.163</span>/<span class="number">24</span> brd <span class="number">10.210</span><span class="number">.214</span><span class="number">.255</span> dev eth0</div><div class="line">    ...</div><div class="line">&#125;</div><div class="line">static_routes &#123;</div><div class="line">    <span class="number">10.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">8</span> via <span class="number">10.210</span><span class="number">.214</span><span class="number">.1</span> dev eth0</div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>以上分别表示启动/关闭keepalived时在本机执行的如下命令：</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># /sbin/ip addr add <span class="number">10.210</span><span class="number">.214</span><span class="number">.163</span>/<span class="number">24</span> brd <span class="number">10.210</span><span class="number">.214</span><span class="number">.255</span> dev eth0</div><div class="line"># /sbin/ip route add <span class="number">10.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">8</span> via <span class="number">10.210</span><span class="number">.214</span><span class="number">.1</span> dev eth0</div><div class="line"># /sbin/ip addr del <span class="number">10.210</span><span class="number">.214</span><span class="number">.163</span>/<span class="number">24</span> brd <span class="number">10.210</span><span class="number">.214</span><span class="number">.255</span> dev eth0</div><div class="line"># /sbin/ip route del <span class="number">10.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">8</span> via <span class="number">10.210</span><span class="number">.214</span><span class="number">.1</span> dev eth0</div></pre></td></tr></table></figure>
<p>注意： 请忽略这两个区域，因为我坚信你的机器肯定已经配置了IP和路由。</p>
<h3 id="3-vrrp-script区域"><a href="#3-vrrp-script区域" class="headerlink" title="3. vrrp_script区域"></a>3. vrrp_script区域</h3><p>用来做健康检查的，当时检查失败时会将<code>vrrp_instance</code>的<code>priority</code>减少相应的值。</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">vrrp_script chk_http_port &#123;</div><div class="line">    script <span class="string">"&lt;/dev/tcp/127.0.0.1/80"</span></div><div class="line">    interval <span class="number">1</span></div><div class="line">    weight <span class="number">-10</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>以上意思是如果<code>script</code>中的指令执行失败，那么相应的<code>vrrp_instance</code>的优先级会减少10个点。</p>
<h3 id="4-vrrp-instance和vrrp-sync-group区域"><a href="#4-vrrp-instance和vrrp-sync-group区域" class="headerlink" title="4. vrrp_instance和vrrp_sync_group区域"></a>4. vrrp_instance和vrrp_sync_group区域</h3><p>vrrp_instance用来定义对外提供服务的VIP区域及其相关属性。</p>
<p>vrrp_rsync_group用来定义vrrp_intance组，使得这个组内成员动作一致。举个例子来说明一下其功能：</p>
<p>两个vrrp_instance同属于一个vrrp_rsync_group，那么其中一个vrrp_instance发生故障切换时，另一个vrrp_instance也会跟着切换（即使这个instance没有发生故障）。</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line">vrrp_sync_group VG_1 &#123;</div><div class="line">    group &#123;</div><div class="line">        inside_network   # name of vrrp_instance (below)</div><div class="line">        outside_network  # One for each moveable IP.</div><div class="line">        ...</div><div class="line">    &#125;</div><div class="line">    notify_master /path/to_master.sh</div><div class="line">    notify_backup /path/to_backup.sh</div><div class="line">    notify_fault <span class="string">"/path/fault.sh VG_1"</span></div><div class="line">    notify /path/notify.sh</div><div class="line">    smtp_alert</div><div class="line">&#125;</div><div class="line">vrrp_instance VI_1 &#123;</div><div class="line">    <span class="section">state</span> MASTER</div><div class="line">    interface eth0</div><div class="line">    use_vmac &lt;VMAC_INTERFACE&gt;</div><div class="line">    dont_track_primary</div><div class="line">    track_interface &#123;</div><div class="line">        eth0</div><div class="line">        eth1</div><div class="line">    &#125;</div><div class="line">    mcast_src_ip &lt;IPADDR&gt;</div><div class="line">    lvs_sync_daemon_interface eth1</div><div class="line">    garp_master_delay <span class="number">10</span></div><div class="line">    virtual_router_id <span class="number">1</span></div><div class="line">    priority <span class="number">100</span></div><div class="line">    advert_int <span class="number">1</span></div><div class="line">    authentication &#123;</div><div class="line">        auth_type PASS</div><div class="line">        auth_pass <span class="number">12345678</span></div><div class="line">    &#125;</div><div class="line">    virtual_ipaddress &#123;</div><div class="line">        <span class="number">10.210</span><span class="number">.214</span><span class="number">.253</span>/<span class="number">24</span> brd <span class="number">10.210</span><span class="number">.214</span><span class="number">.255</span> dev eth0</div><div class="line">        <span class="number">192.168</span><span class="number">.1</span><span class="number">.11</span>/<span class="number">24</span> brd <span class="number">192.168</span><span class="number">.1</span><span class="number">.255</span> dev eth1</div><div class="line">    &#125;</div><div class="line">    virtual_routes &#123;</div><div class="line">        <span class="number">172.16</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">12</span> via <span class="number">10.210</span><span class="number">.214</span><span class="number">.1</span></div><div class="line">        <span class="number">192.168</span><span class="number">.1</span><span class="number">.0</span>/<span class="number">24</span> via <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span> dev eth1</div><div class="line">        <span class="section">default</span> via <span class="number">202.102</span><span class="number">.152</span><span class="number">.1</span></div><div class="line">    &#125;</div><div class="line">    track_script &#123;</div><div class="line">        chk_http_port</div><div class="line">    &#125;</div><div class="line">    nopreempt</div><div class="line">    preempt_delay <span class="number">300</span></div><div class="line">    debug</div><div class="line">    notify_master &lt;STRING&gt;|&lt;QUOTED-STRING&gt;</div><div class="line">    notify_backup &lt;STRING&gt;|&lt;QUOTED-STRING&gt;</div><div class="line">    notify_fault &lt;STRING&gt;|&lt;QUOTED-STRING&gt;</div><div class="line">    notify &lt;STRING&gt;|&lt;QUOTED-STRING&gt;</div><div class="line">    smtp_alert</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>notify_master/backup/fault 分别表示切换为主/备/出错时所执行的脚本。</li>
<li>notify 表示任何一状态切换时都会调用该脚本，并且该脚本在以上三个脚本执行完成之后进行调用，keepalived会自动传递三个参数（$1 = “GROUP”|”INSTANCE”，$2 = name of group or instance，$3 = target state of transition(MASTER/BACKUP/FAULT)）。</li>
<li>smtp_alert 表示是否开启邮件通知（用全局区域的邮件设置来发通知）。</li>
<li>state 可以是MASTER或BACKUP，不过当其他节点keepalived启动时会将priority比较大的节点选举为MASTER，因此该项其实没有实质用途。</li>
<li>interface 节点固有IP（非VIP）的网卡，用来发VRRP包。</li>
<li>use_vmac 是否使用VRRP的虚拟MAC地址。</li>
<li>dont_track_primary 忽略VRRP网卡错误。（默认未设置）</li>
<li>track_interface 监控以下网卡，如果任何一个不通就会切换到FAULT状态。（可选项）</li>
<li>mcast_src_ip 修改vrrp组播包的源地址，默认源地址为master的IP。（由于是组播，因此即使修改了源地址，该master还是能收到回应的）</li>
<li>lvs_sync_daemon_interface 绑定lvs syncd的网卡。</li>
<li>garp_master_delay 当切为主状态后多久更新ARP缓存，默认5秒。</li>
<li>virtual_router_id 取值在0-255之间，用来区分多个instance的VRRP组播。</li>
</ul>
<p>注意： 同一网段中virtual_router_id的值不能重复，否则会出错，相关错误信息如下。  </p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Keepalived_vrrp[<span class="number">27120</span>]: ip address associated <span class="keyword">with</span> VRID <span class="keyword">not</span> present <span class="keyword">in</span> received packet :</div><div class="line">one <span class="keyword">or</span> more VIP associated <span class="keyword">with</span> VRID mismatch actual MASTER advert</div><div class="line">bogus VRRP packet received <span class="keyword">on</span> eth1 !!!</div><div class="line">receive an invalid ip <span class="built_in">number</span> <span class="built_in">count</span> associated <span class="keyword">with</span> VRID!</div><div class="line">VRRP_Instance(xxx) <span class="keyword">ignoring</span> received advertisment...</div></pre></td></tr></table></figure>
<p>可以用这条命令来查看该网络中所存在的vrid：<code>tcpdump -nn -i any net 224.0.0.0/8</code></p>
<ul>
<li>priority 用来选举master的，要成为master，那么这个选项的值<a href="http://tools.ietf.org/html/rfc5798#section-8.3.2" target="_blank" rel="external">最好高于其他机器50个点</a>，该项<a href="http://tools.ietf.org/html/rfc5798#section-5.2.4" target="_blank" rel="external">取值范围</a>是1-255（在此范围之外会被识别成默认值100）。</li>
<li>advert_int 发VRRP包的时间间隔，即多久进行一次master选举（可以认为是健康查检时间间隔）。</li>
<li>authentication 认证区域，认证类型有PASS和HA（IPSEC），推荐使用PASS（密码只识别前8位）。</li>
<li>virtual_ipaddress vip，不解释了。</li>
<li>virtual_routes 虚拟路由，当IP漂过来之后需要添加的路由信息。</li>
<li>virtual_ipaddress_excluded 发送的VRRP包里不包含的IP地址，为减少回应VRRP包的个数。在网卡上绑定的IP地址比较多的时候用。</li>
<li>nopreempt 允许一个priority比较低的节点作为master，即使有priority更高的节点启动。</li>
</ul>
<p>首先nopreemt必须在state为BACKUP的节点上才生效（因为是BACKUP节点决定是否来成为MASTER的），其次要实现类似于关闭auto failback的功能需要将所有节点的state都设置为BACKUP，或者将master节点的priority设置的比BACKUP低。我个人推荐使用将所有节点的state都设置成BACKUP并且都加上nopreempt选项，这样就完成了关于autofailback功能，当想手动将某节点切换为MASTER时只需去掉该节点的nopreempt选项并且将priority改的比其他节点大，然后重新加载配置文件即可（等MASTER切过来之后再将配置文件改回去再reload一下）。</p>
<p>当使用<code>track_script</code>时可以不用加<code>nopreempt</code>，只需要加上<code>preempt_delay 5</code>，这里的间隔时间要大于<code>vrrp_script</code>中定义的时长。</p>
<ul>
<li>preempt_delay master启动多久之后进行接管资源（VIP/Route信息等），并提是没有<code>nopreempt</code>选项。</li>
</ul>
<h3 id="5-virtual-server-group和virtual-server区域"><a href="#5-virtual-server-group和virtual-server区域" class="headerlink" title="5. virtual_server_group和virtual_server区域"></a>5. virtual_server_group和virtual_server区域</h3><p>virtual_server_group一般在超大型的LVS中用到，一般LVS用不过这东西，因此不多说。</p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">virtual_server IP <span class="class">Port </span>&#123;</div><div class="line">    delay_loop <span class="params">&lt;INT&gt;</span></div><div class="line">    lb_algo rr|wrr|lc|wlc|lblc|sh|dh</div><div class="line">    lb_kind NAT|DR|TUN</div><div class="line">    persistence_timeout <span class="params">&lt;INT&gt;</span></div><div class="line">    persistence_granularity <span class="params">&lt;NETMASK&gt;</span></div><div class="line">    protocol TCP</div><div class="line">    ha_suspend</div><div class="line">    virtualhost <span class="params">&lt;STRING&gt;</span></div><div class="line">    alpha</div><div class="line">    omega</div><div class="line">    quorum <span class="params">&lt;INT&gt;</span></div><div class="line">    hysteresis <span class="params">&lt;INT&gt;</span></div><div class="line">    quorum_up <span class="params">&lt;STRING&gt;</span>|<span class="params">&lt;QUOTED-STRING&gt;</span></div><div class="line">    quorum_down <span class="params">&lt;STRING&gt;</span>|<span class="params">&lt;QUOTED-STRING&gt;</span></div><div class="line">    sorry_server <span class="params">&lt;IPADDR&gt;</span> <span class="params">&lt;PORT&gt;</span></div><div class="line">    real_server <span class="params">&lt;IPADDR&gt;</span> <span class="params">&lt;PORT&gt;</span> &#123;</div><div class="line">        weight <span class="params">&lt;INT&gt;</span></div><div class="line">        inhibit_on_failure</div><div class="line">        notify_up <span class="params">&lt;STRING&gt;</span>|<span class="params">&lt;QUOTED-STRING&gt;</span></div><div class="line">        notify_down <span class="params">&lt;STRING&gt;</span>|<span class="params">&lt;QUOTED-STRING&gt;</span></div><div class="line">        <span class="meta"># HTTP_GET|SSL_GET|TCP_CHECK|SMTP_CHECK|MISC_CHECK</span></div><div class="line">        HTTP_GET|<span class="class">SSL_GET </span>&#123;</div><div class="line">            <span class="class">url </span>&#123;</div><div class="line">                path <span class="params">&lt;STRING&gt;</span></div><div class="line">                <span class="meta"># Digest computed with genhash</span></div><div class="line">                digest <span class="params">&lt;STRING&gt;</span></div><div class="line">                status_code <span class="params">&lt;INT&gt;</span></div><div class="line">            &#125;</div><div class="line">            connect_port <span class="params">&lt;PORT&gt;</span></div><div class="line">            connect_timeout <span class="params">&lt;INT&gt;</span></div><div class="line">            nb_get_retry <span class="params">&lt;INT&gt;</span></div><div class="line">            delay_before_retry <span class="params">&lt;INT&gt;</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>delay_loop 延迟轮询时间（单位秒）。</li>
<li>lb_algo 后端调试算法（load balancing algorithm）。</li>
<li>lb_kind LVS调度类型<a href="http://kb.linuxvirtualserver.org/wiki/LVS/NAT" target="_blank" rel="external">NAT</a>/<a href="http://kb.linuxvirtualserver.org/wiki/LVS/DR" target="_blank" rel="external">DR</a>/<a href="http://kb.linuxvirtualserver.org/wiki/LVS/TUN" target="_blank" rel="external">TUN</a>。</li>
<li>virtualhost 用来给HTTP_GET和SSL_GET配置请求header的。</li>
<li>sorry_server 当所有real server宕掉时，sorry server顶替。</li>
<li>real_server 真正提供服务的服务器。</li>
<li>weight 权重。</li>
<li>notify_up/down 当real server宕掉或启动时执行的脚本。</li>
<li>健康检查的方式，N多种方式。</li>
<li>path 请求real serserver上的路径。</li>
<li>digest/status_code 分别表示用genhash算出的结果和http状态码。</li>
<li>connect_port 健康检查，如果端口通则认为服务器正常。</li>
<li>connect_timeout,nb_get_retry,delay_before_retry分别表示超时时长、重试次数，下次重试的时间延迟。</li>
</ul>
<p>其他选项暂时不作说明。</p>
<p>###参考</p>
<p><a href="https://docs.oracle.com/cd/E52668_01/E54669/html/section_wv3_hjn_pr.html" target="_blank" rel="external"> About the Keepalived Configuration File</a></p>
<p><a href="http://www.linuxidc.com/Linux/2012-08/69383.htm" target="_blank" rel="external">Keepalived配置及典型应用案例</a></p>
<p><a href="http://outofmemory.cn/wiki/keepalived-configuration" target="_blank" rel="external">keepalived工作原理和配置说明</a></p>
<p><a href="http://www.cnblogs.com/wnlja/p/4439278.html" target="_blank" rel="external">详解keepalived配置和使用</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍了Keepalived配置文件keepalived.conf。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://image.wangshengzhuang.com/17-7-3/62480061.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="运维相关" scheme="http://wangshengzhuang.com/categories/%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3/"/>
    
      <category term="Keepalived" scheme="http://wangshengzhuang.com/categories/%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3/Keepalived/"/>
    
    
      <category term="Keepalived" scheme="http://wangshengzhuang.com/tags/Keepalived/"/>
    
  </entry>
  
  <entry>
    <title>Keepalived安装配置</title>
    <link href="http://wangshengzhuang.com/2017/06/03/%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3/Keepalived/keepalived%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <id>http://wangshengzhuang.com/2017/06/03/运维相关/Keepalived/keepalived安装配置/</id>
    <published>2017-06-03T15:26:47.000Z</published>
    <updated>2017-07-03T14:31:45.500Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍了Keepalived安装配置。</p>
<p><img src="http://image.wangshengzhuang.com/17-7-3/62480061.jpg" alt=""></p>
<a id="more"></a>
<h3 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h3><blockquote>
<p>Keepalived provides simple and robust facilities for load-balancing and high-availability. The load-balancing framework relies on well-known and widely used Linux Virtual Server (IPVS) kernel module providing Layer4 load-balancing. Keepalived implements a set of checkers to dynamically and adaptively maintain and manage load-balanced server pool according their health. Keepalived also implements the VRRPv2 protocol to achieve high-availability with director failover.</p>
</blockquote>
<p>keepalived是集群管理中保证集群高可用的一个服务软件，其功能类似于<a href="https://github.com/chenzhiwei/linux/tree/master/heartbeat" target="_blank" rel="external">heartbeat</a>，用来防止单点故障。</p>
<p>keepalived是以VRRP协议为实现基础的，VRRP全称Virtual Router Redundancy Protocol，即<a href="http://en.wikipedia.org/wiki/VRRP" target="_blank" rel="external">虚拟路由冗余协议</a>。</p>
<p>虚拟路由冗余协议，可以认为是实现路由器高可用的协议，即将N台提供相同功能的路由器组成一个路由器组，这个组里面有一个master和多个backup，master上面有一个对外提供服务的vip（该路由器所在局域网内其他机器的默认路由为该vip），master会发组播，当backup收不到vrrp包时就认为master宕掉了，这时就需要根据<a href="http://tools.ietf.org/html/rfc5798#section-5.1" target="_blank" rel="external">VRRP的优先级</a>来<a href="http://en.wikipedia.org/wiki/Virtual_Router_Redundancy_Protocol#Elections_of_master_routers" target="_blank" rel="external">选举一个backup当master</a>。这样的话就可以保证路由器的高可用了。</p>
<p>keepalived主要有三个模块，分别是core、check和vrrp。core模块为keepalived的核心，负责主进程的启动、维护以及全局配置文件的加载和解析。check负责健康检查，包括常见的各种检查方式。vrrp模块是来实现VRRP协议的。</p>
<h3 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h3><p>yum 安装</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">yum install keepalived</div><div class="line">systemctl <span class="built_in">enable</span> keepalived</div></pre></td></tr></table></figure>
<h3 id="3-Enable-IP-forwarding"><a href="#3-Enable-IP-forwarding" class="headerlink" title="3. Enable IP forwarding"></a>3. Enable IP forwarding</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">echo</span> <span class="string">"net.ipv4.ip_forward = 1"</span> &gt;&gt; /etc/sysctl.conf</span></div><div class="line"><span class="meta">#</span><span class="bash"> sysctl -p</span></div><div class="line">net.ipv4.ip_forward = 1</div></pre></td></tr></table></figure>
<h3 id="4-防火墙配置"><a href="#4-防火墙配置" class="headerlink" title="4. 防火墙配置"></a>4. 防火墙配置</h3><p>Add firewall rules to allow VRRP communication using the multicast IP address 224.0.0.18 and the VRRP protocol (112) on each network interface that Keepalived will control, for example:</p>
<p>VRRP communication between routers uses multicast IP address 224.0.0.18[1] and IP protocol number 112[2].</p>
<p>Thus, you only need to allow incoming and outgoing traffic with these specific parameters for VRRP to work correctly. The firewall rules that are usually mentioned are redundant and unnecessarily widely formulated.</p>
<p><strong>记得改掉网卡名称</strong>，此处我绑定的是enp0s3，其他的不需要改</p>
   <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">firewall-cmd --direct --permanent --add-rule ipv4 filter INPUT 0 --in-interface enp0s3 --destination 224.0.0.18 --protocol vrrp -j ACCEPT</div><div class="line">firewall-cmd --direct --permanent --add-rule ipv4 filter OUTPUT 0 --out-interface enp0s3 --destination 224.0.0.18 --protocol vrrp -j ACCEPT</div><div class="line">firewall-cmd --reload</div></pre></td></tr></table></figure>
<h3 id="5-编辑-etc-keepalived-keepalived-conf"><a href="#5-编辑-etc-keepalived-keepalived-conf" class="headerlink" title="5. 编辑/etc/keepalived/keepalived.conf"></a>5. 编辑/etc/keepalived/keepalived.conf</h3><p>默认的配置文件<code>/etc/keepalived/keepalived.conf</code></p>
<h3 id="6-例子Configuring-Simple-Virtual-IP-Address-Failover-Using-Keepalived"><a href="#6-例子Configuring-Simple-Virtual-IP-Address-Failover-Using-Keepalived" class="headerlink" title="6. 例子Configuring Simple Virtual IP Address Failover Using Keepalived"></a>6. 例子Configuring Simple Virtual IP Address Failover Using Keepalived</h3><p>默认情况下由节点A提供服务，当节点A不可用时，由节点B提供服务(即虚拟IP漂移至节点B)。</p>
<table>
<thead>
<tr>
<th>节点</th>
<th>IP</th>
</tr>
</thead>
<tbody>
<tr>
<td>主节点</td>
<td>192.168.0.104</td>
</tr>
<tr>
<td>备节点</td>
<td>192.168.0.105</td>
</tr>
<tr>
<td>VIP</td>
<td>192.168.0.106</td>
</tr>
</tbody>
</table>
<p>节点A上的配置文件</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">global_defs &#123;</div><div class="line">   notification_email &#123;</div><div class="line">     root@localhost</div><div class="line">   &#125;</div><div class="line">   notification_email_from  root@localhost</div><div class="line">   smtp_server localhost</div><div class="line">   smtp_connect_timeout 30</div><div class="line">   router_id maxscale001</div><div class="line">&#125;</div><div class="line"></div><div class="line">vrrp_instance VI_1 &#123;</div><div class="line">    state MASTER      #指定A节点为主节点 备用节点上设置为BACKUP即可</div><div class="line">    interface enp0s3   #绑定虚拟IP的网络接口</div><div class="line">    virtual_router_id 51   #VRRP组名，两个节点的设置必须一样，以指明各个节点属于同一VRRP组</div><div class="line">    priority 100   #主节点的优先级（1-254之间），备用节点必须比主节点优先级低</div><div class="line">    advert_int 1    #组播信息发送间隔，两个节点设置必须一样</div><div class="line">    nopreempt</div><div class="line">    authentication &#123;   #设置验证信息，两个节点必须一致</div><div class="line">        auth_type PASS</div><div class="line">        auth_pass 1111</div><div class="line">    &#125;</div><div class="line">    virtual_ipaddress &#123;   #指定虚拟IP, 两个节点设置必须一样</div><div class="line">        192.168.0.106/24</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>节点B上的配置文件(router_id 、state  、priority   不同)，其它项不必修改。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">global_defs &#123;</div><div class="line">   notification_email &#123;</div><div class="line">     root@localhost</div><div class="line">   &#125;</div><div class="line">   notification_email_from root@localhost</div><div class="line">   smtp_server localhost</div><div class="line">   smtp_connect_timeout 30</div><div class="line">   router_id maxscale002</div><div class="line">&#125;</div><div class="line"></div><div class="line">vrrp_instance VI_1 &#123;</div><div class="line">    state BACKUP</div><div class="line">    interface enp0s3</div><div class="line">    virtual_router_id 51</div><div class="line">    priority 99</div><div class="line">    advert_int 1</div><div class="line">    nopreempt</div><div class="line">    authentication &#123;</div><div class="line">        auth_type PASS</div><div class="line">        auth_pass 1111</div><div class="line">    &#125;</div><div class="line">    virtual_ipaddress &#123;</div><div class="line">        192.168.0.106/24</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>节点A启动keepalived后,查看IP</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@mysql001 keepalived]<span class="comment"># ip addr show enp0s3</span></div><div class="line">2: enp0s3: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000</div><div class="line">    link/ether 08:00:27:54:b1:88 brd ff:ff:ff:ff:ff:ff</div><div class="line">    inet 192.168.0.104/24 brd 192.168.0.255 scope global dynamic enp0s3</div><div class="line">       valid_lft 85696sec preferred_lft 85696sec</div><div class="line">    inet 192.168.0.106/24 scope global secondary enp0s3</div><div class="line">       valid_lft forever preferred_lft forever</div></pre></td></tr></table></figure>
<p>节点B启动keepalived后,查看IP</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@mysql002 keepalived]<span class="comment"># ip addr show enp0s3</span></div><div class="line">2: enp0s3: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000</div><div class="line">    link/ether 08:00:27:6d:87:72 brd ff:ff:ff:ff:ff:ff</div><div class="line">    inet 192.168.0.105/24 brd 192.168.0.255 scope global dynamic enp0s3</div><div class="line">       valid_lft 85484sec preferred_lft 85484sec</div></pre></td></tr></table></figure>
<p>测试及验证：拔掉节点A的网线，就发现虚拟IP已经绑定到节点B上，再恢复A节点的网线，虚拟IP又绑定回节点A之上。</p>
<p>说明：</p>
<ol>
<li>默认的配置文件中，使用第三方smtp服务器，但这在现实中几乎没有意义（需要验证的原因），我们将其指定为localhost, 将通知信息的发送交给本地sendmail服务处理。通过alias发送给接收人</li>
<li>虚拟IP需要指定子网掩码，否则会默认使用255.255.255.255，可能导致无法从其它机器访问虚拟IP</li>
<li>在配置keepalived vrrp instance时, 有一个nopreempt的选项, 如果配置了nopreempt, 表示进入BACKUP状态的路由器不会在Master还活着的情况下, 抢占MASTER的位置(即使BACKUP路由器的优先级更高)</li>
</ol>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://docs.oracle.com/cd/E52668_01/E54669/html/section_ksr_psb_nr.html" target="_blank" rel="external"> Installing and Configuring Keepalived</a></p>
<p><a href="http://tools.ietf.org/html/rfc5798#section-5.1.1.2" target="_blank" rel="external">http://tools.ietf.org/html/rfc5798#section-5.1.1.2</a></p>
<p><a href="http://tools.ietf.org/html/rfc5798#section-5.1.1.4" target="_blank" rel="external">http://tools.ietf.org/html/rfc5798#section-5.1.1.4</a></p>
<p><a href="https://serverfault.com/questions/634903/vip-not-dropping-from-backup-keepalived" target="_blank" rel="external">https://serverfault.com/questions/634903/vip-not-dropping-from-backup-keepalived</a></p>
<p><a href="http://www.linuxidc.com/Linux/2012-08/69383.htm" target="_blank" rel="external">Keepalived配置及典型应用案例</a></p>
<p><a href="http://outofmemory.cn/wiki/keepalived-configuration" target="_blank" rel="external">keepalived工作原理和配置说明</a></p>
<p><a href="http://www.cnblogs.com/wnlja/p/4439278.html" target="_blank" rel="external">详解keepalived配置和使用</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍了Keepalived安装配置。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://image.wangshengzhuang.com/17-7-3/62480061.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="运维相关" scheme="http://wangshengzhuang.com/categories/%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3/"/>
    
      <category term="Keepalived" scheme="http://wangshengzhuang.com/categories/%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3/Keepalived/"/>
    
    
      <category term="Keepalived" scheme="http://wangshengzhuang.com/tags/Keepalived/"/>
    
  </entry>
  
  <entry>
    <title>cut命令</title>
    <link href="http://wangshengzhuang.com/2017/06/02/Linux/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4/cut/"/>
    <id>http://wangshengzhuang.com/2017/06/02/Linux/每天一个Linux命令/cut/</id>
    <published>2017-06-02T14:12:49.000Z</published>
    <updated>2017-06-30T15:38:18.237Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-命令简介"><a href="#1-命令简介" class="headerlink" title="1. 命令简介"></a>1. 命令简介</h3><p>cut根据指定的定界符，切分文件，并将选中的列输出到标准输出。</p>
<a id="more"></a>
<h3 id="2-用法"><a href="#2-用法" class="headerlink" title="2. 用法"></a>2. 用法</h3><p>cut [选项]… [文件]…</p>
<p>打印输入行的选中的parts 到标准输出</p>
<h3 id="3-选项"><a href="#3-选项" class="headerlink" title="3. 选项"></a>3. 选项</h3><p><img src="http://image.wangshengzhuang.com/16-9-9/15216345.jpg" alt=""></p>
<h3 id="4-示例"><a href="#4-示例" class="headerlink" title="4. 示例"></a>4. 示例</h3><p>以密码/etc/passwd为例<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root<span class="variable">@xqzt</span> ~]<span class="comment"># tail -n 5 /etc/passwd</span></div><div class="line"><span class="symbol">nfsnobody:</span><span class="symbol">x:</span><span class="number">65534</span><span class="symbol">:</span><span class="number">65534</span><span class="symbol">:Anonymous</span> NFS <span class="symbol">User:</span>/var/lib/<span class="symbol">nfs:</span>/sbin/nologin</div><div class="line">gnome-initial-<span class="symbol">setup:</span><span class="symbol">x:</span><span class="number">992</span><span class="symbol">:</span><span class="number">990</span><span class="symbol">:</span><span class="symbol">:/run/gnome-initial-setup/</span><span class="symbol">:/sbin/nologin</span></div><div class="line"><span class="symbol">tcpdump:</span><span class="symbol">x:</span><span class="number">72</span><span class="symbol">:</span><span class="number">72</span><span class="symbol">:</span><span class="symbol">:/</span><span class="symbol">:/sbin/nologin</span></div><div class="line"><span class="symbol">vboxadd:</span><span class="symbol">x:</span><span class="number">991</span><span class="symbol">:</span><span class="number">1</span><span class="symbol">:</span><span class="symbol">:/var/run/vboxadd</span><span class="symbol">:/bin/false</span></div><div class="line"><span class="symbol">wangshengzhuang:</span><span class="symbol">x:</span><span class="number">1000</span><span class="symbol">:</span><span class="number">1000</span><span class="symbol">:wangshengzhuang</span><span class="symbol">:/home/wangshengzhuang</span><span class="symbol">:/bin/bash</span></div></pre></td></tr></table></figure></p>
<h4 id="示例1：-f-指定字段"><a href="#示例1：-f-指定字段" class="headerlink" title="示例1：-f 指定字段"></a><strong>示例1：-f 指定字段</strong></h4><p>打印用户名<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@xqzt ~]<span class="comment"># tail -n 5 /etc/passwd |cut -d ":" -f 1,6,7</span></div><div class="line">nfsnobody</div><div class="line">gnome-initial-setup</div><div class="line">tcpdump</div><div class="line">vboxadd</div><div class="line">wangshengzhuang</div></pre></td></tr></table></figure></p>
<h4 id="示例2：-f-指定多个字段"><a href="#示例2：-f-指定多个字段" class="headerlink" title="示例2：-f 指定多个字段"></a><strong>示例2：-f 指定多个字段</strong></h4><p>打印用户名、home目录、shell<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@xqzt ~]<span class="comment"># tail -n 5 /etc/passwd |cut -d ":" -f 1,6,7</span></div><div class="line">nfsnobody:/var/lib/nfs:/sbin/nologin</div><div class="line">gnome-initial-setup:/run/gnome-initial-setup/:/sbin/nologin</div><div class="line">tcpdump:/:/sbin/nologin</div><div class="line">vboxadd:/var/run/vboxadd:/bin/<span class="literal">false</span></div><div class="line">wangshengzhuang:/home/wangshengzhuang:/bin/bash</div></pre></td></tr></table></figure></p>
<h4 id="示例3-f-n-m打印第n-m个字段"><a href="#示例3-f-n-m打印第n-m个字段" class="headerlink" title="示例3: -f n-m打印第n-m个字段"></a><strong>示例3: -f n-m打印第n-m个字段</strong></h4><p>打印用户ID和组ID<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">[root@xqzt ~]<span class="comment"># tail -n 5 /etc/passwd |cut -d ":" -f 3-4</span></div><div class="line">65534:65534</div><div class="line">992:990</div><div class="line">72:72</div><div class="line">991:1</div><div class="line">1000:1000</div><div class="line">[root@xqzt ~]<span class="comment"># tail -n 5 /etc/passwd |cut -d ":" -f 3,4</span></div><div class="line">65534:65534</div><div class="line">992:990</div><div class="line">72:72</div><div class="line">991:1</div><div class="line">1000:1000</div></pre></td></tr></table></figure></p>
<h4 id="示例4：-–output-delimiter指定输出使用新的分界符"><a href="#示例4：-–output-delimiter指定输出使用新的分界符" class="headerlink" title="示例4： –output-delimiter指定输出使用新的分界符"></a><strong>示例4： –output-delimiter指定输出使用新的分界符</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@xqzt ~]<span class="comment"># tail -n 5 /etc/passwd |cut -d ":" -f 3,4 --output-delimiter=" | "</span></div><div class="line">65534 | 65534</div><div class="line">992 | 990</div><div class="line">72 | 72</div><div class="line">991 | 1</div><div class="line">1000 | 1000</div></pre></td></tr></table></figure>
<h4 id="示例5：–complement-补全选中的部分"><a href="#示例5：–complement-补全选中的部分" class="headerlink" title="示例5：–complement  补全选中的部分"></a><strong>示例5：–complement  补全选中的部分</strong></h4><p>打印除了密码、用户id 和组id 之外的所有列<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@xqzt ~]<span class="comment"># tail -n 5 /etc/passwd |cut -d ":" -f 2-4 --complement</span></div><div class="line">nfsnobody:Anonymous NFS User:/var/lib/nfs:/sbin/nologin</div><div class="line">gnome-initial-setup::/run/gnome-initial-setup/:/sbin/nologin</div><div class="line">tcpdump::/:/sbin/nologin</div><div class="line">vboxadd::/var/run/vboxadd:/bin/<span class="literal">false</span></div><div class="line">wangshengzhuang:wangshengzhuang:/home/wangshengzhuang:/bin/bash</div></pre></td></tr></table></figure></p>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="http://man.linuxde.net/cut" target="_blank" rel="external">cut命令</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-命令简介&quot;&gt;&lt;a href=&quot;#1-命令简介&quot; class=&quot;headerlink&quot; title=&quot;1. 命令简介&quot;&gt;&lt;/a&gt;1. 命令简介&lt;/h3&gt;&lt;p&gt;cut根据指定的定界符，切分文件，并将选中的列输出到标准输出。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://wangshengzhuang.com/categories/Linux/"/>
    
      <category term="每天一个Linux命令" scheme="http://wangshengzhuang.com/categories/Linux/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="每天一个Linux命令" scheme="http://wangshengzhuang.com/tags/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4/"/>
    
      <category term="cut" scheme="http://wangshengzhuang.com/tags/cut/"/>
    
  </entry>
  
  <entry>
    <title>dig命令</title>
    <link href="http://wangshengzhuang.com/2017/06/01/Linux/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4/dig%E5%91%BD%E4%BB%A4/"/>
    <id>http://wangshengzhuang.com/2017/06/01/Linux/每天一个Linux命令/dig命令/</id>
    <published>2017-06-01T14:55:56.000Z</published>
    <updated>2017-06-30T15:29:55.928Z</updated>
    
    <content type="html"><![CDATA[<p>dig - DNS lookup utility</p>
<a id="more"></a>
<h3 id="1-命令简介"><a href="#1-命令简介" class="headerlink" title="1. 命令简介"></a>1. 命令简介</h3><p>dig命令是常用的域名查询工具，可以用来测试域名系统工作是否正常。</p>
<h3 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install <span class="built_in">bind</span>-utils</div></pre></td></tr></table></figure>
<h3 id="3-选项"><a href="#3-选项" class="headerlink" title="3. 选项"></a>3. 选项</h3><figure class="highlight haml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">@&lt;服务器地址&gt;：指定进行域名解析的域名服务器； </div><div class="line">-<span class="ruby">b：当主机具有多个IP地址，指定使用本机的哪个IP地址向域名服务器发送域名查询请求； </span></div><div class="line">-<span class="ruby">f&lt;文件名称&gt;：指定dig以批处理的方式运行，指定的文件中保存着需要批处理查询的DNS任务信息； </span></div><div class="line">-<span class="ruby">P：指定域名服务器所使用端口号；</span></div><div class="line">-<span class="ruby">t&lt;类型&gt;：指定要查询的DNS数据类型； </span></div><div class="line">-<span class="ruby">x：执行逆向域名查询； </span></div><div class="line">-<span class="ruby"><span class="number">4</span>：使用IPv4； </span></div><div class="line">-<span class="ruby"><span class="number">6</span>：使用IPv6； </span></div><div class="line">-<span class="ruby">h：显示指令帮助信息。</span></div></pre></td></tr></table></figure>
<h4 id="4-例子"><a href="#4-例子" class="headerlink" title="4. 例子"></a>4. 例子</h4><p>例子1. 查询域名</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">[root@mysql001 ~]<span class="comment"># dig   www.baidu.com</span></div><div class="line"></div><div class="line">; &lt;&lt;&gt;&gt; DiG 9.9.4-RedHat-9.9.4-38.el7_3.3 &lt;&lt;&gt;&gt; www.baidu.com</div><div class="line">;; global options: +cmd</div><div class="line">;; Got answer:</div><div class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 43094</div><div class="line">;; flags: qr aa rd ra ad; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0</div><div class="line"></div><div class="line">;; QUESTION SECTION:</div><div class="line">;www.baidu.com.			IN	A</div><div class="line"></div><div class="line">;; ANSWER SECTION:</div><div class="line">www.baidu.com.		0	IN	A	183.232.231.173</div><div class="line"></div><div class="line">;; Query time: 2 msec</div><div class="line">;; SERVER: 192.168.0.1<span class="comment">#53(192.168.0.1)</span></div><div class="line">;; WHEN: Tue Jun 27 09:09:09 CST 2017</div><div class="line">;; MSG SIZE  rcvd: 47</div></pre></td></tr></table></figure>
<p>例子2. 指定域名服务器</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">[root@mysql001 ~]<span class="comment"># dig @223.5.5.5  www.baidu.com</span></div><div class="line"></div><div class="line">; &lt;&lt;&gt;&gt; DiG 9.9.4-RedHat-9.9.4-38.el7_3.3 &lt;&lt;&gt;&gt; @223.5.5.5 www.baidu.com</div><div class="line">; (1 server found)</div><div class="line">;; global options: +cmd</div><div class="line">;; Got answer:</div><div class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 60317</div><div class="line">;; flags: qr aa rd <span class="built_in">cd</span>; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 0</div><div class="line">;; WARNING: recursion requested but not available</div><div class="line"></div><div class="line">;; QUESTION SECTION:</div><div class="line">;www.baidu.com.			IN	A</div><div class="line"></div><div class="line">;; ANSWER SECTION:</div><div class="line">www.baidu.com.		300	IN	A	111.13.100.91</div><div class="line">www.baidu.com.		300	IN	A	111.13.100.92</div><div class="line"></div><div class="line">;; Query time: 6 msec</div><div class="line">;; SERVER: 223.5.5.5<span class="comment">#53(223.5.5.5)</span></div><div class="line">;; WHEN: Tue Jun 27 09:09:21 CST 2017</div><div class="line">;; MSG SIZE  rcvd: 63</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;dig - DNS lookup utility&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://wangshengzhuang.com/categories/Linux/"/>
    
      <category term="每天一个Linux命令" scheme="http://wangshengzhuang.com/categories/Linux/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="每天一个Linux命令" scheme="http://wangshengzhuang.com/tags/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4/"/>
    
      <category term="dig" scheme="http://wangshengzhuang.com/tags/dig/"/>
    
  </entry>
  
  <entry>
    <title>cat命令</title>
    <link href="http://wangshengzhuang.com/2017/05/31/Linux/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4/cat%E5%91%BD%E4%BB%A4/"/>
    <id>http://wangshengzhuang.com/2017/05/31/Linux/每天一个Linux命令/cat命令/</id>
    <published>2017-05-31T14:55:56.000Z</published>
    <updated>2017-06-29T15:46:52.027Z</updated>
    
    <content type="html"><![CDATA[<p>摘要: cat (concatenate，连接)命令将[文件]或标准输入组合输出到标准输出，如果没有指定文件，或者文件为”-“，则从标准输入读取。</p>
<a id="more"></a>
<h3 id="1、命令简介"><a href="#1、命令简介" class="headerlink" title="1、命令简介"></a>1、命令简介</h3><p><strong>cat </strong>(concatenate，连接)命令将[文件]或标准输入组合输出到标准输出，如果没有指定文件，或者文件为”-“，则从标准输入读取。</p>
<h3 id="2、用法"><a href="#2、用法" class="headerlink" title="2、用法"></a>2、用法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat [选项]... [文件]...</div></pre></td></tr></table></figure>
<h3 id="3、选项"><a href="#3、选项" class="headerlink" title="3、选项"></a>3、选项</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">-A, --show-all           等于-vET</div><div class="line">-b, --number-nonblank    对非空输出行编号</div><div class="line"><span class="_">-e</span>                       等于-vE</div><div class="line">-E, --show-ends          在每行结束处显示<span class="string">"$"</span></div><div class="line">-n, --number             对所有行编号，包括空行</div><div class="line"><span class="_">-s</span>, --squeeze-blank      压缩多行空行为一空行</div><div class="line">-t                       与-vT 等价</div><div class="line">-T, --show-tabs          将跳格(TAB)字符显示为^I</div><div class="line">-u                       (被忽略)</div><div class="line">-v, --show-nonprinting   使用^ 和M- 引用，除了LFD和 TAB 之外</div><div class="line">--help        显示此帮助信息并退出</div><div class="line">--version        显示版本信息并退出</div></pre></td></tr></table></figure>
<h3 id="4、示例"><a href="#4、示例" class="headerlink" title="4、示例"></a>4、示例</h3><h5 id="示例1：显示文件内容"><a href="#示例1：显示文件内容" class="headerlink" title="示例1：显示文件内容"></a>示例1：显示文件内容</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@oracledb ~]<span class="comment"># cat test1.log </span></div><div class="line">2011</div><div class="line">2012</div><div class="line">2013</div></pre></td></tr></table></figure>
<h5 id="示例2：显示文件内容及行号"><a href="#示例2：显示文件内容及行号" class="headerlink" title="示例2：显示文件内容及行号"></a>示例2：显示文件内容及行号</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">[root@oracledb ~]<span class="comment"># cat -b test1.log </span></div><div class="line">     1    2011</div><div class="line">     2    2012</div><div class="line">     3    2013</div><div class="line"></div><div class="line"></div><div class="line">     4    2014</div><div class="line">     5    2015</div><div class="line">[root@oracledb ~]<span class="comment"># cat -n test1.log </span></div><div class="line">     1    2011</div><div class="line">     2    2012</div><div class="line">     3    2013</div><div class="line">     4    </div><div class="line">     5    </div><div class="line">     6    2014</div><div class="line">     7    2015</div><div class="line">[root@oracledb ~]<span class="comment"># cat -s test1.log </span></div><div class="line">2011</div><div class="line">2012</div><div class="line">2013</div><div class="line"></div><div class="line">2014</div><div class="line">2015</div><div class="line">[root@oracledb ~]<span class="comment"># cat -ns test1.log </span></div><div class="line">     1    2011</div><div class="line">     2    2012</div><div class="line">     3    2013</div><div class="line">     4    </div><div class="line">     5    2014</div><div class="line">     6    2015</div></pre></td></tr></table></figure>
<h5 id="示例3：-T选项"><a href="#示例3：-T选项" class="headerlink" title="示例3：-T选项"></a>示例3：-T选项</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@oracledb ~]<span class="comment"># cat -T test1.log </span></div><div class="line">2011</div><div class="line">2012</div><div class="line">2013</div><div class="line"></div><div class="line"></div><div class="line">^I行前面为tab</div><div class="line">2014</div><div class="line"></div><div class="line">2015</div></pre></td></tr></table></figure>
<h5 id="示例4：顺序连接两个文件log1，log2-，并将结果输出到log3"><a href="#示例4：顺序连接两个文件log1，log2-，并将结果输出到log3" class="headerlink" title="示例4：顺序连接两个文件log1，log2 ，并将结果输出到log3"></a>示例4：顺序连接两个文件log1，log2 ，并将结果输出到log3</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-attr">[root@oracledb ~]</span># <span class="selector-tag">cat</span> <span class="selector-tag">test1</span><span class="selector-class">.log</span>  <span class="selector-tag">test2</span><span class="selector-class">.log</span> &gt;<span class="selector-tag">test3</span><span class="selector-class">.log</span></div></pre></td></tr></table></figure>
<h5 id="示例5：将标准输入的内容定向输出到文件"><a href="#示例5：将标准输入的内容定向输出到文件" class="headerlink" title="示例5：将标准输入的内容定向输出到文件"></a>示例5：将标准输入的内容定向输出到文件</h5><figure class="highlight autoit"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root<span class="symbol">@oracledb</span> ~]<span class="meta"># cat &gt;test4.log</span></div></pre></td></tr></table></figure>
<p>按ctrl+D结束输入or EOF（End Of File）</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">[root@oracledb ~]<span class="comment"># cat &gt;log.txt &lt;&lt;EOF</span></div><div class="line">&gt; Hello</div><div class="line">&gt; World</div><div class="line">&gt; Linux</div><div class="line">&gt; PWD=$(<span class="built_in">pwd</span>)</div><div class="line">&gt; EOF</div><div class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># ls -l log.txt </span></div><div class="line">-rw-r--r-- 1 root root 37 10-28 17:07 log.txt</div><div class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># cat log.txt </span></div><div class="line">Hello</div><div class="line">World</div><div class="line">Linux</div><div class="line">PWD=/opt/soft/<span class="built_in">test</span></div></pre></td></tr></table></figure>
<h5 id="示例6：tac-反向列示"><a href="#示例6：tac-反向列示" class="headerlink" title="示例6：tac (反向列示)"></a>示例6：tac (反向列示)</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@oracledb ~]<span class="comment"># cat test2.log </span></div><div class="line">2016</div><div class="line">2017</div><div class="line">2018</div><div class="line">[root@oracledb ~]<span class="comment"># tac test2.log </span></div><div class="line">2018</div><div class="line">2017</div><div class="line">2016</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;摘要: cat (concatenate，连接)命令将[文件]或标准输入组合输出到标准输出，如果没有指定文件，或者文件为”-“，则从标准输入读取。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://wangshengzhuang.com/categories/Linux/"/>
    
      <category term="每天一个Linux命令" scheme="http://wangshengzhuang.com/categories/Linux/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="每天一个Linux命令" scheme="http://wangshengzhuang.com/tags/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4/"/>
    
      <category term="touch" scheme="http://wangshengzhuang.com/tags/touch/"/>
    
  </entry>
  
  <entry>
    <title>touch命令</title>
    <link href="http://wangshengzhuang.com/2017/05/30/Linux/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4/touch%E5%91%BD%E4%BB%A4/"/>
    <id>http://wangshengzhuang.com/2017/05/30/Linux/每天一个Linux命令/touch命令/</id>
    <published>2017-05-30T14:55:56.000Z</published>
    <updated>2017-06-29T15:36:30.682Z</updated>
    
    <content type="html"><![CDATA[<p>摘要: touch命令将每个文件的访问时间和修改时间改为当前时间。</p>
<a id="more"></a>
<h3 id="1、命令简介"><a href="#1、命令简介" class="headerlink" title="1、命令简介"></a>1、命令简介</h3><p><strong>touch</strong>命令将每个文件的访问时间和修改时间改为当前时间。</p>
<h3 id="2、用法"><a href="#2、用法" class="headerlink" title="2、用法"></a>2、用法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">touch [选项]... 文件...</div></pre></td></tr></table></figure>
<h3 id="3、选项"><a href="#3、选项" class="headerlink" title="3、选项"></a>3、选项</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="_">-a</span>            只更改访问时间</div><div class="line">-c, --no-create    不创建任何文件</div><div class="line"><span class="_">-d</span>, --date=字符串    使用指定字符串表示时间而非当前时间</div><div class="line"><span class="_">-f</span>            (忽略)</div><div class="line">-h, --no-dereference        会影响符号链接本身，而非符号链接所指示的目的地(当系统支持更改符号链接的所有者时，此选项才有用)</div><div class="line">-m            只更改修改时间</div><div class="line">-r, --reference=文件    使用指定文件的时间属性而非当前时间</div><div class="line">-t STAMP        使用[[CC]YY]MMDDhhmm[.ss] 格式的时间而非当前时间</div><div class="line">--time=WORD        使用WORD 指定的时间：access、atime、use 都等于<span class="_">-a</span>选项的效果，而modify、mtime 等于-m 选项的效果</div></pre></td></tr></table></figure>
<h3 id="4、实例"><a href="#4、实例" class="headerlink" title="4、实例"></a>4、实例</h3><h4 id="实例1：在当前目录下建立一个空文件a-log"><a href="#实例1：在当前目录下建立一个空文件a-log" class="headerlink" title="实例1：在当前目录下建立一个空文件a.log"></a>实例1：在当前目录下建立一个空文件a.log</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@oracledb dir1]<span class="comment"># touch a.log</span></div><div class="line">[root@oracledb dir1]<span class="comment"># ll</span></div><div class="line">总用量 0</div><div class="line">-rw-r--r-- 1 root root 0 4月  16 21:06 a.log</div></pre></td></tr></table></figure>
<h4 id="实例2：更新a-log的修改时间为当前时间"><a href="#实例2：更新a-log的修改时间为当前时间" class="headerlink" title="实例2：更新a.log的修改时间为当前时间"></a>实例2：更新a.log的修改时间为当前时间</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@oracledb dir1]<span class="comment"># ll</span></div><div class="line">总用量 0</div><div class="line">-rw-r--r-- 1 root root 0 4月  16 21:06 a.log</div><div class="line">[root@oracledb dir1]<span class="comment"># touch a.log </span></div><div class="line">[root@oracledb dir1]<span class="comment"># ll</span></div><div class="line">总用量 0</div><div class="line">-rw-r--r-- 1 root root 0 4月  16 21:08 a.log</div></pre></td></tr></table></figure>
<h4 id="实例3：更新log1-log的时间和log2-log时间戳相同"><a href="#实例3：更新log1-log的时间和log2-log时间戳相同" class="headerlink" title="实例3：更新log1.log的时间和log2.log时间戳相同"></a>实例3：更新log1.log的时间和log2.log时间戳相同</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[root@oracledb dir1]<span class="comment"># ll</span></div><div class="line">总用量 0</div><div class="line">-rw-r--r-- 1 root root 0 4月  16 21:08 a.log</div><div class="line">-rw-r--r-- 1 root root 0 4月  16 21:12 b.log</div><div class="line">[root@oracledb dir1]<span class="comment"># touch -r a.log   b.log </span></div><div class="line">[root@oracledb dir1]<span class="comment"># ll</span></div><div class="line">总用量 0</div><div class="line">-rw-r--r-- 1 root root 0 4月  16 21:08 a.log</div><div class="line">-rw-r--r-- 1 root root 0 4月  16 21:08 b.log</div></pre></td></tr></table></figure>
<h4 id="实例4：设定文件的时间戳"><a href="#实例4：设定文件的时间戳" class="headerlink" title="实例4：设定文件的时间戳"></a>实例4：设定文件的时间戳</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@oracledb dir1]<span class="comment"># ll</span></div><div class="line">总用量 0</div><div class="line">-rw-r--r-- 1 root root 0 4月  16 21:08 a.log</div><div class="line">[root@oracledb dir1]<span class="comment"># touch -t 201601011200.50 log.log</span></div><div class="line">[root@oracledb dir1]<span class="comment"># ll</span></div><div class="line">总用量 0</div><div class="line">-rw-r--r-- 1 root root 0 4月  16 21:08 a.log</div><div class="line">-rw-r--r-- 1 root root 0 1月   1 12:00 log.log</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;摘要: touch命令将每个文件的访问时间和修改时间改为当前时间。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://wangshengzhuang.com/categories/Linux/"/>
    
      <category term="每天一个Linux命令" scheme="http://wangshengzhuang.com/categories/Linux/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="每天一个Linux命令" scheme="http://wangshengzhuang.com/tags/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4/"/>
    
      <category term="touch" scheme="http://wangshengzhuang.com/tags/touch/"/>
    
  </entry>
  
  <entry>
    <title>mv命令</title>
    <link href="http://wangshengzhuang.com/2017/05/29/Linux/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4/mv%E5%91%BD%E4%BB%A4/"/>
    <id>http://wangshengzhuang.com/2017/05/29/Linux/每天一个Linux命令/mv命令/</id>
    <published>2017-05-29T14:55:56.000Z</published>
    <updated>2017-06-29T15:48:19.772Z</updated>
    
    <content type="html"><![CDATA[<p>摘要: mv（Move file）将源文件重命名为目标文件，或将源文件移动至指定目录。</p>
<a id="more"></a>
<h3 id="1、命令简介"><a href="#1、命令简介" class="headerlink" title="1、命令简介"></a>1、命令简介</h3><p><strong>mv</strong>（Move file）将源文件重命名为目标文件，或将源文件移动至指定目录。。</p>
<h3 id="2、用法"><a href="#2、用法" class="headerlink" title="2、用法"></a>2、用法</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mv [选项]<span class="keyword">...</span> [-<span class="literal">T</span>] 源文件 目标文件</div><div class="line">　或：mv [选项]<span class="keyword">...</span> 源文件<span class="keyword">...</span> 目录</div><div class="line">　或：mv [选项]<span class="keyword">...</span> -t 目录 源文件<span class="keyword">...</span></div></pre></td></tr></table></figure>
<h3 id="3、选项"><a href="#3、选项" class="headerlink" title="3、选项"></a>3、选项</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">--backup[=CONTROL]       为每个已存在的目标文件创建备份</div><div class="line">-b                           类似--backup 但不接受参数</div><div class="line"><span class="_">-f</span>, --force                  覆盖前不询问</div><div class="line">-i, --interactive            覆盖前询问</div><div class="line">-n, –nechoo-clobber             不覆盖已存在文件 如果您指定了-i、<span class="_">-f</span>、-n 中的多个，仅最后一个生效。</div><div class="line">    --strip-trailing-slashes  去掉每个源文件参数尾部的斜线</div><div class="line">-S, --suffix=SUFFIX           替换常用的备份文件后缀</div><div class="line">-t, --target-directory=DIRECTORY    将所有参数指定的源文件或目录 移动至 指定目录</div><div class="line">-T, --no-target-directory    将目标文件视作普通文件处理</div><div class="line">-u, --update            只在源文件文件比目标文件新，或目标文件不存在时才进行移动</div><div class="line">-v, --verbose        详细显示进行的步骤</div></pre></td></tr></table></figure>
<h3 id="4、实例"><a href="#4、实例" class="headerlink" title="4、实例"></a>4、实例</h3><h4 id="实例1：文件改名"><a href="#实例1：文件改名" class="headerlink" title="实例1：文件改名"></a>实例1：文件改名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@oracledb dir1]<span class="comment"># mv a.txt  b.txt</span></div></pre></td></tr></table></figure>
<h4 id="实例2：-v显示详细信息"><a href="#实例2：-v显示详细信息" class="headerlink" title="实例2：-v显示详细信息"></a>实例2：-v显示详细信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@oracledb dir1]<span class="comment"># mv -v b.txt  a.txt</span></div><div class="line"><span class="string">"b.txt"</span> -&gt; <span class="string">"a.txt"</span></div></pre></td></tr></table></figure>
<h4 id="实例3：将单个文件移动至目录"><a href="#实例3：将单个文件移动至目录" class="headerlink" title="实例3：将单个文件移动至目录"></a>实例3：将单个文件移动至目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@oracledb dir1]<span class="comment"># mv -v a.txt  dir2/"a.txt" -&gt; "dir2/a.txt"</span></div></pre></td></tr></table></figure>
<h5 id="实例4：将多个文件移动至目录"><a href="#实例4：将多个文件移动至目录" class="headerlink" title="实例4：将多个文件移动至目录"></a>实例4：将多个文件移动至目录</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@oracledb dir1]<span class="comment"># mv -v a.txt  b.txt  dir2/</span></div><div class="line"><span class="string">"a.txt"</span> -&gt; <span class="string">"dir2/a.txt"</span></div><div class="line"><span class="string">"b.txt"</span> -&gt; <span class="string">"dir2/b.txt"</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@oracledb dir1]<span class="comment"># mv -vt dir2/ a.txt  b.txt </span></div><div class="line"><span class="string">"a.txt"</span> -&gt; <span class="string">"dir2/a.txt"</span></div><div class="line"><span class="string">"b.txt"</span> -&gt; <span class="string">"dir2/b.txt"</span></div></pre></td></tr></table></figure>
<h5 id="实例5：将文件a-txt改名为b-txt，如果a-txt已经存在，则询问是否覆盖"><a href="#实例5：将文件a-txt改名为b-txt，如果a-txt已经存在，则询问是否覆盖" class="headerlink" title="实例5：将文件a.txt改名为b.txt，如果a.txt已经存在，则询问是否覆盖"></a>实例5：将文件a.txt改名为b.txt，如果a.txt已经存在，则询问是否覆盖</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@oracledb dir1]<span class="comment"># mv -vi a.txt  b.txt</span></div><div class="line">mv：是否覆盖<span class="string">"b.txt"</span>？ y</div><div class="line"><span class="string">"a.txt"</span> -&gt; <span class="string">"b.txt"</span></div></pre></td></tr></table></figure>
<h5 id="实例6：将文件a-txt改名为b-txt，即使b-txt存在，也是直接覆盖掉。"><a href="#实例6：将文件a-txt改名为b-txt，即使b-txt存在，也是直接覆盖掉。" class="headerlink" title="实例6：将文件a.txt改名为b.txt，即使b.txt存在，也是直接覆盖掉。"></a>实例6：将文件a.txt改名为b.txt，即使b.txt存在，也是直接覆盖掉。</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@oracledb dir1]<span class="comment"># mv -fv a.txt  b.txt</span></div><div class="line"><span class="string">"a.txt"</span> -&gt; <span class="string">"b.txt"</span></div></pre></td></tr></table></figure>
<h5 id="实例7：重命名dir1为dir2（dir2不存在）"><a href="#实例7：重命名dir1为dir2（dir2不存在）" class="headerlink" title="实例7：重命名dir1为dir2（dir2不存在）"></a>实例7：重命名dir1为dir2（dir2不存在）</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@oracledb dir1]<span class="comment"># mv -v dir1 dir2</span></div><div class="line"><span class="string">"dir1"</span> -&gt; <span class="string">"dir2"</span></div></pre></td></tr></table></figure>
<h5 id="实例8：将dir1移动到dir2中（dir2存在）。"><a href="#实例8：将dir1移动到dir2中（dir2存在）。" class="headerlink" title="实例8：将dir1移动到dir2中（dir2存在）。"></a>实例8：将dir1移动到dir2中（dir2存在）。</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@oracledb dir1]<span class="comment"># mv -v dir1 dir2</span></div><div class="line"><span class="string">"dir1"</span> -&gt; <span class="string">"dir2/dir1"</span></div></pre></td></tr></table></figure>
<h5 id="实例9：文件被覆盖前做简单备份，前面加参数-b"><a href="#实例9：文件被覆盖前做简单备份，前面加参数-b" class="headerlink" title="实例9：文件被覆盖前做简单备份，前面加参数-b"></a>实例9：文件被覆盖前做简单备份，前面加参数-b</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@oracledb dir1]<span class="comment"># mv -vb a.txt  b.txt </span></div><div class="line"><span class="string">"a.txt"</span> -&gt; <span class="string">"b.txt"</span> (备份：<span class="string">"b.txt~"</span>)</div><div class="line">[root@oracledb dir1]<span class="comment"># ls</span></div><div class="line">b.txt  b.txt~</div></pre></td></tr></table></figure>
<h5 id="实例10：只在源文件比目标文件新时才移动"><a href="#实例10：只在源文件比目标文件新时才移动" class="headerlink" title="实例10：只在源文件比目标文件新时才移动"></a>实例10：只在源文件比目标文件新时才移动</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@oracledb dir1]<span class="comment"># ll</span></div><div class="line">总用量 0</div><div class="line">-rw-r--r-- 1 root root 0 4月  16 20:48 a.txt</div><div class="line">-rw-r--r-- 1 root root 0 4月  16 20:43 b.txt</div><div class="line">[root@oracledb dir1]<span class="comment"># mv -uv   b.txt  a.txt </span></div><div class="line">[root@oracledb dir1]<span class="comment"># mv -uv   a.txt  b.txt </span></div><div class="line"><span class="string">"a.txt"</span> -&gt; <span class="string">"b.txt"</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;摘要: mv（Move file）将源文件重命名为目标文件，或将源文件移动至指定目录。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://wangshengzhuang.com/categories/Linux/"/>
    
      <category term="每天一个Linux命令" scheme="http://wangshengzhuang.com/categories/Linux/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="每天一个Linux命令" scheme="http://wangshengzhuang.com/tags/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4/"/>
    
      <category term="mv" scheme="http://wangshengzhuang.com/tags/mv/"/>
    
  </entry>
  
  <entry>
    <title>rm命令</title>
    <link href="http://wangshengzhuang.com/2017/05/28/Linux/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4/rm%E5%91%BD%E4%BB%A4/"/>
    <id>http://wangshengzhuang.com/2017/05/28/Linux/每天一个Linux命令/rm命令/</id>
    <published>2017-05-28T14:55:56.000Z</published>
    <updated>2017-06-29T15:48:56.267Z</updated>
    
    <content type="html"><![CDATA[<p>摘要: rm（Remove file 删除目录或文件）删除文件，对于链接文件，只是删除整个链接文件，而原有文件保持不变。</p>
<a id="more"></a>
<h3 id="1、命令简介"><a href="#1、命令简介" class="headerlink" title="1、命令简介"></a>1、命令简介</h3><p><strong>rm</strong>（Remove file 删除目录或文件）删除文件，对于链接文件，只是删除整个链接文件，而原有文件保持不变。</p>
<h3 id="2、用法"><a href="#2、用法" class="headerlink" title="2、用法"></a>2、用法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rm [选项]... 文件..</div></pre></td></tr></table></figure>
<h3 id="3、选项"><a href="#3、选项" class="headerlink" title="3、选项"></a>3、选项</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="_">-f</span>, –force            强制删除。忽略不存在的文件，不提示确认</div><div class="line">-i                    在删除前需要确认</div><div class="line">-r, -R, --recursive    递归删除目录及其内容</div><div class="line">-v, –verbose            详细显示进行的步骤</div></pre></td></tr></table></figure>
<h3 id="4、实例"><a href="#4、实例" class="headerlink" title="4、实例"></a>4、实例</h3><h4 id="实例1：删除文件，显示详细信息"><a href="#实例1：删除文件，显示详细信息" class="headerlink" title="实例1：删除文件，显示详细信息"></a>实例1：删除文件，显示详细信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@oracledb dir1]<span class="comment"># rm -v b.txt </span></div><div class="line">rm：是否删除普通空文件 <span class="string">"b.txt"</span>？y</div><div class="line">已删除<span class="string">"b.txt"</span></div></pre></td></tr></table></figure>
<h4 id="实例2：删除前确认"><a href="#实例2：删除前确认" class="headerlink" title="实例2：删除前确认"></a>实例2：删除前确认</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@oracledb dir1]<span class="comment"># rm  -vi a.txt </span></div><div class="line">rm：是否删除普通空文件 <span class="string">"a.txt"</span>？y</div><div class="line">已删除<span class="string">"a.txt"</span></div></pre></td></tr></table></figure>
<h4 id="实例3：强制删除"><a href="#实例3：强制删除" class="headerlink" title="实例3：强制删除"></a>实例3：强制删除</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@oracledb dir1]<span class="comment"># rm -fv a.txt </span></div><div class="line">已删除<span class="string">"a.txt"</span></div></pre></td></tr></table></figure>
<h4 id="实例4：递归删除"><a href="#实例4：递归删除" class="headerlink" title="实例4：递归删除"></a>实例4：递归删除</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@oracledb dir1]<span class="comment"># rm -rfv dir2/</span></div><div class="line">已删除<span class="string">"dir2/a.txt"</span></div><div class="line">已删除<span class="string">"dir2/dir3/c.txt"</span></div><div class="line">已删除目录：<span class="string">"dir2/dir3"</span></div><div class="line">已删除目录：<span class="string">"dir2"</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;摘要: rm（Remove file 删除目录或文件）删除文件，对于链接文件，只是删除整个链接文件，而原有文件保持不变。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://wangshengzhuang.com/categories/Linux/"/>
    
      <category term="每天一个Linux命令" scheme="http://wangshengzhuang.com/categories/Linux/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="每天一个Linux命令" scheme="http://wangshengzhuang.com/tags/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4/"/>
    
      <category term="rm" scheme="http://wangshengzhuang.com/tags/rm/"/>
    
  </entry>
  
  <entry>
    <title>LVM基础及在线扩容</title>
    <link href="http://wangshengzhuang.com/2017/05/27/Linux/Linux%E5%9F%BA%E7%A1%80/LVM%E5%9F%BA%E7%A1%80%E5%8F%8A%E5%9C%A8%E7%BA%BF%E6%89%A9%E5%AE%B9/"/>
    <id>http://wangshengzhuang.com/2017/05/27/Linux/Linux基础/LVM基础及在线扩容/</id>
    <published>2017-05-26T16:00:00.000Z</published>
    <updated>2017-08-20T14:58:16.262Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍了LVM的基本概念及磁盘扩容操作。</p>
<p><img src="http://image.wangshengzhuang.com/17-6-23/4466666.jpg" alt=""></p>
<a id="more"></a>
<h3 id="一、-前言"><a href="#一、-前言" class="headerlink" title="一、 前言"></a>一、 前言</h3><p>​    每个Linux使用者在安装linux时都会遇到这样的困境：在为系统分区时，如何精确评估和分配各个硬盘分区的容量，因为系统管理员不但要考虑到当前某个分区需要的容量，还要预见该分区以后可能需要的容量的最大值。因为如果估计不准确，当遇到某个分区不够用时管理员可能甚至要备份整个系统、清除硬盘、重新对硬盘分区，然后恢复数据到新分区。</p>
<p>​    虽然现在有很多动态调整磁盘的工具可以使用，例如Partation Magic等等，但是它并不能完全解决问题，因为某个分区可能会再次被耗尽；另外一个方面这需要重新引导系统才能实现，对于很多关键的服务器，停机是不可接受的，而且对于添加新硬盘，希望一个能跨越多个硬盘驱动器的文件系统时，分区调整程序就不能解决问题。</p>
<p>​    因此完美的解决方法应该是在零停机前提下可以自如对文件系统的大小进行调整，可以方便实现文件系统跨越不同磁盘和分区。幸运的是Linux提供的逻辑盘卷管理（LVM，Logical Volume Manager）机制就是一个完美的解决方案。</p>
<p>​    LVM是逻辑盘卷管理（Logical Volume Manager）的简称，它是Linux环境下对磁盘分区进行管理的一种机制，LVM是建立在硬盘和分区之上的一个逻辑层，来提高磁盘分区管理的灵活性。通过LVM系统管理员可以轻松管理磁盘分区，如：将若干个磁盘分区连接为一个整块的卷组（volume group），形成一个存储池。管理员可以在卷组上随意创建逻辑卷组（logical volumes），并进一步在逻辑卷组上创建文件系统。管理员通过LVM可以方便的调整存储卷组的大小，并且可以对磁盘存储按照组的方式进行命名、管理和分配，例如按照使用用途进行定义：“development”和“sales”，而不是使用物理磁盘名“sda”和“sdb”。而且当系统添加了新的磁盘，通过LVM管理员就不必将磁盘的文件移动到新的磁盘上以充分利用新的存储空间，而是直接扩展文件系统跨越磁盘即可。</p>
<h3 id="二、使用LVM的好处"><a href="#二、使用LVM的好处" class="headerlink" title="二、使用LVM的好处"></a>二、使用LVM的好处</h3><p>传统的文件系统是基于分区的，一个文件系统对应一个分区。这种方式比较直观，但不易改动：</p>
<p>1.不同的分区相对独立，无相互联系，各分区空间非常易利用不平衡，空间不能充分利用；</p>
<p>2.当一个文件系统／分区已满时，无法对其扩充，只能采用重新分区／建立文件系统，非常麻烦；或把分区中的数据移到另一个更大的分区中；或采用符号连接的方式使用其他分区的空间。</p>
<p>3.如果要把硬盘上的多个分区合并在一起使用，只能采用再分区的方式，这个过程需要数据的备份和恢复。</p>
<p>当采用LVM时，情况有所不同：</p>
<p>1.硬盘的多个分区由LVM统一为卷组管理，能方便的加入或移走分区以扩大或减小卷组的可用容量，充分利用硬盘空间；</p>
<p>2.文件系统建立在逻辑卷上，而逻辑卷可根据需要改动大小(在卷组容量范围内)以满足需求；</p>
<p>3.当系统空间不足而加入新的硬盘时，不必把用户的数据从原硬盘迁移到新硬盘，而只须把新的分区加入卷组并扩充逻辑卷即可。</p>
<h3 id="三、-LVM基本术语"><a href="#三、-LVM基本术语" class="headerlink" title="三、 LVM基本术语"></a>三、 LVM基本术语</h3><p>​    前面谈到，LVM是在磁盘分区和文件系统之间添加的一个逻辑层，来为文件系统屏蔽下层磁盘分区布局，提供一个抽象的盘卷，在盘卷上建立文件系统。首先我们讨论以下几个LVM术语：</p>
<ul>
<li><strong>物理存储介质（The physical media）</strong><br>这里指系统的存储设备：硬盘，如：/dev/hda1、/dev/sda等等，是存储系统最低层的存储单元。 </li>
<li><strong>物理卷（physical volume）</strong><br>物理卷就是指硬盘分区或从逻辑上与磁盘分区具有同样功能的设备(如RAID)，是LVM的基本存储逻辑块，但和基本的物理存储介质（如分区、磁盘等）比较，却包含有与LVM相关的管理参数。 </li>
<li><strong>卷组（Volume Group）</strong><br>LVM卷组类似于非LVM系统中的物理硬盘，其由物理卷组成。可以在卷组上创建一个或多个“LVM分区”（逻辑卷），LVM卷组由一个或多个物理卷组成。 </li>
<li><strong>逻辑卷（logical volume）</strong><br>LVM的逻辑卷类似于非LVM系统中的硬盘分区，在逻辑卷之上可以建立文件系统(比如/home或者/usr等)。 </li>
<li><strong>PE（physical extent）</strong><br>每一个物理卷被划分为称为PE(Physical Extents)的基本单元，具有唯一编号的PE是可以被LVM寻址的最小单元。PE的大小是可配置的，默认为4MB。 </li>
<li><strong>LE（logical extent）</strong>逻辑卷也被划分为被称为LE(Logical Extents) 的可被寻址的基本单位。在同一个卷组中，LE的大小和PE是相同的，并且一一对应。</li>
</ul>
<p><img src="http://p.blog.csdn.net/images/p_blog_csdn_net/steelren/318037/o_061219150067671.jpg" alt="img"></p>
<p>​    首先可以看到，物理卷（PV）被由大小等同的基本单元PE组成。</p>
<p><img src="http://p.blog.csdn.net/images/p_blog_csdn_net/steelren/318037/o_061219150067672.jpg" alt="img"></p>
<p>​    一个卷组由一个或多个物理卷组成，</p>
<p><img src="http://p.blog.csdn.net/images/p_blog_csdn_net/steelren/318037/o_061219150067673.jpg" alt="img"></p>
<p>​    从上图可以看到，PE和LE有着一一对应的关系。逻辑卷建立在卷组上。逻辑卷就相当于非LVM系统的磁盘分区，可以在其上创建文件系统。</p>
<p>​    下图是磁盘分区、卷组、逻辑卷和文件系统之间的逻辑关系的示意图：</p>
<p><img src="http://p.blog.csdn.net/images/p_blog_csdn_net/steelren/318037/o_061219150067674.jpg" alt="img"></p>
<p>​    和非LVM系统将包含分区信息的元数据保存在位于分区的起始位置的分区表中一样，逻辑卷以及卷组相关的元数据也是保存在位于物理卷起始处的VGDA(卷组描述符区域)中。VGDA包括以下内容： PV描述符、VG描述符、LV描述符、和一些PE描述符 。</p>
<p>​    系统启动LVM时激活VG，并将VGDA加载至内存，来识别LV的实际物理存储位置。当系统进行I/O操作时，就会根据VGDA建立的映射机制来访问实际的物理位置。</p>
<h3 id="四、-安装LVM"><a href="#四、-安装LVM" class="headerlink" title="四、 安装LVM"></a>四、 安装LVM</h3><p>​    首先确定系统中是否安装了lvm工具：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#  rpm –qa|grep lvm</span></div><div class="line">RPM version 4.11.3</div></pre></td></tr></table></figure>
<p>如果命令结果输入类似于上例，那么说明系统已经安装了LVM管理工具；如果命令没有输出则说明没有安装LVM管理工具，则需要从网络下载或者从光盘装LVM rpm工具包。安装了LVM的RPM软件包以后，要使用LVM还需要配置内核支持LVM。RedHat默认内核是支持LVM的</p>
<h3 id="五：-LVM基本操作"><a href="#五：-LVM基本操作" class="headerlink" title="五： LVM基本操作"></a>五： LVM基本操作</h3><h4 id="新建一个逻辑卷并挂载"><a href="#新建一个逻辑卷并挂载" class="headerlink" title="新建一个逻辑卷并挂载"></a>新建一个逻辑卷并挂载</h4><p>1.为运行的虚拟机增加一块磁盘，在虚拟机中fdisk -l，可以看到新增加磁盘sdb</p>
<p>2.创建物理卷PV</p>
<p>   创建物理卷的命令为pvcreate，利用该命令将希望添加到卷组的分区或者整个磁盘创建为物理卷。</p>
<p>将整个磁盘创建为物理卷的命令为：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pvcreate /dev/sdb</div></pre></td></tr></table></figure>
<p>查看创建好的PV</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">[root@mysql001 ~]<span class="comment"># pvdisplay </span></div><div class="line"></div><div class="line">  --- Physical volume ---</div><div class="line">  PV Name               /dev/sdb</div><div class="line">  VG Name               vg_name</div><div class="line">  PV Size               10.00 GiB / not usable 4.00 MiB</div><div class="line">  Allocatable           yes </div><div class="line">  PE Size               4.00 MiB</div><div class="line">  Total PE              2559</div><div class="line">  Free PE               2559</div><div class="line">  Allocated PE          0</div><div class="line">  PV UUID               NvZnOF-jtaG-KFcf-nlqg-0LJp-fzw8-qsO9EL</div></pre></td></tr></table></figure>
<p>3.创建卷组VG</p>
<p>（如果已近存在逻辑卷组，可以直接省去此步，直接到4，当然也可以继续创建）</p>
<p>   vgcreate命令第一个参数是指定该卷组的逻辑名：vg_name。后面参数是指定希望添加到该卷组的物理卷PV。vgcreate在创建卷组 vg_name以外，还设置使用大小为4 MB的PE（默认为4MB），这表示卷组上创建的所有逻辑卷都以 4 MB 为增量单位来进行扩充或缩减。由于内核原因，PE大小决定了逻辑卷的最大大小，4 MB 的PE决定了单个逻辑卷最大容量为 256 GB，若希望使用大于256G的逻辑卷则创建卷组时指定更大的PE。PE大小范围为8 KB 到 512 MB，并且必须总是 2 的倍数（使用-s指定，具体请参考man vgcreate）。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vgcreate vg_name /dev/sdb</div></pre></td></tr></table></figure>
<p>通过<code>vgdisplay</code>查看，可以看到包含2559个PE,大小  10.00 GiB，未分配的PE数</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">[root@mysql001 ~]<span class="comment"># vgdisplay </span></div><div class="line">   </div><div class="line">  --- Volume group ---</div><div class="line">  VG Name               vg_name</div><div class="line">  System ID             </div><div class="line">  Format                lvm2</div><div class="line">  Metadata Areas        1</div><div class="line">  Metadata Sequence No  1</div><div class="line">  VG Access             <span class="built_in">read</span>/write</div><div class="line">  VG Status             resizable</div><div class="line">  MAX LV                0</div><div class="line">  Cur LV                0</div><div class="line">  Open LV               0</div><div class="line">  Max PV                0</div><div class="line">  Cur PV                1</div><div class="line">  Act PV                1</div><div class="line">  VG Size               10.00 GiB</div><div class="line">  PE Size               4.00 MiB</div><div class="line">  Total PE              2559</div><div class="line">  Alloc PE / Size       0 / 0   </div><div class="line">  Free  PE / Size       2559 / 10.00 GiB</div><div class="line">  VG UUID               0XdJE4-OJJy-R6R3-IsmZ-DnOT-9P2L-E80rSS</div></pre></td></tr></table></figure>
<p>4.创建逻辑卷</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">lvcreate -L 10G -n lvm_name vg_name</div></pre></td></tr></table></figure>
<p>-L指定最终大小大小，或者-l指定PE的个数均可</p>
<p>5.创建文件系统</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkfs.xfs /dev/vg_name/lvm_name</div></pre></td></tr></table></figure>
<p>6.挂载在系统直接使用(需要/etc/fstab)</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mount /dev/vg_name/lvm_name /mnt</div><div class="line">[root@mysql001 ~]<span class="comment"># df -h |grep mnt</span></div><div class="line">/dev/mapper/vg_name-lvm_name   10G   33M   10G   1% /mnt</div></pre></td></tr></table></figure>
<h4 id="扩展逻辑卷大小"><a href="#扩展逻辑卷大小" class="headerlink" title="扩展逻辑卷大小"></a>扩展逻辑卷大小</h4><p>1.新增磁盘vdc</p>
<p>2.创建物理卷</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pvcreate /dev/sdc</div></pre></td></tr></table></figure>
<p>3.扩展物理卷至卷组vg_name</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vgextend vg_name /dev/sdc</div></pre></td></tr></table></figure>
<p>查看新的VG</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">[root@mysql001 ~]<span class="comment"># vgdisplay </span></div><div class="line">   </div><div class="line">  --- Volume group ---</div><div class="line">  VG Name               vg_name</div><div class="line">  System ID             </div><div class="line">  Format                lvm2</div><div class="line">  Metadata Areas        2</div><div class="line">  Metadata Sequence No  3</div><div class="line">  VG Access             <span class="built_in">read</span>/write</div><div class="line">  VG Status             resizable</div><div class="line">  MAX LV                0</div><div class="line">  Cur LV                1</div><div class="line">  Open LV               1</div><div class="line">  Max PV                0</div><div class="line">  Cur PV                2</div><div class="line">  Act PV                2</div><div class="line">  VG Size               19.99 GiB</div><div class="line">  PE Size               4.00 MiB</div><div class="line">  Total PE              5118</div><div class="line">  Alloc PE / Size       2559 / 10.00 GiB</div><div class="line">  Free  PE / Size       2559 / 10.00 GiB</div><div class="line">  VG UUID               0XdJE4-OJJy-R6R3-IsmZ-DnOT-9P2L-E80rSS</div></pre></td></tr></table></figure>
<p>5.增加逻辑卷</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">lvextend -L 19.5G /dev/vg_name/lvm_name</div></pre></td></tr></table></figure>
<p>-L指定要扩展到的目标大小，或者-l指定PE的个数均可，也可以使用+号，表示增加的大小</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">lvextend -L +9.5G /dev/vg_name/lvm_name</div></pre></td></tr></table></figure>
<p>6.调整文件系统大小</p>
<p>ext4 文件系统</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">resize2fs /dev/vg_name/lvm_name</div></pre></td></tr></table></figure>
<p>如果是xfs格式的文件系统 需要使用  xfs_growfs</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xfs_growfs /dev/vg_name/lvm_name</div></pre></td></tr></table></figure>
<h4 id="减小逻辑卷大小"><a href="#减小逻辑卷大小" class="headerlink" title="减小逻辑卷大小"></a>减小逻辑卷大小</h4><p>增加是先增容量，再resize，减小是先resize，再reduce</p>
<p>使用lvreduce即可缩小逻辑卷的容量，同样需要首先将文件系统卸载：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">umount /mnt</div><div class="line">resize2fs <span class="_">-s</span> -10G /dev/vg_name/lvm_name</div><div class="line">lvreduce -L -10G /dev/vg_name/lvm_name</div></pre></td></tr></table></figure>
<h4 id="删除逻辑卷"><a href="#删除逻辑卷" class="headerlink" title="删除逻辑卷"></a>删除逻辑卷</h4><p>删除逻辑卷以前首先需要将其卸载</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">umount /mnt</div><div class="line">lvremove /dev/vg_name/lvm_namebash</div></pre></td></tr></table></figure>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="http://blog.csdn.net/steelren/article/details/1931363" target="_blank" rel="external">Linux逻辑盘卷管理LVM详解</a></p>
<p><a href="http://wiki.tldp.org/LVM-HOWTO" target="_blank" rel="external">http://wiki.tldp.org/LVM-HOWTO</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍了LVM的基本概念及磁盘扩容操作。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://image.wangshengzhuang.com/17-6-23/4466666.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://wangshengzhuang.com/categories/Linux/"/>
    
      <category term="Linux基础" scheme="http://wangshengzhuang.com/categories/Linux/Linux%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Linux" scheme="http://wangshengzhuang.com/tags/Linux/"/>
    
      <category term="LVM" scheme="http://wangshengzhuang.com/tags/LVM/"/>
    
  </entry>
  
  <entry>
    <title>Supervisor简介、安装、配置</title>
    <link href="http://wangshengzhuang.com/2017/05/26/%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3/Supervisor/Supervisor%E7%AE%80%E4%BB%8B/"/>
    <id>http://wangshengzhuang.com/2017/05/26/运维相关/Supervisor/Supervisor简介/</id>
    <published>2017-05-25T16:00:00.000Z</published>
    <updated>2017-08-20T14:58:35.130Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍了supervisor的安装、使用。</p>
<p><img src="http://image.wangshengzhuang.com/17-5-11/27833402-file_1494510301732_82f7.jpg" alt=""></p>
<a id="more"></a>
<h3 id="1-什么是supervisor"><a href="#1-什么是supervisor" class="headerlink" title="1. 什么是supervisor"></a>1. <strong>什么是supervisor</strong></h3><p> Supervisor是一个Python开发的client/server系统，可以管理和监控类unix上面的进程。类似daemontools</p>
<p>什么情况下我们需要进程管理呢？就是执行一些需要以守护进程方式执行的程序，比如一个后台任务，如经常会碰到要写一些守护进程，简单做法放入后台：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">shell&gt; nohup python xxx.py &amp;</div></pre></td></tr></table></figure>
<p>除此之外，Supervisor 还能很友好的管理程序在命令行上输出的日志，可以将日志重定向到自定义的日志文件中，还能按文件大小对日志进行分割。</p>
<h3 id="2-为啥用supervisor"><a href="#2-为啥用supervisor" class="headerlink" title="2. 为啥用supervisor"></a>2. 为啥用supervisor</h3><p><strong>方便</strong></p>
<p>为啥简单呢？因为咱们通常管理linux进程的时候，一般来说都需要自己编写一个能够实现进程start/stop/restart/reload功能的脚本，然后丢到/etc/init.d/下面。这么做有很多不好的地方，第一我们要编写这个脚本，这就很耗时耗力了。第二，当这个进程挂掉的时候，linux不会自动重启它的，想要自动重启的话，我们还要自己写一个监控重启脚本。而supervisor则可以完美的解决这些问题。supervisor管理进程，是通过fork/exec的方式把这些被管理的进程，当作supervisor的子进程来启动。这样的话，我们只要在supervisor的配置文件中，把要管理的进程的可执行文件的路径写进去就OK了。这样就省下了我们如同linux管理进程的时自己写控制脚本的麻烦了。第二，被管理进程作为supervisor的子进程，当子进程挂掉的时候，父进程可以准确获取子进程挂掉的信息的，所以当然也就可以对挂掉的子进程进行自动重启了，当然重启还是不重启，也要看你的配置文件里面有木有设置autostart=true了。</p>
<p><strong>精确</strong></p>
<p> Supervisord将进程作为子进程启动，因此可以一直知晓子进程的状态，可以方便查询。而基于pid文件文件获取进程状态有时候不靠谱</p>
<p><strong>权限代理</strong></p>
<p>某些进程需要root或者sudo权限运行，而又不方便把机器的root权限和sudo权限开放给用户的时候，普通用户可以借助supervisor的命令和web UI进行进程的启动和关闭</p>
<p><strong>进程组</strong></p>
<p>linux系统没有批量启动关闭进程的功能，我们想要停止多个进程，只能一个一个的去停止，要么就自己写个脚本去批量停止。Supervisor 允许赋予进程优先级，可以使用supervisorctl 的“start all”, and “restart all”，按照优先级顺序启动。并且进程可以分组，相关的进程可以作为一个单元启动。</p>
<h3 id="3-supervisor特点"><a href="#3-supervisor特点" class="headerlink" title="3. supervisor特点"></a>3. supervisor特点</h3><ul>
<li><strong>简单</strong> :supervisor通过一个 INI-style的文件配置，简单易学。提供了许多诸如重启失败进程、自动日子归档的功能</li>
<li><strong>中心化</strong>:    可以在在同一个地方启动 停止 监控子进程，进程可以单独控制，也可以分组控制，并提供命令行和web接口配置supervisor</li>
<li><strong>高效</strong>:    通过 fork/exec启动子进程</li>
<li><strong>可扩展</strong>:  提供了simple event notification protocol和XML-RPC interface，方便通过各种语言进行配置管理</li>
<li><strong>兼容性强</strong>: 类Unix都支持，不支持windows，基于Python</li>
<li><strong>作为一款已经被使用了十多年的软件，可用性已经被广泛证明</strong></li>
</ul>
<h3 id="4-Supervisor-组成"><a href="#4-Supervisor-组成" class="headerlink" title="4. Supervisor 组成"></a>4. Supervisor 组成</h3><ol>
<li><strong>supervisord</strong>：supervisord是supervisor的服务端程序。负责启动子程序，应答客户端命令，重启crash进程，子程序日志记录，对进程变化发送事件通知等</li>
<li><strong>supervisorctl：</strong>  客户端命令行工具，可以连接服务器端，进行进程的启动、关闭、重启、状态查看等。重要的一点是，supervisorctl不仅可以连接到本机上的supervisord，还可以连接到远程的supervisord，当然在本机上面是通过UNIX socket连接的，远程是通过TCP socket连接的。supervisorctl和supervisord之间的通信，是通过xml_rpc完成的。    相应的配置在[supervisorctl]块里面</li>
<li><strong>Web Server</strong>   可以在界面上管理进程的WEB UI, 通过[inet_http_server] section配置，默认<a href="http://localhost:9001/`" target="_blank" rel="external">http://localhost:9001/`</a></li>
<li><strong>XML-RPC Interface</strong> XML-RPC接口，提供XML-RPC服务来对子进程进行管理，监控，参照 <a href="http://supervisord.org/api.html#xml-rpc" target="_blank" rel="external"><em>XML-RPC API Documentation</em></a>.</li>
</ol>
<h3 id="5-安装"><a href="#5-安装" class="headerlink" title="5 安装"></a>5 安装</h3><h4 id="5-1-yum-安装-推荐"><a href="#5-1-yum-安装-推荐" class="headerlink" title="5.1 yum 安装(推荐)"></a>5.1 yum 安装(推荐)</h4><figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum <span class="keyword">install</span> supervisor</div></pre></td></tr></table></figure>
<p>会自动安装成服务形式，可以使用systemctl进行管理</p>
<h4 id="5-2-使用Setuptools安装"><a href="#5-2-使用Setuptools安装" class="headerlink" title="5.2 使用Setuptools安装"></a>5.2 使用Setuptools安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget -q http://peak.telecommunity.com/dist/ez_setup.py</div><div class="line">python ez_setup.py</div><div class="line">easy_install supervisor</div></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">yum install python-setuptools</div><div class="line">easy_install supervisor</div></pre></td></tr></table></figure>
<h4 id="5-3-安装方式3"><a href="#5-3-安装方式3" class="headerlink" title="5.3 安装方式3"></a>5.3 安装方式3</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">wget https://pypi.python.org/packages/80/37/964c0d53cbd328796b1aeb7abea4c0f7b0e8c7197ea9b0b9967b7d004def/supervisor-3.3.1.tar.gz</div><div class="line">tar -zxvf supervisor-3.3.1.tar.gz </div><div class="line"><span class="built_in">cd</span> supervisor-3.3.1</div><div class="line">python setup.py install</div></pre></td></tr></table></figure>
<h4 id="5-4生成配置文件"><a href="#5-4生成配置文件" class="headerlink" title="5.4生成配置文件"></a>5.4生成配置文件</h4><p><code>yum 安装方式不需要此步骤，因为已经自动生产了supervisord.conf 和supervisord.d文件夹</code></p>
<p>安装完 supervisor 之后，可以运行<code>echo_supervisord_conf</code> 命令输出默认的配置项，也可以重定向到一个配置文件里：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo_supervisord_conf &gt; /etc/supervisord.conf</div></pre></td></tr></table></figure>
<h4 id="5-5启动"><a href="#5-5启动" class="headerlink" title="5.5启动"></a>5.5启动</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">supervisord -c /etc/supervisord.conf</div></pre></td></tr></table></figure>
<h3 id="6-配置文件-etc-supervisord-conf"><a href="#6-配置文件-etc-supervisord-conf" class="headerlink" title="6. 配置文件/etc/supervisord.conf"></a>6. 配置文件/etc/supervisord.conf</h3><p>上面我们已经把 supervisrod 运行起来了，现在可以添加我们要管理的进程的配置文件。可以把所有配置项都写到 supervisord.conf 文件里，但并不推荐这样做，而是通过 include 的方式把不同的程序（组）写到不同的配置文件里。yum方式安装，会自动配置。</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="section">[include]</span></div><div class="line"><span class="attr">files</span> = supervisord.d/*.ini    ; 可以是 *.conf 或 *.ini</div></pre></td></tr></table></figure>
<p>/etc/supervisord.conf 参数说明</p>
<figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">[unix_http_server]</div><div class="line">file=/tmp/supervisor.sock   ; UNIX socket 文件，supervisorctl 会使用</div><div class="line">;chmod=0700                 ; socket 文件的 mode，默认是 0700</div><div class="line"><span class="section">;chown=nobody:nogroup       ; socket 文件的 owner，格式： uid:gid</span></div><div class="line"> </div><div class="line">;[inet_http_server]         ; HTTP 服务器，提供 web 管理界面</div><div class="line"><span class="section">;port=127.0.0.1:9001        ; Web 管理后台运行的 IP 和端口，如果开放到公网，需要注意安全性</span></div><div class="line">;username=user              ; 登录管理后台的用户名</div><div class="line">;password=123               ; 登录管理后台的密码</div><div class="line"> </div><div class="line">[supervisord]</div><div class="line">logfile=/tmp/supervisord.log ; 日志文件，默认是 $CWD/supervisord.log</div><div class="line">logfile_maxbytes=50MB        ; 日志文件大小，超出会 rotate，默认 50MB</div><div class="line">logfile_backups=10           ; 日志文件保留备份数量默认 10</div><div class="line">loglevel=info                ; 日志级别，默认 info，其它: debug,warn,trace</div><div class="line">pidfile=/tmp/supervisord.pid ; pid 文件</div><div class="line">nodaemon=false               ; 是否在前台启动，默认是 false，即以 daemon 的方式启动</div><div class="line">minfds=1024                  ; 可以打开的文件描述符的最小值，默认 1024</div><div class="line">minprocs=200                 ; 可以打开的进程数的最小值，默认 200</div><div class="line"> </div><div class="line">; the below section must remain in the config file for RPC</div><div class="line">; (supervisorctl/web interface) to work, additional interfaces may be</div><div class="line">; added by defining them in separate rpcinterface: sections</div><div class="line"><span class="section">[rpcinterface:supervisor]</span></div><div class="line">supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface</div><div class="line"> </div><div class="line">[supervisorctl]</div><div class="line">serverurl=unix:///tmp/supervisor.sock ; 通过 UNIX socket 连接 supervisord，路径与 unix_http_server 部分的 file 一致</div><div class="line"><span class="section">;serverurl=http://127.0.0.1:9001 ; 通过 HTTP 的方式连接 supervisord</span></div><div class="line"> </div><div class="line">; 包含其他的配置文件</div><div class="line">[<span class="keyword">include</span>]</div><div class="line">files = /etc/supervisord.d/*.ini    ; 可以是 *.conf 或 *.ini</div></pre></td></tr></table></figure>
<h3 id="7-添加一个被管理的进程"><a href="#7-添加一个被管理的进程" class="headerlink" title="7. 添加一个被管理的进程"></a>7. 添加一个被管理的进程</h3><p>我们假如有一个hello.py</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">import web</div><div class="line">urls = (     <span class="string">'/(.*)'</span>,<span class="string">'hello'</span> )</div><div class="line">app = web.application(urls, globals())</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">hello</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">GET</span><span class="params">(<span class="keyword">self</span>, name)</span></span>:</div><div class="line">        <span class="keyword">return</span> <span class="string">'hello: '</span> + name</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name_<span class="number">_</span> == <span class="string">'__main__'</span>:</div><div class="line">    app.run()</div></pre></td></tr></table></figure>
<p>所以直接在命令行启动的方式可能是这样的：(需要先安装web.py <code>easy_install web.py</code>)</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">python</span>  /<span class="keyword">opt</span>/hello.<span class="keyword">py</span></div></pre></td></tr></table></figure>
<p>现在编写一份配置文件<code>/etc/supervisord.d/hello.ini</code>来管理这个进程</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="section">[program:hello]</span></div><div class="line"><span class="attr">directory</span> = /opt    ; 程序的启动目录</div><div class="line"><span class="attr">command</span> = python /opt/hello.py  ; 启动命令，可以看出与手动在命令行启动的命令是一样的</div><div class="line"><span class="attr">autostart</span> = <span class="literal">true</span>     ; 在 supervisord 启动的时候也自动启动</div><div class="line"><span class="attr">startsecs</span> = <span class="number">5</span>        ; 启动 <span class="number">5</span> 秒后没有异常退出，就当作已经正常启动了</div><div class="line"><span class="attr">autorestart</span> = <span class="literal">true</span>   ; 程序异常退出后自动重启</div><div class="line"><span class="attr">startretries</span> = <span class="number">3</span>     ; 启动失败自动重试次数，默认是 <span class="number">3</span></div><div class="line"><span class="attr">user</span> = xqzt          ; 用哪个用户启动</div><div class="line"><span class="attr">redirect_stderr</span> = <span class="literal">true</span>  ; 把 stderr 重定向到 stdout，默认 <span class="literal">false</span></div><div class="line"><span class="attr">stdout_logfile_maxbytes</span> = <span class="number">20</span>MB  ; stdout 日志文件大小，默认 <span class="number">50</span>MB</div><div class="line"><span class="attr">stdout_logfile_backups</span> = <span class="number">20</span>     ; stdout 日志文件备份数</div><div class="line"><span class="comment">; stdout 日志文件，需要注意当指定目录不存在时无法正常启动，所以需要手动创建目录（supervisord 会自动创建日志文件）</span></div><div class="line"><span class="attr">stdout_logfile</span> = /var/log/supervisor/hello.log</div></pre></td></tr></table></figure>
<p>一份配置文件至少需要一个 <code>[program:x]</code> 部分的配置，来告诉 supervisord 需要管理那个进程。<code>[program:x]</code> 语法中的 <code>x</code> 表示 program name，会在客户端（supervisorctl 或 web 界面）显示，在 supervisorctl 中通过这个值来对程序进行 start、restart、stop 等操作。</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">supervisor</span>&gt; <span class="selector-tag">status</span></div><div class="line"><span class="selector-tag">hello</span>                            <span class="selector-tag">RUNNING</span>   <span class="selector-tag">pid</span> 2809, <span class="selector-tag">uptime</span> 0<span class="selector-pseudo">:00</span><span class="selector-pseudo">:06</span></div></pre></td></tr></table></figure>
<h3 id="8-使用-supervisorctl"><a href="#8-使用-supervisorctl" class="headerlink" title="8. 使用 supervisorctl"></a>8. 使用 supervisorctl</h3><p>Supervisorctl 是 supervisord 的一个命令行客户端工具，启动时需要指定与 supervisord 使用同一份配置文件，否则与 supervisord 一样按照顺序查找配置文件。supervisorctl 这个命令会进入 supervisorctl 的 shell 界面，然后可以执行不同的命令了，也可以直接在 bash 终端运行。</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"># supervisorctl --<span class="keyword">help</span></div><div class="line">supervisorctl -- control applications run by supervisord from the cmd <span class="built_in">line</span>.</div><div class="line"></div><div class="line">Usage: /usr/bin/supervisorctl [<span class="keyword">options</span>] [action [arguments]]</div><div class="line"></div><div class="line">Option<span class="variable">s:</span></div><div class="line">-<span class="keyword">c</span>/--configuration -- configuration <span class="keyword">file</span> path (default /etc/supervisord.<span class="keyword">conf</span>)</div><div class="line">-h/--<span class="keyword">help</span> -- <span class="keyword">print</span> usage message <span class="built_in">and</span> <span class="keyword">exit</span></div><div class="line">-i/--interactive -- start <span class="keyword">an</span> interactive <span class="keyword">shell</span> after executing commands</div><div class="line">-s/--serverurl URL -- URL <span class="keyword">on</span> which supervisord server <span class="keyword">is</span> listening</div><div class="line">     (default <span class="string">"http://localhost:9001"</span>).</div><div class="line">-<span class="keyword">u</span>/--username -- username <span class="keyword">to</span> use <span class="keyword">for</span> authentication with server</div><div class="line">-<span class="keyword">p</span>/--password -- password <span class="keyword">to</span> use <span class="keyword">for</span> authentication with server</div><div class="line">-r/--<span class="keyword">history</span>-<span class="keyword">file</span> -- keep <span class="keyword">a</span> readline <span class="keyword">history</span> (<span class="keyword">if</span> readline <span class="keyword">is</span> available)</div></pre></td></tr></table></figure>
<p>输入help,可以查看支持的命令及用法</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">supervisor&gt; <span class="keyword">help</span></div><div class="line"></div><div class="line">default commands (<span class="built_in">type</span> <span class="keyword">help</span> <span class="symbol">&lt;topic&gt;</span>):</div><div class="line">=====================================</div><div class="line"><span class="built_in">add</span>    clear  fg        <span class="keyword">open</span>  <span class="keyword">quit</span>    <span class="built_in">remove</span>  restart   start   <span class="keyword">stop</span>  <span class="keyword">update</span> </div><div class="line">avail  <span class="keyword">exit</span>   maintail  pid   reload  reread  shutdown  status  tail  <span class="keyword">version</span></div><div class="line"></div><div class="line">supervisor&gt; <span class="keyword">help</span> start</div><div class="line">start <span class="symbol">&lt;name&gt;</span>		Start <span class="keyword">a</span> process</div><div class="line">start <span class="symbol">&lt;gname&gt;</span>:*		Start <span class="keyword">all</span> processes in <span class="keyword">a</span> group</div><div class="line">start <span class="symbol">&lt;name&gt;</span> <span class="symbol">&lt;name&gt;</span>	Start multiple processes <span class="built_in">or</span> groups</div><div class="line">start <span class="keyword">all</span>		Start <span class="keyword">all</span> processes</div></pre></td></tr></table></figure>
<p>常用命令</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> 停止某一个进程，program_name 为 [program:x] 里的 x</span></div><div class="line">supervisorctl stop program_name</div><div class="line"><span class="meta">#</span><span class="bash"> 启动某个进程</span></div><div class="line">supervisorctl start program_name</div><div class="line"><span class="meta">#</span><span class="bash"> 重启某个进程</span></div><div class="line">supervisorctl restart program_name</div><div class="line"><span class="meta">#</span><span class="bash"> 结束所有属于名为 groupworker 这个分组的进程 (start，restart 同理)</span></div><div class="line">supervisorctl stop groupworker:</div><div class="line"><span class="meta">#</span><span class="bash"> 结束 groupworker:name1 这个进程 (start，restart 同理)</span></div><div class="line">supervisorctl stop groupworker:name1</div><div class="line"><span class="meta">#</span><span class="bash"> 停止全部进程，注：start、restart、stop 都不会载入最新的配置文件</span></div><div class="line">supervisorctl stop all</div><div class="line"><span class="meta">#</span><span class="bash"> 载入最新的配置文件，停止原有进程并按新的配置启动、管理所有进程</span></div><div class="line">supervisorctl reload</div><div class="line"><span class="meta">#</span><span class="bash"> 根据最新的配置文件，启动新配置或有改动的进程，配置没有改动的进程不会受影响而重启</span></div><div class="line">supervisorctl update</div></pre></td></tr></table></figure>
<h3 id="9-supervisor-Web-UI"><a href="#9-supervisor-Web-UI" class="headerlink" title="9. supervisor Web UI"></a>9. supervisor Web UI</h3><p>除了 supervisorctl 之外，还可以配置 supervisrod 启动 web 管理界面，这个 web 后台使用 Basic Auth 的方式进行身份认证。将supervisord.conf中[inet_http_server]部分做相应配置，在supervisorctl中reload即可启动web管理界面</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="section">[inet_http_server]</span> <span class="comment">; HTTP 服务器，提供 web 管理界面</span></div><div class="line"><span class="attr">port</span>=<span class="number">172.17</span>.<span class="number">84.64</span>:<span class="number">9001</span> ; Web 管理后台运行的 IP 和端口，如果开放到公网，需要注意安全性</div><div class="line"><span class="attr">username</span>=user ; 登录管理后台的用户名</div><div class="line"><span class="attr">password</span>=<span class="number">123</span> ; 登录管理后台的密码</div></pre></td></tr></table></figure>
<p>在浏览器中输入<a href="http://127.0.0.1:9001，可进入web管理界面" target="_blank" rel="external">http://127.0.0.1:9001，可进入web管理界面</a></p>
<p><img src="http://image.wangshengzhuang.com/17-5-11/65946564-file_1494502213044_176b5.png" alt=""></p>
<h3 id="10-将多个进程按组管理"><a href="#10-将多个进程按组管理" class="headerlink" title="10.  将多个进程按组管理"></a>10.  将多个进程按组管理</h3><p>Supervisor 同时还提供了另外一种进程组的管理方式，通过这种方式，可以使用 supervisorctl 命令来管理一组进程。跟 [program:x] 的进程组不同的是，这里的进程是一个个的 [program:x] 。</p>
<figure class="highlight sqf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[<span class="built_in">group</span>:thegroupname]</div><div class="line">programs=progname1,progname2  ; each refers <span class="keyword">to</span> <span class="string">'x'</span> <span class="built_in">in</span> [program:x] definitions</div><div class="line"><span class="built_in">priority</span>=<span class="number">999</span>                  ; the relative start <span class="built_in">priority</span> (<span class="keyword">default</span> <span class="number">999</span>)</div></pre></td></tr></table></figure>
<p>当添加了上述配置后，<code>progname1</code> 和 <code>progname2</code> 的进程名就会变成 <code>thegroupname:progname1</code> 和 <code>thegroupname:progname2</code> 以后就要用这个名字来管理进程了，而不是之前的 <code>progname1</code>。</p>
<p>以后执行 <code>supervisorctl stop thegroupname:</code> 就能同时结束 <code>progname1</code> 和 <code>progname2</code>，执行 <code>supervisorctl stop thegroupname:progname1</code> 就能结束 <code>progname1</code>。如下所示</p>
<p><code>/etc/supervisord.d/hello.ini</code>文件</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">[group:group1]</div><div class="line">programs=hello</div><div class="line"></div><div class="line">[program:hello]</div><div class="line">directory = /opt    ; 程序的启动目录</div><div class="line">command = python /opt/hello.py  ; 启动命令，可以看出与手动在命令行启动的命令是一样的</div><div class="line">autostart = true     ; 在 supervisord 启动的时候也自动启动</div><div class="line">startsecs = 5        ; 启动 5 秒后没有异常退出，就当作已经正常启动了</div><div class="line">autorestart = true   ; 程序异常退出后自动重启</div><div class="line">startretries = 3     ; 启动失败自动重试次数，默认是 3</div><div class="line">user = xqzt          ; 用哪个用户启动</div><div class="line">redirect_stderr = true  ; 把 stderr 重定向到 stdout，默认 false</div><div class="line">stdout_logfile_maxbytes = 20MB  ; stdout 日志文件大小，默认 50MB</div><div class="line">stdout_logfile_backups = 20     ; stdout 日志文件备份数</div><div class="line">; stdout 日志文件，需要注意当指定目录不存在时无法正常启动，所以需要手动创建目录（supervisord 会自动创建日志文件）</div><div class="line">; stdout_logfile = /var/log/supervisor/hello.log</div></pre></td></tr></table></figure>
<p>进程状态</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-attr">[root@centos7 etc]</span># <span class="selector-tag">supervisorctl</span> </div><div class="line"><span class="selector-tag">group1</span><span class="selector-pseudo">:hello</span>                     <span class="selector-tag">RUNNING</span>   <span class="selector-tag">pid</span> 2842, <span class="selector-tag">uptime</span> 0<span class="selector-pseudo">:02</span><span class="selector-pseudo">:53</span></div></pre></td></tr></table></figure>
<h3 id="11-Subprocesses进程状态变化"><a href="#11-Subprocesses进程状态变化" class="headerlink" title="11. Subprocesses进程状态变化"></a>11. Subprocesses进程状态变化</h3><p><img src="http://supervisord.org/_images/subprocess-transitions.png" alt="http://supervisord.org/_images/subprocess-transitions.png"></p>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="http://supervisord.org/#" target="_blank" rel="external">官方文档</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍了supervisor的安装、使用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://image.wangshengzhuang.com/17-5-11/27833402-file_1494510301732_82f7.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="运维相关" scheme="http://wangshengzhuang.com/categories/%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3/"/>
    
      <category term="Supervisor" scheme="http://wangshengzhuang.com/categories/%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3/Supervisor/"/>
    
    
      <category term="supervisor" scheme="http://wangshengzhuang.com/tags/supervisor/"/>
    
  </entry>
  
  <entry>
    <title>nslookup命令</title>
    <link href="http://wangshengzhuang.com/2017/05/25/Linux/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4/nslookup%E5%91%BD%E4%BB%A4/"/>
    <id>http://wangshengzhuang.com/2017/05/25/Linux/每天一个Linux命令/nslookup命令/</id>
    <published>2017-05-25T14:55:56.000Z</published>
    <updated>2017-06-29T15:08:22.847Z</updated>
    
    <content type="html"><![CDATA[<p>摘要: nslookup命令简介</p>
<a id="more"></a>
<h3 id="1-命令简介"><a href="#1-命令简介" class="headerlink" title="1. 命令简介"></a>1. 命令简介</h3><p> nslookup命令是常用域名查询工具，就是查DNS信息用的命令。</p>
<h3 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install <span class="built_in">bind</span>-utils</div></pre></td></tr></table></figure>
<h3 id="3-工作模式"><a href="#3-工作模式" class="headerlink" title="3. 工作模式"></a>3. 工作模式</h3><p>nslookup有两种工作模式，即“交互模式”和“非交互模式”。在“交互模式”下，用户可以向域名服务器查询各类主机、域名的信息，或者输出域名中的主机列表。而在“非交互模式”下，用户可以针对一个主机或域名仅仅获取特定的名称或所需信息。</p>
<h4 id="3-1-交互模式"><a href="#3-1-交互模式" class="headerlink" title="3.1. 交互模式"></a>3.1. 交互模式</h4><p>进入交互模式，总共有两种方法。</p>
<p>第一种方法，直接输入nslookup命令，不加任何参数，则直接进入交互模式，此时nslookup会连接到默认的域名服务器（即/etc/resolv.conf的第一个dns地址）。</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ nslookup</div><div class="line">&gt; www<span class="selector-class">.baidu</span><span class="selector-class">.com</span></div><div class="line">Server:         <span class="number">192.168</span>.<span class="number">0.1</span> <span class="comment">//上连的DNS服务器</span></div><div class="line">Address:        <span class="number">192.168</span>.<span class="number">0.1</span>#<span class="number">53</span> <span class="comment">//上连的DNS服务器的IP地址与端口号</span></div><div class="line"></div><div class="line">Non-authoritative answer: <span class="comment">//非权威答案，即从上连DNS服务器的本地缓存中读取出的值，而非实际去查询到的值</span></div><div class="line">www<span class="selector-class">.baidu</span><span class="selector-class">.com</span>   canonical name = www<span class="selector-class">.a</span><span class="selector-class">.shifen</span><span class="selector-class">.com</span>. <span class="comment">//说明www.baidu.com有个别名叫www.a.shifen.com</span></div><div class="line">Name:   www<span class="selector-class">.a</span><span class="selector-class">.shifen</span><span class="selector-class">.com</span> <span class="comment">//域名www.a.shifen.com</span></div><div class="line">Address: <span class="number">119.75</span>.<span class="number">217.56</span> <span class="comment">//对应的IP地址之一</span></div><div class="line">Name:   www<span class="selector-class">.a</span><span class="selector-class">.shifen</span><span class="selector-class">.com</span></div><div class="line">Address: <span class="number">119.75</span>.<span class="number">218.77</span><span class="comment">//对应的IP地址之二</span></div></pre></td></tr></table></figure>
<p>如果想更换DNS, 使用Server</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">[root@mysql001 ~]<span class="comment"># nslookup</span></div><div class="line">&gt; www.baidu.com</div><div class="line">Server:		192.168.0.1</div><div class="line">Address:	192.168.0.1<span class="comment">#53</span></div><div class="line"></div><div class="line">Name:	www.baidu.com</div><div class="line">Address: 183.232.231.172</div><div class="line">&gt; server 8.8.8.8</div><div class="line">Default server: 8.8.8.8</div><div class="line">Address: 8.8.8.8<span class="comment">#53</span></div><div class="line">&gt; www.baidu.com</div><div class="line">Server:		8.8.8.8</div><div class="line">Address:	8.8.8.8<span class="comment">#53</span></div><div class="line"></div><div class="line">Name:	www.baidu.com</div><div class="line">Address: 111.13.100.91</div><div class="line">Name:	www.baidu.com</div><div class="line">Address: 111.13.100.92</div></pre></td></tr></table></figure>
<p>第二种方法，是支持选定不同域名服务器的。需要设置第一个参数为“-”，然后第二个参数是设置要连接的域名服务器主机名或IP地址。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[root@mysql001 ~]<span class="comment"># nslookup - 8.8.8.8</span></div><div class="line">&gt; www.baidu.com</div><div class="line">Server:		8.8.8.8</div><div class="line">Address:	8.8.8.8<span class="comment">#53</span></div><div class="line"></div><div class="line">Name:	www.baidu.com</div><div class="line">Address: 111.13.100.92</div><div class="line">Name:	www.baidu.com</div><div class="line">Address: 111.13.100.91</div></pre></td></tr></table></figure>
<h4 id="3-2-非交互模式"><a href="#3-2-非交互模式" class="headerlink" title="3.2. 非交互模式"></a>3.2. 非交互模式</h4><p>直接在nslookup命令后加上所要查询的IP或主机名，那么就进入了非交互模式。当然，这个时候你也可以在第二个参数位置设置所要连接的域名服务器。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">[root@mysql001 ~]<span class="comment"># nslookup www.baidu.com - 8.8.8.8</span></div><div class="line">Server:		8.8.8.8</div><div class="line">Address:	8.8.8.8<span class="comment">#53</span></div><div class="line"></div><div class="line">Name:	www.baidu.com</div><div class="line">Address: 111.13.100.92</div><div class="line">Name:	www.baidu.com</div><div class="line">Address: 111.13.100.91</div><div class="line"></div><div class="line">[root@mysql001 ~]<span class="comment"># nslookup www.baidu.com 8.8.8.8</span></div><div class="line">Server:		8.8.8.8</div><div class="line">Address:	8.8.8.8<span class="comment">#53</span></div><div class="line"></div><div class="line">Name:	www.baidu.com</div><div class="line">Address: 111.13.100.91</div><div class="line">Name:	www.baidu.com</div><div class="line">Address: 111.13.100.92</div></pre></td></tr></table></figure>
<h3 id="4-常见的DNS服务器推荐"><a href="#4-常见的DNS服务器推荐" class="headerlink" title="4. 常见的DNS服务器推荐"></a>4. 常见的DNS服务器推荐</h3><table>
<thead>
<tr>
<th>DNS</th>
<th>地址</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>Google DNS</td>
<td>8.8.8.8</td>
<td></td>
</tr>
<tr>
<td>114 DNS</td>
<td>114.114.114.114</td>
<td>国内用户量巨大的DNS，访问速度快，各省都有节点，同时满足电信、联通、移动各运营商用户，可以有效预防劫持</td>
</tr>
<tr>
<td>阿里DNS</td>
<td>223.5.5.5        223.6.6.6</td>
<td>全球数百台服务器组成的集群 稳定性好</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;摘要: nslookup命令简介&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://wangshengzhuang.com/categories/Linux/"/>
    
      <category term="每天一个Linux命令" scheme="http://wangshengzhuang.com/categories/Linux/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="每天一个Linux命令" scheme="http://wangshengzhuang.com/tags/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4/"/>
    
      <category term="nslookup" scheme="http://wangshengzhuang.com/tags/nslookup/"/>
    
  </entry>
  
  <entry>
    <title>cp命令</title>
    <link href="http://wangshengzhuang.com/2017/05/24/Linux/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4/cp%E5%91%BD%E4%BB%A4/"/>
    <id>http://wangshengzhuang.com/2017/05/24/Linux/每天一个Linux命令/cp命令/</id>
    <published>2017-05-24T14:55:56.000Z</published>
    <updated>2017-06-29T15:49:26.169Z</updated>
    
    <content type="html"><![CDATA[<p>摘要: cp（Copy file）：将源文件复制至目标文件，或将多个源文件复制至目标目录。</p>
<a id="more"></a>
<h2 id="1、命令简介"><a href="#1、命令简介" class="headerlink" title="1、命令简介"></a>1、命令简介</h2><p><strong>cp</strong>（Copy file）：将源文件复制至目标文件，或将多个源文件复制至目标目录。</p>
<h2 id="2、用法"><a href="#2、用法" class="headerlink" title="2、用法"></a>2、用法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cp [选项]... [-T] 源文件 目标文件</div><div class="line">　或：cp [选项]... 源文件... 目录</div><div class="line">　或：cp [选项]... -t 目录 源文件...</div></pre></td></tr></table></figure>
<h2 id="3、选项"><a href="#3、选项" class="headerlink" title="3、选项"></a>3、选项</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">  <span class="_">-a</span>, --archive       等于<span class="_">-d</span>R --preserve=all,与同时指定 -dpR 这三个选项效果一样，用于复制整个目录，包括目录中的子目录等都递归的复制，而且还要保持文件的访问模式，所有者，时间戳等属性与原文件一样。</div><div class="line">      --backup[=CONTROL        为每个已存在的目标文件创建备份</div><div class="line">  -b                类似--backup 但不接受参数</div><div class="line">      --copy-contents        在递归处理是复制特殊文件内容</div><div class="line">  <span class="_">-d</span>                等于--no-dereference --preserve=links</div><div class="line">  <span class="_">-f</span>, --force            如果目标文件无法打开则将其移除并重试(当 -n 选项存在时则不需再选此项)</div><div class="line">  -i, --interactive        覆盖前询问(使前面的 -n 选项失效),默认cp命令覆盖目标文件时是不会提示的，很多Linux发行版里的cp都被设置别名`cp -i`,其实作用就是给用户一个提醒。如果你不想被提示，那么请这样输入：\cp <span class="built_in">source</span> target，或者使用cp命令的绝对路径/bin/cp</div><div class="line">  -H                跟随源文件中的命令行符号链接</div><div class="line">  <span class="_">-l</span>, --link            对源文件建立硬链接，而非复制文件</div><div class="line">-L, --dereference        总是跟随符号链接</div><div class="line">  -n, --no-clobber        不要覆盖已存在的文件(使前面的 -i 选项失效)</div><div class="line">  -P, --no-dereference        不跟随源文件中的符号链接</div><div class="line">  -p                等于--preserve=模式,所有权,时间戳</div><div class="line">      --preserve[=属性列表    保持指定的属性(默认：模式,所有权,时间戳)，如果可能保持附加属性：环境、链接、xattr 等</div><div class="line">  -c                           same as --preserve=context</div><div class="line">      --sno-preserve=属性列表    不保留指定的文件属性</div><div class="line">      --parents            复制前在目标目录创建来源文件路径中的所有目录</div><div class="line">  -R, -r, --recursive        递归复制目录及其子目录内的所有内容</div><div class="line">      --reflink[=WHEN]        控制克隆/CoW 副本。请查看下面的内如。</div><div class="line">      --remove-destination    尝试打开目标文件前先删除已存在的目的地文件 (相对于 --force 选项)</div><div class="line">      --sparse=WHEN        控制创建稀疏文件的方式</div><div class="line">      --strip-trailing-slashes    删除参数中所有源文件/目录末端的斜杠</div><div class="line">  <span class="_">-s</span>, --symbolic-link        只创建符号链接而不复制文件</div><div class="line">  -S, --suffix=后缀        自行指定备份文件的后缀</div><div class="line">  -t,  --target-directory=目录    将所有参数指定的源文件/目录 复制至目标目录</div><div class="line">  -T, --no-target-directory    将目标目录视作普通文件</div><div class="line">  -u, --update                 使用这项参数后只会在源文件的更改时间较目标文件更新时或是名称相互对应的目标文件并不存在时，才复制文件；</div><div class="line">  -v, --verbose                详细显示命令执行的操作。</div><div class="line">  -x, --one-file-system        复制的文件或目录存放的文件系统，必须与cp指令执行时所处的文件系统相同，否则不复制，亦不处理位于其他分区的文件</div><div class="line">  -Z, --context=CONTEXT        <span class="built_in">set</span> security context of copy to CONTEXT</div></pre></td></tr></table></figure>
<h2 id="4、实例"><a href="#4、实例" class="headerlink" title="4、实例"></a>4、实例</h2><h4 id="实例1：将文件a-txt复制成文件b-txt"><a href="#实例1：将文件a-txt复制成文件b-txt" class="headerlink" title="实例1：将文件a.txt复制成文件b.txt"></a>实例1：将文件a.txt复制成文件b.txt</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@cent6 directory]<span class="comment"># cp a.txt  b.txt</span></div></pre></td></tr></table></figure>
<h4 id="实例2：将文件a-txt复制成文件b-txt，显示详细信息"><a href="#实例2：将文件a-txt复制成文件b-txt，显示详细信息" class="headerlink" title="实例2：将文件a.txt复制成文件b.txt，显示详细信息"></a>实例2：将文件a.txt复制成文件b.txt，显示详细信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@cent6 directory]<span class="comment"># cp -v a.txt  b.txt</span></div><div class="line">`a.txt<span class="string">' -&gt; `b.txt'</span></div></pre></td></tr></table></figure>
<h4 id="实例3：复制文件，只有源文件较目的文件的修改时间新时，才复制文件"><a href="#实例3：复制文件，只有源文件较目的文件的修改时间新时，才复制文件" class="headerlink" title="实例3：复制文件，只有源文件较目的文件的修改时间新时，才复制文件"></a>实例3：复制文件，只有源文件较目的文件的修改时间新时，才复制文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@cent6 directory]<span class="comment"># cp -uv  a.txt  c.txt</span></div></pre></td></tr></table></figure>
<h4 id="实例4：采用交互方式将文件a-txt复制成文件d-txt"><a href="#实例4：采用交互方式将文件a-txt复制成文件d-txt" class="headerlink" title="实例4：采用交互方式将文件a.txt复制成文件d.txt"></a>实例4：采用交互方式将文件a.txt复制成文件d.txt</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@cent6 directory]<span class="comment"># cp -iv a.txt  d.txt</span></div><div class="line">cp: overwrite `d.txt<span class="string">'? y</span></div><div class="line">`a.txt' -&gt; `d.txt<span class="string">'</span></div></pre></td></tr></table></figure>
<h4 id="实例5：将文件a-txt复制成d-txt，因为目的文件已经存在，所以指定使用强制复制的模式"><a href="#实例5：将文件a-txt复制成d-txt，因为目的文件已经存在，所以指定使用强制复制的模式" class="headerlink" title="实例5：将文件a.txt复制成d.txt，因为目的文件已经存在，所以指定使用强制复制的模式"></a>实例5：将文件a.txt复制成d.txt，因为目的文件已经存在，所以指定使用强制复制的模式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@cent6 directory]<span class="comment"># cp -fv a.txt  d.txt</span></div><div class="line">`a.txt<span class="string">' -&gt; `d.txt'</span></div></pre></td></tr></table></figure>
<h4 id="实例6：递归将目录dir1复制到目录dir2下面（此时dir2不存在）"><a href="#实例6：递归将目录dir1复制到目录dir2下面（此时dir2不存在）" class="headerlink" title="实例6：递归将目录dir1复制到目录dir2下面（此时dir2不存在）"></a>实例6：递归将目录dir1复制到目录dir2下面（此时dir2不存在）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@cent6 directory]<span class="comment"># cp -rv dir1 dir2</span></div><div class="line">`dir1<span class="string">' -&gt; `dir2'</span></div><div class="line">`dir1/c.txt<span class="string">' -&gt; `dir2/c.txt'</span></div><div class="line">`dir1/a.txt<span class="string">' -&gt; `dir2/a.txt'</span></div><div class="line">`dir1/b.txt<span class="string">' -&gt; `dir2/b.txt'</span></div><div class="line">`dir1/d.txt<span class="string">' -&gt; `dir2/d.txt'</span></div></pre></td></tr></table></figure>
<h4 id="实例7：递归将目录dir1复制到目录dir2下面（此时dir2已经存在）"><a href="#实例7：递归将目录dir1复制到目录dir2下面（此时dir2已经存在）" class="headerlink" title="实例7：递归将目录dir1复制到目录dir2下面（此时dir2已经存在）"></a>实例7：递归将目录dir1复制到目录dir2下面（此时dir2已经存在）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@cent6 directory]<span class="comment"># cp -rv  dir1  dir2</span></div><div class="line">`dir1/c.txt<span class="string">' -&gt; `dir2/dir1/c.txt'</span></div><div class="line">`dir1/a.txt<span class="string">' -&gt; `dir2/dir1/a.txt'</span></div><div class="line">`dir1/b.txt<span class="string">' -&gt; `dir2/dir1/b.txt'</span></div><div class="line">`dir1/d.txt<span class="string">' -&gt; `dir2/dir1/d.txt'</span></div></pre></td></tr></table></figure>
<h4 id="实例8：复制时保留文件属性"><a href="#实例8：复制时保留文件属性" class="headerlink" title="实例8：复制时保留文件属性"></a>实例8：复制时保留文件属性</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[root@cent6 directory]<span class="comment"># ll</span></div><div class="line">total 0</div><div class="line">-rwxrwxrwx 1 root root 0 Apr 16 16:54 a.txt</div><div class="line">[root@cent6 directory]<span class="comment"># cp a.txt  /tmp/a1.txt</span></div><div class="line">[root@cent6 directory]<span class="comment"># cp -p a.txt  /tmp/a2.txt</span></div><div class="line">[root@cent6 directory]<span class="comment"># ll /tmp</span></div><div class="line">total 12</div><div class="line">-rwxr-xr-x  1 root  root     0 Apr 16 16:56 a1.txt</div><div class="line">-rwxrwxrwx  1 root  root     0 Apr 16 16:54 a2.txt</div></pre></td></tr></table></figure>
<h4 id="实例9：复制时产生备份文件"><a href="#实例9：复制时产生备份文件" class="headerlink" title="实例9：复制时产生备份文件"></a>实例9：复制时产生备份文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@cent6 directory]<span class="comment"># cp -bv a.txt  /tmp/</span></div><div class="line">`a.txt<span class="string">' -&gt; `/tmp/a.txt'</span></div><div class="line">[root@cent6 directory]<span class="comment"># cp -bv a.txt  /tmp/</span></div><div class="line">`a.txt<span class="string">' -&gt; `/tmp/a.txt'</span> (backup: `/tmp/a.txt~<span class="string">')</span></div><div class="line">[root@cent6 directory]# ll /tmp</div><div class="line">total 0</div><div class="line">-rwxr-xr-x 1 root root 0 Apr 16 17:02 a.txt</div><div class="line">-rwxr-xr-x 1 root root 0 Apr 16 17:02 a.txt~</div></pre></td></tr></table></figure>
<h4 id="实例10：创建文件的硬链接（有同样的inode），而不是拷贝它们"><a href="#实例10：创建文件的硬链接（有同样的inode），而不是拷贝它们" class="headerlink" title="实例10：创建文件的硬链接（有同样的inode），而不是拷贝它们"></a>实例10：创建文件的硬链接（有同样的inode），而不是拷贝它们</h4><figure class="highlight tap"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@oracledb dir1]<span class="comment"># cp -l a.txt  b.txt</span></div><div class="line">[root@oracledb dir1]<span class="comment"># cp a.txt  c.txt</span></div><div class="line">[root@oracledb dir1]<span class="comment"># ls -li</span></div><div class="line">总用量 0</div><div class="line">4718769 -rw-r--r--<span class="number"> 2 </span>root root<span class="number"> 0 </span>4月 <span class="number"> 16 </span>17:18 a.txt</div><div class="line">4718769 -rw-r--r--<span class="number"> 2 </span>root root<span class="number"> 0 </span>4月 <span class="number"> 16 </span>17:18 b.txt</div><div class="line">4718772 -rw-r--r--<span class="number"> 1 </span>root root<span class="number"> 0 </span>4月 <span class="number"> 16 </span>17:28 c.txt</div></pre></td></tr></table></figure>
<h4 id="实例11：复制的-a-txt-建立一个连结档-a-link-txt"><a href="#实例11：复制的-a-txt-建立一个连结档-a-link-txt" class="headerlink" title="实例11：复制的 a.txt 建立一个连结档 a_link.txt"></a>实例11：复制的 a.txt 建立一个连结档 a_link.txt</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@cent6 directory]<span class="comment"># cp -sv a.txt  a_link.txt</span></div><div class="line">`a.txt<span class="string">' -&gt; `a_link.txt'</span></div><div class="line">[root@cent6 directory]<span class="comment"># ll</span></div><div class="line">total 0</div><div class="line">lrwxrwxrwx 1 root root 5 Apr 16 17:06 a_link.txt -&gt; a.txt</div><div class="line">-rwxrwxrwx 1 root root 0 Apr 16 16:54 a.txt</div></pre></td></tr></table></figure>
<h4 id="实例12-不随符号链接拷贝原文件"><a href="#实例12-不随符号链接拷贝原文件" class="headerlink" title="实例12:不随符号链接拷贝原文件"></a>实例12:不随符号链接拷贝原文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@oracledb dir1]<span class="comment"># ll</span></div><div class="line">总用量 0</div><div class="line">lrwxrwxrwx 1 root root 5 4月  16 17:30 a_link.txt -&gt; a.txt</div><div class="line">-rw-r--r-- 1 root root 0 4月  16 17:18 a.txt</div><div class="line">[root@oracledb dir1]<span class="comment"># cp -P a_link.txt  c.txt</span></div><div class="line">[root@oracledb dir1]<span class="comment"># ll</span></div><div class="line">总用量 0</div><div class="line">lrwxrwxrwx 1 root root 5 4月  16 17:30 a_link.txt -&gt; a.txt</div><div class="line">-rw-r--r-- 1 root root 0 4月  16 17:18 a.txt</div><div class="line">lrwxrwxrwx 1 root root 5 4月  16 17:31 c.txt -&gt; a.txt</div></pre></td></tr></table></figure>
<h4 id="实例13-指定备份文件尾标"><a href="#实例13-指定备份文件尾标" class="headerlink" title="实例13:指定备份文件尾标"></a>实例13:指定备份文件尾标</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@oracledb dir1]<span class="comment"># cp -v -S _bak a.txt   /tmp/</span></div><div class="line"><span class="string">"a.txt"</span> -&gt; <span class="string">"/tmp/a.txt"</span></div><div class="line">[root@oracledb dir1]<span class="comment"># cp -v -S _bak a.txt   /tmp/</span></div><div class="line">cp：是否覆盖<span class="string">"/tmp/a.txt"</span>？ y</div><div class="line"><span class="string">"a.txt"</span> -&gt; <span class="string">"/tmp/a.txt"</span> (备份：<span class="string">"/tmp/a.txt_bak"</span>)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;摘要: cp（Copy file）：将源文件复制至目标文件，或将多个源文件复制至目标目录。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://wangshengzhuang.com/categories/Linux/"/>
    
      <category term="每天一个Linux命令" scheme="http://wangshengzhuang.com/categories/Linux/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="每天一个Linux命令" scheme="http://wangshengzhuang.com/tags/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4/"/>
    
      <category term="cp" scheme="http://wangshengzhuang.com/tags/cp/"/>
    
  </entry>
  
  <entry>
    <title>使用Sysbench进行MySQL压力测试</title>
    <link href="http://wangshengzhuang.com/2017/05/23/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3/MySQL/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/Sysbench%E8%BF%9B%E8%A1%8CMySQL%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95/"/>
    <id>http://wangshengzhuang.com/2017/05/23/数据库相关/MySQL/性能测试/Sysbench进行MySQL压力测试/</id>
    <published>2017-05-23T14:29:25.000Z</published>
    <updated>2017-08-20T15:23:56.955Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍了如何使用Sysbench进行MySQL压力测试。</p>
<a id="more"></a>
<p>安装完sysbench后,<code>/usr/share/sysbench</code>下对数据库压力测试的lua文件：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="number">1</span>. bulk_insert<span class="selector-class">.lua</span>  批量写入操作</div><div class="line"></div><div class="line"><span class="number">2</span>. oltp_delete<span class="selector-class">.lua</span> 写入和删除并行操作</div><div class="line"></div><div class="line"><span class="number">3</span>. oltp_insert<span class="selector-class">.lua</span>  纯写入操作</div><div class="line"></div><div class="line"><span class="number">4</span>. oltp_point_select<span class="selector-class">.lua</span>  只读操作，条件为唯一索引列</div><div class="line"></div><div class="line"><span class="number">5</span>. oltp_read_only<span class="selector-class">.lua</span>  只读操作，包含聚合，去重等操作</div><div class="line"></div><div class="line"><span class="number">6</span>. oltp_read_write<span class="selector-class">.lua</span> 读写混合操作，最常用的脚本</div><div class="line"></div><div class="line"><span class="number">7</span>. oltp_update_index<span class="selector-class">.lua</span> 更新操作，通过主键进行更新</div><div class="line"></div><div class="line"><span class="number">8</span>. oltp_update_non_index<span class="selector-class">.lua</span> 更新操作，不通过索引列</div><div class="line"></div><div class="line"><span class="number">9</span>. oltp_write_only<span class="selector-class">.lua</span> 纯写操作，常用脚本，包括insert update delete</div><div class="line"></div><div class="line"><span class="number">10</span>. select_random_points<span class="selector-class">.lua</span> 随机集合只读操作，常用脚本，聚集索引列的selete <span class="keyword">in</span>操作</div><div class="line"></div><div class="line"><span class="number">11</span>. select_random_ranges<span class="selector-class">.lua</span> 随机范围只读操作，常用脚本，聚集索引列的selete between操作</div></pre></td></tr></table></figure>
<p>数据库测试分为3步：prepare(准备测试数据)，run(开始测试),cleanup(清除测试数据)</p>
<p>​    参数解析：</p>
<p>​        –db-driver：用到的数据库类型</p>
<p>​        –mysql-host：数据库的IP</p>
<p>​        –mysql-port：数据库的端口</p>
<p>​        –mysql-socket：socket的路径</p>
<p>​        –mysql-user：数据库用户名</p>
<p>​        –mysql-password：用户密码</p>
<p>​        –mysql-db：数据库名字，默认为sysbench，需要提前创建创好</p>
<p>​        –tables：生成表的个数</p>
<p>​        –table-size：每个表的行数</p>
<p>​        –report-interval：每隔多久在屏幕打印一次信息</p>
<p>​        –time：压测时间</p>
<p>​        –threads：启动多少个线程，即模拟多少个用户</p>
<p>创建测试数据库</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="keyword">sample</span> <span class="keyword">DEFAULT</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci</div><div class="line"></div><div class="line"><span class="keyword">GRANT</span> ALL <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span>  sample.*  <span class="keyword">TO</span> <span class="string">'app_user'</span>@<span class="string">'%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'admin_123'</span></div></pre></td></tr></table></figure>
<p>准备测试数据： 在本地数据库的dba_test库中，初始化10张表（sbtest1~sbtest10），存储引擎是innodb，每张表50万数据。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">[root@localhost sysbench]# sysbench /usr/share/sysbench/oltp_read_write.lua --db-driver=mysql --mysql-host=10.10.14.10 --mysql-port=3306  --mysql-user=app_user --mysql-password=admin_123 --mysql-db=sample --tables=10 --table-size=500000 --time=120 --report-interval=10 --threads=100 prepare</div><div class="line">sysbench 1.0.7 (using bundled LuaJIT 2.1.0-beta2)</div><div class="line"></div><div class="line">Initializing worker threads...</div><div class="line"></div><div class="line">Creating table 'sbtest4'...</div><div class="line">Creating table 'sbtest6'...</div><div class="line">Creating table 'sbtest5'...</div><div class="line">Creating table 'sbtest8'...</div><div class="line">Creating table 'sbtest1'...</div><div class="line">Creating table 'sbtest2'...</div><div class="line">Creating table 'sbtest9'...</div><div class="line">Creating table 'sbtest3'...</div><div class="line">Creating table 'sbtest10'...</div><div class="line">Creating table 'sbtest7'...</div><div class="line">Inserting 500000 records into 'sbtest5'</div><div class="line">Inserting 500000 records into 'sbtest6'</div><div class="line">Inserting 500000 records into 'sbtest8'</div><div class="line">Inserting 500000 records into 'sbtest9'</div><div class="line">Inserting 500000 records into 'sbtest4'</div><div class="line">Inserting 500000 records into 'sbtest10'</div><div class="line">Inserting 500000 records into 'sbtest1'</div><div class="line">Inserting 500000 records into 'sbtest3'</div><div class="line">Inserting 500000 records into 'sbtest2'</div><div class="line">Inserting 500000 records into 'sbtest7'</div><div class="line">Creating a secondary index on 'sbtest9'...</div><div class="line">Creating a secondary index on 'sbtest2'...</div><div class="line">Creating a secondary index on 'sbtest3'...</div><div class="line">Creating a secondary index on 'sbtest6'...</div><div class="line">Creating a secondary index on 'sbtest10'...</div><div class="line">Creating a secondary index on 'sbtest5'...</div><div class="line">Creating a secondary index on 'sbtest8'...</div><div class="line">Creating a secondary index on 'sbtest4'...</div><div class="line">Creating a secondary index on 'sbtest1'...</div><div class="line">Creating a secondary index on 'sbtest7'...</div></pre></td></tr></table></figure>
<p>压测数据库：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line">[root@localhost sysbench]# sysbench /usr/share/sysbench/oltp_read_write.lua --db-driver=mysql --mysql-host=10.10.14.10 --mysql-port=3306  --mysql-user=app_user --mysql-password=admin_123 --mysql-db=sample --tables=10 --table-size=500000 --time=120 --report-interval=10 --threads=100 prepare</div><div class="line">sysbench 1.0.7 (using bundled LuaJIT 2.1.0-beta2)</div><div class="line"></div><div class="line">Initializing worker threads...</div><div class="line"></div><div class="line">Creating table 'sbtest4'...</div><div class="line">Creating table 'sbtest6'...</div><div class="line">Creating table 'sbtest5'...</div><div class="line">Creating table 'sbtest8'...</div><div class="line">Creating table 'sbtest1'...</div><div class="line">Creating table 'sbtest2'...</div><div class="line">Creating table 'sbtest9'...</div><div class="line">Creating table 'sbtest3'...</div><div class="line">Creating table 'sbtest10'...</div><div class="line">Creating table 'sbtest7'...</div><div class="line">Inserting 500000 records into 'sbtest5'</div><div class="line">Inserting 500000 records into 'sbtest6'</div><div class="line">Inserting 500000 records into 'sbtest8'</div><div class="line">Inserting 500000 records into 'sbtest9'</div><div class="line">Inserting 500000 records into 'sbtest4'</div><div class="line">Inserting 500000 records into 'sbtest10'</div><div class="line">Inserting 500000 records into 'sbtest1'</div><div class="line">Inserting 500000 records into 'sbtest3'</div><div class="line">Inserting 500000 records into 'sbtest2'</div><div class="line">Inserting 500000 records into 'sbtest7'</div><div class="line">Creating a secondary index on 'sbtest9'...</div><div class="line">Creating a secondary index on 'sbtest2'...</div><div class="line">Creating a secondary index on 'sbtest3'...</div><div class="line">Creating a secondary index on 'sbtest6'...</div><div class="line">Creating a secondary index on 'sbtest10'...</div><div class="line">Creating a secondary index on 'sbtest5'...</div><div class="line">Creating a secondary index on 'sbtest8'...</div><div class="line">Creating a secondary index on 'sbtest4'...</div><div class="line">Creating a secondary index on 'sbtest1'...</div><div class="line">Creating a secondary index on 'sbtest7'...</div><div class="line">[root@localhost sysbench]# sysbench /usr/share/sysbench/oltp_read_write.lua --db-driver=mysql --mysql-host=10.10.14.10 --mysql-port=3306  --mysql-user=app_user --mysql-password=admin_123 --mysql-db=sample --tables=10 --table-size=500000 --time=120 --report-interval=10 --threads=100 run</div><div class="line">sysbench 1.0.7 (using bundled LuaJIT 2.1.0-beta2)</div><div class="line"></div><div class="line">Running the test with following options:</div><div class="line">Number of threads: 100</div><div class="line">Report intermediate results every 10 second(s)</div><div class="line">Initializing random number generator from current time</div><div class="line"></div><div class="line"></div><div class="line">Initializing worker threads...</div><div class="line"></div><div class="line">Threads started!</div><div class="line"></div><div class="line">[ 10s ] thds: 100 tps: 1463.35 qps: 29420.80 (r/w/o: 20611.00/5872.80/2937.00) lat (ms,95%): 118.92 err/s: 0.40 reconn/s: 0.00</div><div class="line">[ 20s ] thds: 100 tps: 1606.45 qps: 32128.43 (r/w/o: 22493.22/6422.31/3212.90) lat (ms,95%): 102.97 err/s: 0.00 reconn/s: 0.00</div><div class="line">[ 30s ] thds: 100 tps: 1621.80 qps: 32395.26 (r/w/o: 22665.67/6486.49/3243.10) lat (ms,95%): 104.84 err/s: 0.20 reconn/s: 0.00</div><div class="line">[ 40s ] thds: 100 tps: 1587.60 qps: 31800.89 (r/w/o: 22270.26/6354.62/3176.01) lat (ms,95%): 106.75 err/s: 0.30 reconn/s: 0.00</div><div class="line">[ 50s ] thds: 100 tps: 1621.99 qps: 32449.93 (r/w/o: 22716.28/6489.07/3244.58) lat (ms,95%): 101.13 err/s: 0.40 reconn/s: 0.00</div><div class="line">[ 60s ] thds: 100 tps: 1668.01 qps: 33364.65 (r/w/o: 23354.81/6673.73/3336.12) lat (ms,95%): 97.55 err/s: 0.30 reconn/s: 0.00</div><div class="line">[ 70s ] thds: 100 tps: 1639.89 qps: 32784.79 (r/w/o: 22947.13/6557.88/3279.79) lat (ms,95%): 101.13 err/s: 0.10 reconn/s: 0.00</div><div class="line">[ 80s ] thds: 100 tps: 1658.80 qps: 33172.77 (r/w/o: 23223.95/6630.91/3317.91) lat (ms,95%): 99.33 err/s: 0.10 reconn/s: 0.00</div><div class="line">[ 90s ] thds: 100 tps: 1592.40 qps: 31900.02 (r/w/o: 22325.71/6388.90/3185.40) lat (ms,95%): 102.97 err/s: 0.40 reconn/s: 0.00</div><div class="line">[ 100s ] thds: 100 tps: 1621.90 qps: 32414.24 (r/w/o: 22690.53/6480.01/3243.70) lat (ms,95%): 101.13 err/s: 0.20 reconn/s: 0.00</div><div class="line">[ 110s ] thds: 100 tps: 1646.10 qps: 32945.10 (r/w/o: 23069.93/6582.08/3293.09) lat (ms,95%): 99.33 err/s: 0.60 reconn/s: 0.00</div><div class="line">[ 120s ] thds: 100 tps: 1594.00 qps: 31879.15 (r/w/o: 22311.53/6379.41/3188.20) lat (ms,95%): 104.84 err/s: 0.20 reconn/s: 0.00</div><div class="line">SQL statistics:</div><div class="line">    queries performed:</div><div class="line">        read:                            2707040</div><div class="line">        write:                           773344</div><div class="line">        other:                           386688</div><div class="line">        total:                           3867072</div><div class="line">    transactions:                        193328 (1610.51 per sec.)</div><div class="line">    queries:                             3867072 (32214.55 per sec.)</div><div class="line">    ignored errors:                      32     (0.27 per sec.)</div><div class="line">    reconnects:                          0      (0.00 per sec.)</div><div class="line"></div><div class="line">General statistics:</div><div class="line">    total time:                          120.0398s</div><div class="line">    total number of events:              193328</div><div class="line"></div><div class="line">Latency (ms):</div><div class="line">         min:                                 11.97</div><div class="line">         avg:                                 62.08</div><div class="line">         max:                                360.82</div><div class="line">         95th percentile:                    102.97</div><div class="line">         sum:                            12001678.41</div><div class="line"></div><div class="line">Threads fairness:</div><div class="line">    events (avg/stddev):           1933.2800/32.79</div><div class="line">    execution time (avg/stddev):   120.0168/0.01</div></pre></td></tr></table></figure>
<p>删除测试数据：</p>
<figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sysbench <span class="string">/usr/share/sysbench/oltp_read_only.lua</span> <span class="params">--db-driver=mysql</span> <span class="params">--mysql-host=10</span>.10.14.10 <span class="params">--mysql-port=3306</span>  <span class="params">--mysql-user=app_user</span> <span class="params">--mysql-password=admin_123</span> <span class="params">--mysql-db=sample</span> <span class="params">--tables=10</span> <span class="params">--table-size=500000</span> <span class="params">--time=120</span> <span class="params">--report-interval=10</span> <span class="params">--threads=100</span> cleanup</div></pre></td></tr></table></figure>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="http://www.cnblogs.com/zhoujinyi/archive/2013/04/19/3029134.html" target="_blank" rel="external">sysbench 安装、使用和测试</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍了如何使用Sysbench进行MySQL压力测试。&lt;/p&gt;
    
    </summary>
    
      <category term="数据库相关" scheme="http://wangshengzhuang.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3/"/>
    
      <category term="MySQL" scheme="http://wangshengzhuang.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3/MySQL/"/>
    
      <category term="性能测试" scheme="http://wangshengzhuang.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3/MySQL/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="MySQL" scheme="http://wangshengzhuang.com/tags/MySQL/"/>
    
      <category term="Sysbench" scheme="http://wangshengzhuang.com/tags/Sysbench/"/>
    
  </entry>
  
  <entry>
    <title>使用Sysbench进行CPU、 内存、 IO 、线程、 mutex压力测试</title>
    <link href="http://wangshengzhuang.com/2017/05/22/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3/MySQL/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/Sysbench%E8%BF%9B%E8%A1%8CCPU%20%E5%86%85%E5%AD%98%20IO%20%E7%BA%BF%E7%A8%8B%20mutex%E6%B5%8B%E8%AF%95%E4%BE%8B%E5%AD%90/"/>
    <id>http://wangshengzhuang.com/2017/05/22/数据库相关/MySQL/性能测试/Sysbench进行CPU 内存 IO 线程 mutex测试例子/</id>
    <published>2017-05-22T14:29:25.000Z</published>
    <updated>2017-08-20T15:23:46.044Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍了如何使用Sysbench进行CPU、 内存、 IO 、线程、 mutex压力测试。</p>
<a id="more"></a>
<h3 id="CPU测试"><a href="#CPU测试" class="headerlink" title="CPU测试"></a>CPU测试</h3><p><strong>sysbench  cpu help</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sysbench  cpu <span class="built_in">help</span></div><div class="line">sysbench 1.0.7 (using bundled LuaJIT 2.1.0-beta2)</div><div class="line"></div><div class="line">cpu options:</div><div class="line">  --cpu-max-prime=N upper <span class="built_in">limit</span> <span class="keyword">for</span> primes generator [10000] 最大质数发生器数量。默认是10000</div></pre></td></tr></table></figure>
<p>测试结果</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">➜  ~  sysbench cpu --cpu-max-prime=2000 run</div><div class="line"></div><div class="line"></div><div class="line">sysbench 1.0.7 (using bundled LuaJIT 2.1.0-beta2)</div><div class="line"></div><div class="line">Running the <span class="built_in">test</span> with following options:</div><div class="line">Number of threads: 1</div><div class="line">Initializing random number generator from current time</div><div class="line"></div><div class="line"></div><div class="line">Prime numbers <span class="built_in">limit</span>: 2000</div><div class="line"></div><div class="line">Initializing worker threads...</div><div class="line"></div><div class="line">Threads started!</div><div class="line"></div><div class="line"></div><div class="line">General statistics:</div><div class="line">    total time:                          10.0001s</div><div class="line">    total number of events:              73827</div><div class="line"></div><div class="line">Latency (ms):</div><div class="line">         min:                                  0.12</div><div class="line">         avg:                                  0.13</div><div class="line">         max:                                  5.69</div><div class="line">         95th percentile:                      0.19</div><div class="line">         sum:                               9961.81</div><div class="line"></div><div class="line">Threads fairness:</div><div class="line">    events (avg/stddev):           73827.0000/0.00</div><div class="line">    execution time (avg/stddev):   9.9618/0.00</div></pre></td></tr></table></figure>
<h3 id="内存测试"><a href="#内存测试" class="headerlink" title="内存测试"></a>内存测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">sysbench  memory <span class="built_in">help</span></div><div class="line">sysbench 1.0.7 (using bundled LuaJIT 2.1.0-beta2)</div><div class="line"></div><div class="line">memory options:</div><div class="line">  --memory-block-size=SIZE    size of memory block <span class="keyword">for</span> <span class="built_in">test</span> [1K]  测试时内存块大小。默认是1K</div><div class="line">  --memory-total-size=SIZE    total size of data to transfer [100G] 传输数据的总大小。默认是100G</div><div class="line">  --memory-scope=STRING       memory access scope &#123;global,<span class="built_in">local</span>&#125; [global] 内存访问范围&#123;global,<span class="built_in">local</span>&#125;。默认是global</div><div class="line">  --memory-oper=STRING        <span class="built_in">type</span> of memory operations &#123;<span class="built_in">read</span>, write, none&#125; [write]     内存操作类型。&#123;<span class="built_in">read</span>, write, none&#125; 默认是write</div><div class="line">  --memory-access-mode=STRING memory access mode &#123;seq,rnd&#125; [seq] 存储器存取方式&#123;seq,rnd&#125; 默认是seq</div></pre></td></tr></table></figure>
<p>测试结果</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">sysbench memory --memory-block-size=8k --memory-total-size=1G run</div><div class="line">sysbench 1.0.7 (using bundled LuaJIT 2.1.0-beta2)</div><div class="line"></div><div class="line">Running the <span class="built_in">test</span> with following options:</div><div class="line">Number of threads: 1</div><div class="line">Initializing random number generator from current time</div><div class="line"></div><div class="line"></div><div class="line">Running memory speed <span class="built_in">test</span> with the following options:</div><div class="line">  block size: 8KiB</div><div class="line">  total size: 1024MiB</div><div class="line">  operation: write</div><div class="line">  scope: global</div><div class="line"></div><div class="line">Initializing worker threads...</div><div class="line"></div><div class="line">Threads started!</div><div class="line"></div><div class="line">Total operations: 131072 (940750.90 per second)</div><div class="line"></div><div class="line">1024.00 MiB transferred (7349.62 MiB/sec)</div><div class="line"></div><div class="line"></div><div class="line">General statistics:</div><div class="line">    total time:                          0.1369s</div><div class="line">    total number of events:              131072</div><div class="line"></div><div class="line">Latency (ms):</div><div class="line">         min:                                  0.00</div><div class="line">         avg:                                  0.00</div><div class="line">         max:                                  1.18</div><div class="line">         95th percentile:                      0.00</div><div class="line">         sum:                                100.88</div><div class="line"></div><div class="line">Threads fairness:</div><div class="line">    events (avg/stddev):           131072.0000/0.00</div><div class="line">    execution time (avg/stddev):   0.1009/0.00</div></pre></td></tr></table></figure>
<h3 id="I-O测试"><a href="#I-O测试" class="headerlink" title="I/O测试"></a>I/O测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">sysbench fileio <span class="built_in">help</span></div><div class="line">sysbench 1.0.7 (using bundled LuaJIT 2.1.0-beta2)</div><div class="line"></div><div class="line">fileio options:</div><div class="line">  --file-num=N              number of files to create [128]  创建测试文件的数量。默认是128</div><div class="line">  --file-block-size=N       block size to use <span class="keyword">in</span> all IO operations [16384]  测试时文件块的大小。默认是16384(16K)</div><div class="line">  --file-total-size=SIZE    total size of files to create [2G]  测试文件的总大小。默认是2G</div><div class="line">  --file-test-mode=STRING   <span class="built_in">test</span> mode &#123;seqwr, seqrewr, seqrd, rndrd, rndwr, rndrw&#125;  文件测试模式&#123;seqwr(顺序写), seqrewr(顺序读写), seqrd(顺序读), rndrd(随机读), rndwr(随机写), rndrw(随机读写)&#125;</div><div class="line">  --file-io-mode=STRING     file operations mode &#123;sync,async,mmap&#125; [sync] 文件操作模式&#123;sync(同步),async(异步),fastmmap(快速map映射),slowmmap(慢map映射)&#125;。默认是sync</div><div class="line">  --file-extra-flags=STRING additional flags to use on opening files &#123;sync,dsync,direct&#125; []  使用额外的标志来打开文件&#123;sync,dsync,direct&#125; 。默认为空</div><div class="line">  --file-fsync-freq=N       <span class="keyword">do</span> fsync() after this number of requests (0 - don<span class="string">'t use fsync()) [100]   执行fsync()的频率。(0 – 不使用fsync())。默认是100</span></div><div class="line">  --file-fsync-all[=on|off] do fsync() after each write operation [off]  每执行完一次写操作就执行一次fsync。默认是off</div><div class="line">  --file-fsync-end[=on|off] do fsync() at the end of test [on]  在测试结束时才执行fsync。默认是on</div><div class="line">  --file-fsync-mode=STRING  which method to use for synchronization &#123;fsync, fdatasync&#125; [fsync]使用哪种方法进行同步&#123;fsync, fdatasync&#125;。默认是fsync</div><div class="line">  --file-merged-requests=N  merge at most this number of IO requests if possible (0 - don't merge) [0]如果可以，合并最多的IO请求数(0 – 表示不合并)。默认是0</div><div class="line">  --file-rw-ratio=N         reads/writes ratio <span class="keyword">for</span> combined <span class="built_in">test</span> [1.5]     测试时的读写比例。默认是1.5</div></pre></td></tr></table></figure>
<p>1，prepare阶段，生成需要的测试文件，完成后会在当前目录下生成很多小文件。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sysbench  fileio --threads=16 --file-total-size=2G --file-test-mode=rndrw prepare</div></pre></td></tr></table></figure>
<p>2，run阶段</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sysbench  fileio --threads=20 --file-total-size=2G --file-test-mode=rndrw run</div></pre></td></tr></table></figure>
<p>3，清理测试时生成的文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sysbench  fileio --threads=20 --file-total-size=2G --file-test-mode=rndrw cleanup</div></pre></td></tr></table></figure>
<p>执行过程如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div></pre></td><td class="code"><pre><div class="line">sysbench  fileio --threads=16 --file-total-size=2G --file-test-mode=rndrw prepare</div><div class="line">sysbench 1.0.7 (using bundled LuaJIT 2.1.0-beta2)</div><div class="line"></div><div class="line">128 files, 16384Kb each, 2048Mb total</div><div class="line">Creating files <span class="keyword">for</span> the test...</div><div class="line">Extra file open flags: 0</div><div class="line">Creating file test_file.0</div><div class="line">Creating file test_file.1</div><div class="line">Creating file test_file.2</div><div class="line">Creating file test_file.3</div><div class="line">Creating file test_file.4</div><div class="line">Creating file test_file.5</div><div class="line">Creating file test_file.6</div><div class="line">Creating file test_file.7</div><div class="line">Creating file test_file.8</div><div class="line">Creating file test_file.9</div><div class="line">Creating file test_file.10</div><div class="line">Creating file test_file.11</div><div class="line">Creating file test_file.12</div><div class="line">Creating file test_file.13</div><div class="line">Creating file test_file.14</div><div class="line">Creating file test_file.15</div><div class="line">Creating file test_file.16</div><div class="line">Creating file test_file.17</div><div class="line">Creating file test_file.18</div><div class="line">Creating file test_file.19</div><div class="line">Creating file test_file.20</div><div class="line">Creating file test_file.21</div><div class="line">Creating file test_file.22</div><div class="line">Creating file test_file.23</div><div class="line">Creating file test_file.24</div><div class="line">Creating file test_file.25</div><div class="line">Creating file test_file.26</div><div class="line">Creating file test_file.27</div><div class="line">Creating file test_file.28</div><div class="line">Creating file test_file.29</div><div class="line">Creating file test_file.30</div><div class="line">Creating file test_file.31</div><div class="line">Creating file test_file.32</div><div class="line">Creating file test_file.33</div><div class="line">Creating file test_file.34</div><div class="line">Creating file test_file.35</div><div class="line">Creating file test_file.36</div><div class="line">Creating file test_file.37</div><div class="line">Creating file test_file.38</div><div class="line">Creating file test_file.39</div><div class="line">Creating file test_file.40</div><div class="line">Creating file test_file.41</div><div class="line">Creating file test_file.42</div><div class="line">Creating file test_file.43</div><div class="line">Creating file test_file.44</div><div class="line">Creating file test_file.45</div><div class="line">Creating file test_file.46</div><div class="line">Creating file test_file.47</div><div class="line">Creating file test_file.48</div><div class="line">Creating file test_file.49</div><div class="line">Creating file test_file.50</div><div class="line">Creating file test_file.51</div><div class="line">Creating file test_file.52</div><div class="line">Creating file test_file.53</div><div class="line">Creating file test_file.54</div><div class="line">Creating file test_file.55</div><div class="line">Creating file test_file.56</div><div class="line">Creating file test_file.57</div><div class="line">Creating file test_file.58</div><div class="line">Creating file test_file.59</div><div class="line">Creating file test_file.60</div><div class="line">Creating file test_file.61</div><div class="line">Creating file test_file.62</div><div class="line">Creating file test_file.63</div><div class="line">Creating file test_file.64</div><div class="line">Creating file test_file.65</div><div class="line">Creating file test_file.66</div><div class="line">Creating file test_file.67</div><div class="line">Creating file test_file.68</div><div class="line">Creating file test_file.69</div><div class="line">Creating file test_file.70</div><div class="line">Creating file test_file.71</div><div class="line">Creating file test_file.72</div><div class="line">Creating file test_file.73</div><div class="line">Creating file test_file.74</div><div class="line">Creating file test_file.75</div><div class="line">Creating file test_file.76</div><div class="line">Creating file test_file.77</div><div class="line">Creating file test_file.78</div><div class="line">Creating file test_file.79</div><div class="line">Creating file test_file.80</div><div class="line">Creating file test_file.81</div><div class="line">Creating file test_file.82</div><div class="line">Creating file test_file.83</div><div class="line">Creating file test_file.84</div><div class="line">Creating file test_file.85</div><div class="line">Creating file test_file.86</div><div class="line">Creating file test_file.87</div><div class="line">Creating file test_file.88</div><div class="line">Creating file test_file.89</div><div class="line">Creating file test_file.90</div><div class="line">Creating file test_file.91</div><div class="line">Creating file test_file.92</div><div class="line">Creating file test_file.93</div><div class="line">Creating file test_file.94</div><div class="line">Creating file test_file.95</div><div class="line">Creating file test_file.96</div><div class="line">Creating file test_file.97</div><div class="line">Creating file test_file.98</div><div class="line">Creating file test_file.99</div><div class="line">Creating file test_file.100</div><div class="line">Creating file test_file.101</div><div class="line">Creating file test_file.102</div><div class="line">Creating file test_file.103</div><div class="line">Creating file test_file.104</div><div class="line">Creating file test_file.105</div><div class="line">Creating file test_file.106</div><div class="line">Creating file test_file.107</div><div class="line">Creating file test_file.108</div><div class="line">Creating file test_file.109</div><div class="line">Creating file test_file.110</div><div class="line">Creating file test_file.111</div><div class="line">Creating file test_file.112</div><div class="line">Creating file test_file.113</div><div class="line">Creating file test_file.114</div><div class="line">Creating file test_file.115</div><div class="line">Creating file test_file.116</div><div class="line">Creating file test_file.117</div><div class="line">Creating file test_file.118</div><div class="line">Creating file test_file.119</div><div class="line">Creating file test_file.120</div><div class="line">Creating file test_file.121</div><div class="line">Creating file test_file.122</div><div class="line">Creating file test_file.123</div><div class="line">Creating file test_file.124</div><div class="line">Creating file test_file.125</div><div class="line">Creating file test_file.126</div><div class="line">Creating file test_file.127</div><div class="line">2147483648 bytes written <span class="keyword">in</span> 2.48 seconds (826.62 MiB/sec).</div><div class="line">➜  ~</div><div class="line">➜  ~</div><div class="line">➜  ~ sysbench  fileio --threads=20 --file-total-size=2G --file-test-mode=rndrw run</div><div class="line">sysbench 1.0.7 (using bundled LuaJIT 2.1.0-beta2)</div><div class="line"></div><div class="line">Running the <span class="built_in">test</span> with following options:</div><div class="line">Number of threads: 20</div><div class="line">Initializing random number generator from current time</div><div class="line"></div><div class="line"></div><div class="line">Extra file open flags: 0</div><div class="line">128 files, 16MiB each</div><div class="line">2GiB total file size</div><div class="line">Block size 16KiB</div><div class="line">Number of IO requests: 0</div><div class="line">Read/Write ratio <span class="keyword">for</span> combined random IO <span class="built_in">test</span>: 1.50</div><div class="line">Periodic FSYNC enabled, calling fsync() each 100 requests.</div><div class="line">Calling fsync() at the end of <span class="built_in">test</span>, Enabled.</div><div class="line">Using synchronous I/O mode</div><div class="line">Doing random r/w <span class="built_in">test</span></div><div class="line">Initializing worker threads...</div><div class="line"></div><div class="line">Threads started!</div><div class="line"></div><div class="line"></div><div class="line">File operations:</div><div class="line">    reads/s:                      15512.76</div><div class="line">    writes/s:                     10341.51</div><div class="line">    fsyncs/s:                     33093.17</div><div class="line"></div><div class="line">Throughput:</div><div class="line">    <span class="built_in">read</span>, MiB/s:                  242.39</div><div class="line">    written, MiB/s:               161.59</div><div class="line"></div><div class="line">General statistics:</div><div class="line">    total time:                          10.0005s</div><div class="line">    total number of events:              589605</div><div class="line"></div><div class="line">Latency (ms):</div><div class="line">         min:                                  0.00</div><div class="line">         avg:                                  0.22</div><div class="line">         max:                                  6.39</div><div class="line">         95th percentile:                      0.50</div><div class="line">         sum:                             130617.03</div><div class="line"></div><div class="line">Threads fairness:</div><div class="line">    events (avg/stddev):           29480.2500/81.36</div><div class="line">    execution time (avg/stddev):   6.5309/0.01</div><div class="line"></div><div class="line">➜  ~ sysbench  fileio --threads=20 --file-total-size=2G --file-test-mode=rndrw cleanup</div><div class="line">sysbench 1.0.7 (using bundled LuaJIT 2.1.0-beta2)</div><div class="line"></div><div class="line">Removing <span class="built_in">test</span> files...</div></pre></td></tr></table></figure>
<h3 id="线程测试"><a href="#线程测试" class="headerlink" title="线程测试"></a>线程测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">sysbench  threads <span class="built_in">help</span></div><div class="line">sysbench 1.0.7 (using bundled LuaJIT 2.1.0-beta2)</div><div class="line"></div><div class="line">threads options:</div><div class="line">  --thread-yields=N number of yields to <span class="keyword">do</span> per request [1000] 每个请求产生多少个线程。默认是1000</div><div class="line">  --thread-locks=N  number of locks per thread [8] 每个线程的锁的数量。默认是8</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">sysbench threads --num-threads=500 --thread-yields=100 --thread-locks=4 run</div><div class="line">WARNING: --num-threads is deprecated, use --threads instead</div><div class="line">sysbench 1.0.7 (using bundled LuaJIT 2.1.0-beta2)</div><div class="line"></div><div class="line">Running the <span class="built_in">test</span> with following options:</div><div class="line">Number of threads: 500</div><div class="line">Initializing random number generator from current time</div><div class="line"></div><div class="line"></div><div class="line">Initializing worker threads...</div><div class="line"></div><div class="line">Threads started!</div><div class="line"></div><div class="line"></div><div class="line">General statistics:</div><div class="line">    total time:                          10.0902s</div><div class="line">    total number of events:              25095</div><div class="line"></div><div class="line">Latency (ms):</div><div class="line">         min:                                 78.56</div><div class="line">         avg:                                200.33</div><div class="line">         max:                                258.32</div><div class="line">         95th percentile:                    235.74</div><div class="line">         sum:                            5027387.63</div><div class="line"></div><div class="line">Threads fairness:</div><div class="line">    events (avg/stddev):           50.1900/0.40</div><div class="line">    execution time (avg/stddev):   10.0548/0.02</div></pre></td></tr></table></figure>
<h3 id="mutex测试"><a href="#mutex测试" class="headerlink" title="mutex测试"></a>mutex测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">sysbench  mutex <span class="built_in">help</span></div><div class="line">sysbench 1.0.7 (using bundled LuaJIT 2.1.0-beta2)</div><div class="line"></div><div class="line">mutex options:</div><div class="line">  --mutex-num=N   total size of mutex array [4096] 数组互斥的总大小。默认是4096</div><div class="line">  --mutex-locks=N number of mutex locks to <span class="keyword">do</span> per thread [50000] 每个线程互斥锁的数量。默认是50000</div><div class="line">  --mutex-loops=N number of empty loops to <span class="keyword">do</span> outside mutex lock [10000] 内部互斥锁的空循环数量。默认是10000</div></pre></td></tr></table></figure>
<p>执行过程</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">sysbench mutex --num-threads=100 --mutex-num=1000 --mutex-locks=100000 --mutex-loops=10000 run</div><div class="line"></div><div class="line"></div><div class="line">WARNING: --num-threads is deprecated, use --threads instead</div><div class="line">sysbench 1.0.7 (using bundled LuaJIT 2.1.0-beta2)</div><div class="line"></div><div class="line">Running the <span class="built_in">test</span> with following options:</div><div class="line">Number of threads: 100</div><div class="line">Initializing random number generator from current time</div><div class="line"></div><div class="line"></div><div class="line">Initializing worker threads...</div><div class="line"></div><div class="line">Threads started!</div><div class="line"></div><div class="line"></div><div class="line">General statistics:</div><div class="line">    total time:                          17.9762s</div><div class="line">    total number of events:              100</div><div class="line"></div><div class="line">Latency (ms):</div><div class="line">         min:                              15479.16</div><div class="line">         avg:                              17200.68</div><div class="line">         max:                              17910.48</div><div class="line">         95th percentile:                  17752.80</div><div class="line">         sum:                            1720067.67</div><div class="line"></div><div class="line">Threads fairness:</div><div class="line">    events (avg/stddev):           1.0000/0.00</div><div class="line">    execution time (avg/stddev):   17.2007/0.59</div></pre></td></tr></table></figure>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="http://www.cnblogs.com/zhoujinyi/archive/2013/04/19/3029134.html" target="_blank" rel="external">sysbench 安装、使用和测试</a></p>
<p><a href="https://github.com/akopytov/sysbench" target="_blank" rel="external">https://github.com/akopytov/sysbench</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍了如何使用Sysbench进行CPU、 内存、 IO 、线程、 mutex压力测试。&lt;/p&gt;
    
    </summary>
    
      <category term="数据库相关" scheme="http://wangshengzhuang.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3/"/>
    
      <category term="MySQL" scheme="http://wangshengzhuang.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3/MySQL/"/>
    
      <category term="性能测试" scheme="http://wangshengzhuang.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3/MySQL/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="MySQL" scheme="http://wangshengzhuang.com/tags/MySQL/"/>
    
      <category term="Sysbench" scheme="http://wangshengzhuang.com/tags/Sysbench/"/>
    
  </entry>
  
  <entry>
    <title>sysbench压力测试工具的安装和使用</title>
    <link href="http://wangshengzhuang.com/2017/05/21/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3/MySQL/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/sysbench%20%E7%AE%80%E4%BB%8B%E3%80%81%E5%AE%89%E8%A3%85%E3%80%81%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/"/>
    <id>http://wangshengzhuang.com/2017/05/21/数据库相关/MySQL/性能测试/sysbench 简介、安装、使用说明/</id>
    <published>2017-05-21T14:29:25.000Z</published>
    <updated>2017-08-20T15:23:33.450Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍了sysbench的安装和使用。</p>
<a id="more"></a>
<h1 id="1-sysbench简介"><a href="#1-sysbench简介" class="headerlink" title="1. sysbench简介"></a>1. sysbench简介</h1><p>sysbench is a scriptable multi-threaded benchmark tool based on LuaJIT. It is most frequently used for database benchmarks, but can also be used to create arbitrarily complex workloads that do not involve a database server.</p>
<p>sysbench 支持如下的基准测试：</p>
<ul>
<li><code>oltp_*.lua</code>: a collection of OLTP-like database benchmarks   （OLTP数据库 如MySQL、Oracle、PostgreSQL）</li>
<li><code>fileio</code>: a filesystem-level benchmark    (文件I/O性能）</li>
<li><code>cpu</code>: a simple CPU benchmark                    （CPU性能测试）</li>
<li><code>memory</code>: a memory access benchmark    （内存访问）</li>
<li><code>threads</code>: a thread-based scheduler benchmark   （基于线程的调度性能）</li>
<li><code>mutex</code>: a POSIX mutex benchmark</li>
</ul>
<h1 id="2-特点"><a href="#2-特点" class="headerlink" title="2. 特点"></a>2. 特点</h1><ul>
<li>extensive statistics about rate(速率) and latency(延迟) is available, including latency percentiles（统计） and histograms（直方图）;</li>
<li>low overhead even with thousands of concurrent threads. sysbench is capable of generating and tracking hundreds of millions of events per second;</li>
<li>new benchmarks can be easily created by implementing pre-defined hooks in user-provided Lua scripts;</li>
</ul>
<h1 id="3-安装"><a href="#3-安装" class="headerlink" title="3. 安装"></a>3. 安装</h1><h2 id="3-1-二进制安装"><a href="#3-1-二进制安装" class="headerlink" title="3.1 二进制安装"></a>3.1 二进制安装</h2><ul>
<li><p>Debian/Ubuntu</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">curl -s <span class="symbol">https:</span>/<span class="regexp">/packagecloud.io/install</span><span class="regexp">/repositories/akopytov</span><span class="regexp">/sysbench/script</span>.deb.sh | sudo bash</div><div class="line">sudo apt -y install sysbench</div></pre></td></tr></table></figure>
</li>
<li><p>RHEL/CentOS:</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">curl -s <span class="symbol">https:</span>/<span class="regexp">/packagecloud.io/install</span><span class="regexp">/repositories/akopytov</span><span class="regexp">/sysbench/script</span>.rpm.sh | sudo bash</div><div class="line">sudo yum -y install sysbench</div></pre></td></tr></table></figure>
</li>
<li><p>Fedora:</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">curl -s <span class="symbol">https:</span>/<span class="regexp">/packagecloud.io/install</span><span class="regexp">/repositories/akopytov</span><span class="regexp">/sysbench/script</span>.rpm.sh | sudo bash	</div><div class="line">sudo dnf -y install sysbench</div></pre></td></tr></table></figure>
</li>
<li><p>macOS:</p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Add --with-postgresql if you need PostgreSQL support</span></div><div class="line"><span class="keyword">brew </span><span class="keyword">install </span>sysbench</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="3-2-源码构建"><a href="#3-2-源码构建" class="headerlink" title="3.2 源码构建"></a>3.2 源码构建</h2><p>推荐使用二进制安装</p>
<h3 id="3-2-1-Build-Requirements"><a href="#3-2-1-Build-Requirements" class="headerlink" title="3.2.1 Build Requirements"></a>3.2.1 Build Requirements</h3><p><strong>Debian</strong>/<strong>Ubuntu</strong></p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">apt -y <span class="keyword">install </span>make automake libtool pkg-<span class="built_in">config</span> libaio-dev vim-common</div><div class="line"><span class="comment"># For MySQL support</span></div><div class="line">apt -y <span class="keyword">install </span>libmysqlclient-dev</div><div class="line"><span class="comment"># For PostgreSQL support</span></div><div class="line">apt -y <span class="keyword">install </span>libpq-dev</div></pre></td></tr></table></figure>
<p><strong>RHEL/CentOS</strong></p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">yum -y <span class="keyword">install</span> make automake libtool pkgconfig libaio-devel vim-common</div><div class="line"># <span class="keyword">For</span> MySQL support, <span class="keyword">replace</span> <span class="keyword">with</span> mysql-devel <span class="keyword">on</span> RHEL/CentOS <span class="number">5</span></div><div class="line">yum -y <span class="keyword">install</span> mariadb-devel</div><div class="line"># <span class="keyword">For</span> PostgreSQL support</div><div class="line">yum -y <span class="keyword">install</span> postgresql-devel</div></pre></td></tr></table></figure>
<p><strong>Fedora</strong></p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">dnf -y <span class="keyword">install</span> make automake libtool pkgconfig libaio-devel vim-common</div><div class="line"><span class="comment"># For MySQL support</span></div><div class="line">dnf -y <span class="keyword">install</span> mariadb-devel</div><div class="line"><span class="comment"># For PostgreSQL support</span></div><div class="line">dnf -y <span class="keyword">install</span> postgresql-devel</div></pre></td></tr></table></figure>
<p><strong>macOS</strong></p>
<p><em>**</em>Assuming you have Xcode (or Xcode Command Line Tools) and Homebrew installed:</p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">brew </span><span class="keyword">install </span>automake pkg-<span class="built_in">config</span></div><div class="line"><span class="comment"># For MySQL support</span></div><div class="line"><span class="keyword">brew </span><span class="keyword">install </span>mysql</div><div class="line"><span class="comment"># For PostgreSQL support</span></div><div class="line"><span class="keyword">brew </span><span class="keyword">install </span>postgresql</div></pre></td></tr></table></figure>
<h3 id="3-2-2-Build-and-Install"><a href="#3-2-2-Build-and-Install" class="headerlink" title="3.2.2 Build and Install"></a>3.2.2 Build and Install</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">git clone http<span class="variable">s:</span>//github.<span class="keyword">com</span>/akopytov/sysbench.git</div><div class="line"><span class="keyword">cd</span> sysbench</div><div class="line">./autogen.<span class="keyword">sh</span></div><div class="line"># Add --with-pgsql <span class="keyword">to</span> build with PostgreSQL support</div><div class="line">./configure</div><div class="line"><span class="keyword">make</span></div><div class="line"><span class="keyword">make</span> install</div></pre></td></tr></table></figure>
<p>The above will build sysbench with MySQL support by default. If you have MySQL headers and libraries in non-standard locations (and no <code>mysql_config</code> can be found in the <code>PATH</code>), you can specify them explicitly with <code>--with-mysql-includes</code> and <code>--with-mysql-libs</code> options to <code>./configure</code>.</p>
<p>To compile sysbench without MySQL support, use <code>--without-mysql</code>. If no database drivers are available database-related scripts will not work, but other benchmarks will be functional.</p>
<p>See <a href="https://github.com/akopytov/sysbench/blob/master/README-Oracle.md" target="_blank" rel="external">README-Oracle.md</a> for instructions on building with Oracle client libraries.</p>
<h1 id="4-语法说明"><a href="#4-语法说明" class="headerlink" title="4. 语法说明"></a>4. 语法说明</h1><h2 id="4-1-sysbench-–help"><a href="#4-1-sysbench-–help" class="headerlink" title="4.1 sysbench –help"></a>4.1 sysbench –help</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# sysbench --help</div><div class="line">Usage:</div><div class="line">  sysbench [options]... [testname] [command]</div><div class="line"></div><div class="line">Commands implemented by most tests: prepare run cleanup help</div><div class="line"></div><div class="line">General options:</div><div class="line">  --threads=N                     number of threads to use [1]</div><div class="line">  --events=N                      limit for total number of events [0]</div><div class="line">  --time=N                        limit for total execution time in seconds [10]</div><div class="line">  --forced-shutdown=STRING        number of seconds to wait after the --time limit before forcing shutdown, or 'off' to disable [off]</div><div class="line">  --thread-stack-size=SIZE        size of stack per thread [64K]</div><div class="line">  --rate=N                        average transactions rate. 0 for unlimited rate [0]</div><div class="line">  --report-interval=N             periodically report intermediate statistics with a specified interval in seconds. 0 disables intermediate reports [0]</div><div class="line">  --report-checkpoints=[LIST,...] dump full statistics and reset all counters at specified points in time. The argument is a list of comma-separated values representing the amount of time in seconds elapsed from start of test when report checkpoint(s) must be performed. Report checkpoints are off by default. []</div><div class="line">  --debug[=on|off]                print more debugging info [off]</div><div class="line">  --validate[=on|off]             perform validation checks where possible [off]</div><div class="line">  --help[=on|off]                 print help and exit [off]</div><div class="line">  --version[=on|off]              print version and exit [off]</div><div class="line">  --config-file=FILENAME          File containing command line options</div><div class="line">  --tx-rate=N                     deprecated alias for --rate [0]</div><div class="line">  --max-requests=N                deprecated alias for --events [0]</div><div class="line">  --max-time=N                    deprecated alias for --time [0]</div><div class="line">  --num-threads=N                 deprecated alias for --threads [1]</div><div class="line"></div><div class="line">Pseudo-Random Numbers Generator options:</div><div class="line">  --rand-type=STRING random numbers distribution &#123;uniform,gaussian,special,pareto&#125; [special]</div><div class="line">  --rand-spec-iter=N number of iterations used for numbers generation [12]</div><div class="line">  --rand-spec-pct=N  percentage of values to be treated as 'special' (for special distribution) [1]</div><div class="line">  --rand-spec-res=N  percentage of 'special' values to use (for special distribution) [75]</div><div class="line">  --rand-seed=N      seed for random number generator. When 0, the current time is used as a RNG seed. [0]</div><div class="line">  --rand-pareto-h=N  parameter h for pareto distibution [0.2]</div><div class="line"></div><div class="line">Log options:</div><div class="line">  --verbosity=N verbosity level &#123;5 - debug, 0 - only critical messages&#125; [3]</div><div class="line"></div><div class="line">  --percentile=N       percentile to calculate in latency statistics (1-100). Use the special value of 0 to disable percentile calculations [95]</div><div class="line">  --histogram[=on|off] print latency histogram in report [off]</div><div class="line"></div><div class="line">General database options:</div><div class="line"></div><div class="line">  --db-driver=STRING  specifies database driver to use ('help' to get list of available drivers)</div><div class="line">  --db-ps-mode=STRING prepared statements usage mode &#123;auto, disable&#125; [auto]</div><div class="line">  --db-debug[=on|off] print database-specific debug information [off]</div><div class="line"></div><div class="line"></div><div class="line">Compiled-in database drivers:</div><div class="line">  mysql - MySQL driver</div><div class="line">  pgsql - PostgreSQL driver</div><div class="line"></div><div class="line">mysql options:</div><div class="line">  --mysql-host=[LIST,...]          MySQL server host [localhost]</div><div class="line">  --mysql-port=[LIST,...]          MySQL server port [3306]</div><div class="line">  --mysql-socket=[LIST,...]        MySQL socket</div><div class="line">  --mysql-user=STRING              MySQL user [sbtest]</div><div class="line">  --mysql-password=STRING          MySQL password []</div><div class="line">  --mysql-db=STRING                MySQL database name [sbtest]</div><div class="line">  --mysql-ssl[=on|off]             use SSL connections, if available in the client library [off]</div><div class="line">  --mysql-ssl-cipher=STRING        use specific cipher for SSL connections []</div><div class="line">  --mysql-compression[=on|off]     use compression, if available in the client library [off]</div><div class="line">  --mysql-debug[=on|off]           trace all client library calls [off]</div><div class="line">  --mysql-ignore-errors=[LIST,...] list of errors to ignore, or "all" [1213,1020,1205]</div><div class="line">  --mysql-dry-run[=on|off]         Dry run, pretend that all MySQL client API calls are successful without executing them [off]</div><div class="line"></div><div class="line">pgsql options:</div><div class="line">  --pgsql-host=STRING     PostgreSQL server host [localhost]</div><div class="line">  --pgsql-port=N          PostgreSQL server port [5432]</div><div class="line">  --pgsql-user=STRING     PostgreSQL user [sbtest]</div><div class="line">  --pgsql-password=STRING PostgreSQL password []</div><div class="line">  --pgsql-db=STRING       PostgreSQL database name [sbtest]</div><div class="line"></div><div class="line">Compiled-in tests:</div><div class="line">  fileio - File I/O test</div><div class="line">  cpu - CPU performance test</div><div class="line">  memory - Memory functions speed test</div><div class="line">  threads - Threads subsystem performance test</div><div class="line">  mutex - Mutex performance test</div><div class="line"></div><div class="line">See 'sysbench <span class="tag">&lt;<span class="name">testname</span>&gt;</span> help' for a list of options for each test.</div></pre></td></tr></table></figure>
<h2 id="4-2-命令说明"><a href="#4-2-命令说明" class="headerlink" title="4.2 命令说明"></a>4.2 命令说明</h2><p>通用语法</p>
<figure class="highlight accesslog"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sysbench <span class="string">[options]</span>... <span class="string">[testname]</span> <span class="string">[command]</span></div></pre></td></tr></table></figure>
<h3 id="4-2-1-testname"><a href="#4-2-1-testname" class="headerlink" title="4.2.1 testname"></a>4.2.1 testname</h3><blockquote>
<p><em>testname</em> is an optional name of a built-in test (e.g. <code>fileio</code>, <code>memory</code>, <code>cpu</code>, etc.), or a name of one of the bundled Lua scripts (e.g. <code>oltp_read_only</code>), or a <em>path</em> to a custom Lua script. If no test name is specified on the command line (and thus, there is no <em>command</em> too, as in that case it would be parsed as a <em>testname</em>), or the test name is a dash (“<code>-</code>“), then sysbench expects a Lua script to execute on its standard input.</p>
</blockquote>
<ul>
<li>testname 可以是一个内置的测试 ( 当前支持5种 <code>fileio</code>,<code>memory</code>, <code>cpu</code>,<code>threads</code>, <code>mutex</code>.), </li>
<li>也可以是一个内置的lua脚本名 (e.g. <code>oltp_read_only</code>), </li>
<li>a <em>path</em> to a custom Lua script. </li>
<li>不指定的情况, then sysbench expects a Lua script to execute on its standard input.</li>
</ul>
<h3 id="4-2-2-command"><a href="#4-2-2-command" class="headerlink" title="4.2.2 command"></a>4.2.2 command</h3><blockquote>
<p><em>command</em> is an optional argument that will be passed by sysbench to the built-in test or script specified with <em>testname</em>. <em>command</em> defines the <em>action</em> that must be performed by the test. The list of available commands depends on a particular test. Some tests also implement their own custom commands.</p>
</blockquote>
<p>Below is a description of typical test commands and their purpose:</p>
<ul>
<li><code>prepare</code>: performs preparative actions for those tests which need them, e.g. creating the necessary files on disk for the <code>fileio</code> test, or filling the test database for database benchmarks.</li>
<li><code>run</code>: runs the actual test specified with the <em>testname</em> argument. This command is provided by all tests.</li>
<li><code>cleanup</code>: removes temporary data after the test run in those tests which create one.</li>
<li><code>help</code>: displays usage information for the test specified with the <em>testname</em> argument. This includes the full list of commands provided by the test, so it should be used to get the available commands.</li>
</ul>
<h3 id="4-2-3-options"><a href="#4-2-3-options" class="headerlink" title="4.2.3 options"></a>4.2.3 options</h3><p>options 包括通用的选项，另外不同的testname也包含特定的option，如mysql测试包含的数据库连接信息。特定测试的option可以通过<code>sysbench testname help</code> 查看。<code>sysbench --help</code>可以查看通用的option</p>
<h4 id="通用命令行选项"><a href="#通用命令行选项" class="headerlink" title="通用命令行选项"></a>通用命令行选项</h4><p>The table below lists the supported common options, their descriptions and default values:</p>
<table>
<thead>
<tr>
<th><em>Option</em></th>
<th><em>Description</em></th>
<th></th>
<th><em>Default value</em></th>
</tr>
</thead>
<tbody>
<tr>
<td><code>--threads</code></td>
<td>The total number of worker threads to create</td>
<td>创建测试线程的数目。默认为1.</td>
<td>1</td>
</tr>
<tr>
<td><code>--events</code></td>
<td>Limit for total number of requests. 0 (the default) means no limit</td>
<td>请求的最大数目。0代表不限制</td>
<td>0</td>
</tr>
<tr>
<td><code>--time</code></td>
<td>Limit for total execution time in seconds. 0 means no limit</td>
<td>最大执行时间，单位是s。</td>
<td>10</td>
</tr>
<tr>
<td>–forced-shutdown=STRING</td>
<td>number of seconds to wait after the –time limit before forcing shutdown, or ‘off’ to disable [off]</td>
<td>超过–time强制中断。默认是off</td>
<td>off</td>
</tr>
<tr>
<td><code>--thread-stack-size</code></td>
<td>Size of stack for each thread</td>
<td>每个线程的堆栈大小。</td>
<td>64K</td>
</tr>
<tr>
<td><code>--rate</code></td>
<td>Average transactions rate. The number specifies how many events (transactions) per seconds should be executed by all threads on average. 0 (default) means unlimited rate, i.e. events are executed as fast as possible</td>
<td></td>
<td>0</td>
</tr>
<tr>
<td><code>--report-interval</code></td>
<td>periodically report intermediate statistics with a specified interval in seconds. 0 disables intermediate reports [0]</td>
<td>执行过程中，显示执行结果的时间间隔</td>
<td>0</td>
</tr>
<tr>
<td><code>--debug</code></td>
<td>Print more debug info</td>
<td>是否显示debug信息</td>
<td>off</td>
</tr>
<tr>
<td><code>--validate</code></td>
<td>Perform validation of test results where possible</td>
<td>在可能情况下执行验证检查。</td>
<td>off</td>
</tr>
<tr>
<td><code>--help</code></td>
<td>Print help on general syntax or on a specified test, and exit</td>
<td>查看帮助</td>
<td>off</td>
</tr>
<tr>
<td><code>--verbosity</code></td>
<td>verbosity level {5 - debug, 0 - only critical messages} [3]</td>
<td>日志详细级别</td>
<td>3</td>
</tr>
<tr>
<td><code>--percentile</code></td>
<td>percentile to calculate in latency statistics (1-100). Use the special value of 0 to disable percentile calculations [95]</td>
<td>表示设定采样比例，默认是 95%，即丢弃5%的长请求，在剩余的99%里取最大值</td>
<td>95</td>
</tr>
<tr>
<td>–histogram[=on\</td>
<td>off]</td>
<td>print latency histogram in report [off]</td>
<td>report延迟直方图</td>
<td>off</td>
</tr>
<tr>
<td><code>--luajit-cmd</code></td>
<td>perform a LuaJIT control command. This option is equivalent to <code>luajit -j</code>. See <a href="http://luajit.org/running.html" target="_blank" rel="external">LuaJIT documentation</a> for more information</td>
<td></td>
</tr>
</tbody>
</table>
<h4 id="特定测试相关的选项"><a href="#特定测试相关的选项" class="headerlink" title="特定测试相关的选项"></a>特定测试相关的选项</h4><p>可以通过<code>sysbench testname help</code> 查看</p>
<p><strong>sysbench  fileio help</strong></p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">sysbench fileio <span class="keyword">help</span></div><div class="line">sysbench 1.0.7 (using bundled LuaJIT 2.1.0-beta2)</div><div class="line"></div><div class="line">fileio options:</div><div class="line">  --<span class="keyword">file</span>-num=<span class="keyword">N</span>              number of files to create [128]创建测试文件的数量。默认是128</div><div class="line">  --<span class="keyword">file</span>-block-size=<span class="keyword">N</span>       block size to <span class="keyword">use</span> <span class="keyword">in</span> all IO operations [16384]测试时文件块的大小。默认是16384(16K)</div><div class="line">  --<span class="keyword">file</span>-<span class="keyword">total</span>-size=SIZE    <span class="keyword">total</span> size of files to create [2G]测试文件的总大小。默认是2G</div><div class="line">  --<span class="keyword">file</span>-<span class="keyword">test</span>-mode=STRING   <span class="keyword">test</span> mode &#123;seqwr, seqrewr, seqrd, rndrd, rndwr, rndrw&#125;文件测试模式&#123;seqwr(顺序写), seqrewr(顺序读写), seqrd(顺序读), rndrd(随机读), rndwr(随机写), rndrw(随机读写)&#125;</div><div class="line">  --<span class="keyword">file</span>-io-mode=STRING     <span class="keyword">file</span> operations mode &#123;sync,async,mmap&#125; [sync] 文件操作模式&#123;sync(同步),async(异步),fastmmap(快速map映射),slowmmap(慢map映射)&#125;。默认是sync</div><div class="line">  --<span class="keyword">file</span>-extra-flags=STRING additional flags to <span class="keyword">use</span> <span class="keyword">on</span> opening files &#123;sync,dsync,direct&#125; []使用额外的标志来打开文件&#123;sync,dsync,direct&#125; 。默认为空</div><div class="line">  --<span class="keyword">file</span>-fsync-freq=<span class="keyword">N</span>       <span class="keyword">do</span> fsync() after this number of requests (0 - don't <span class="keyword">use</span> fsync()) [100]执行fsync()的频率。(0 – 不使用fsync())。默认是100</div><div class="line">  --<span class="keyword">file</span>-fsync-all[=<span class="keyword">on</span>|off] <span class="keyword">do</span> fsync() after each write operation [off]每执行完一次写操作就执行一次fsync。默认是off</div><div class="line">  --<span class="keyword">file</span>-fsync-end[=<span class="keyword">on</span>|off] <span class="keyword">do</span> fsync() at the end of <span class="keyword">test</span> [<span class="keyword">on</span>]在测试结束时才执行fsync。默认是<span class="keyword">on</span></div><div class="line">  --<span class="keyword">file</span>-fsync-mode=STRING  <span class="keyword">which</span> method to <span class="keyword">use</span> <span class="keyword">for</span> synchronization &#123;fsync, fdatasync&#125; [fsync]使用哪种方法进行同步&#123;fsync, fdatasync&#125;。默认是fsync</div><div class="line">  --<span class="keyword">file</span>-merged-requests=<span class="keyword">N</span>  <span class="keyword">merge</span> at most this number of IO requests <span class="keyword">if</span> possible (0 - don't <span class="keyword">merge</span>) [0]如果可以，合并最多的IO请求数(0 – 表示不合并)。默认是0</div><div class="line">  --<span class="keyword">file</span>-rw-<span class="keyword">ratio</span>=<span class="keyword">N</span>         reads/writes <span class="keyword">ratio</span> <span class="keyword">for</span> combined <span class="keyword">test</span> [1.5]     测试时的读写比例。默认是1.5</div></pre></td></tr></table></figure>
<p><strong>sysbench  cpu help</strong></p>
<figure class="highlight x86asm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sysbench  <span class="meta">cpu</span> help</div><div class="line">sysbench <span class="number">1.0</span><span class="meta">.7</span> (using bundled LuaJIT <span class="number">2.1</span><span class="meta">.0</span>-beta2)</div><div class="line"></div><div class="line"><span class="meta">cpu</span> options:</div><div class="line">  --<span class="meta">cpu</span>-max-prime=N upper limit for primes generator [<span class="number">10000</span>] 最大质数发生器数量。默认是<span class="number">10000</span></div></pre></td></tr></table></figure>
<p><strong>sysbench  memory help</strong></p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">--<span class="keyword">memory</span>-block-size=SIZE    size of <span class="keyword">memory</span> block <span class="keyword">for</span> <span class="keyword">test</span> [1K]  测试时内存块大小。默认是1K</div><div class="line">--<span class="keyword">memory</span>-<span class="keyword">total</span>-size=SIZE    <span class="keyword">total</span> size of data to transfer [100G] 传输数据的总大小。默认是100G</div><div class="line">--<span class="keyword">memory</span>-scope=STRING       <span class="keyword">memory</span> access scope &#123;<span class="keyword">global</span>,<span class="keyword">local</span>&#125; [<span class="keyword">global</span>] 内存访问范围&#123;<span class="keyword">global</span>,<span class="keyword">local</span>&#125;。默认是<span class="keyword">global</span></div><div class="line">--<span class="keyword">memory</span>-oper=STRING        <span class="keyword">type</span> of <span class="keyword">memory</span> operations &#123;<span class="keyword">read</span>, write, none&#125; [write]     内存操作类型。&#123;<span class="keyword">read</span>, write, none&#125; 默认是write</div><div class="line">--<span class="keyword">memory</span>-access-mode=STRING <span class="keyword">memory</span> access mode &#123;seq,rnd&#125; [seq] 存储器存取方式&#123;seq,rnd&#125; 默认是seq</div></pre></td></tr></table></figure>
<p><strong>sysbench  threads help</strong></p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">sysbench  threads <span class="keyword">help</span></div><div class="line">sysbench <span class="number">1.0</span>.<span class="number">7</span> (using bundled LuaJIT <span class="number">2.1</span>.<span class="number">0</span>-beta2)</div><div class="line"></div><div class="line">threads option<span class="variable">s:</span></div><div class="line">  --thread-yields=<span class="keyword">N</span> <span class="keyword">number</span> of yields <span class="keyword">to</span> <span class="keyword">do</span> per request [<span class="number">1000</span>] 每个请求产生多少个线程。默认是<span class="number">1000</span></div><div class="line">  --thread-locks=<span class="keyword">N</span>  <span class="keyword">number</span> of locks per thread [<span class="number">8</span>] 每个线程的锁的数量。默认是<span class="number">8</span></div></pre></td></tr></table></figure>
<p><strong>sysbench  mutex help</strong></p>
<figure class="highlight oxygene"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">sysbench  mutex help</div><div class="line">sysbench <span class="number">1.0</span>.<span class="number">7</span> (<span class="keyword">using</span> bundled LuaJIT <span class="number">2.1</span>.<span class="number">0</span>-beta2)</div><div class="line"></div><div class="line">mutex options:</div><div class="line">  --mutex-num=N   total size <span class="keyword">of</span> mutex <span class="keyword">array</span> [<span class="number">4096</span>] 数组互斥的总大小。默认是<span class="number">4096</span></div><div class="line">  --mutex-locks=N number <span class="keyword">of</span> mutex locks <span class="keyword">to</span> <span class="keyword">do</span> per thread [<span class="number">50000</span>] 每个线程互斥锁的数量。默认是<span class="number">50000</span></div><div class="line">  --mutex-loops=N number <span class="keyword">of</span> <span class="keyword">empty</span> loops <span class="keyword">to</span> <span class="keyword">do</span> outside mutex lock [<span class="number">10000</span>] 内部互斥锁的空循环数量。默认是<span class="number">10000</span></div></pre></td></tr></table></figure>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# sysbench --<span class="keyword">test</span>=cpu <span class="keyword">help</span></div><div class="line">sysbench 1.0.7 (using bundled LuaJIT 2.1.0-beta2)</div><div class="line"></div><div class="line">cpu options:</div><div class="line">  --cpu-max-prime=<span class="keyword">N</span> upper limit <span class="keyword">for</span> primes generator [10000]</div><div class="line"></div><div class="line">[root@localhost ~]# sysbench fileio <span class="keyword">help</span></div><div class="line">sysbench 1.0.7 (using bundled LuaJIT 2.1.0-beta2)</div><div class="line"></div><div class="line">fileio options:</div><div class="line">  --<span class="keyword">file</span>-num=<span class="keyword">N</span>              number of files to create [128]</div><div class="line">  --<span class="keyword">file</span>-block-size=<span class="keyword">N</span>       block size to <span class="keyword">use</span> <span class="keyword">in</span> all IO operations [16384]</div><div class="line">  --<span class="keyword">file</span>-<span class="keyword">total</span>-size=SIZE    <span class="keyword">total</span> size of files to create [2G]</div><div class="line">  --<span class="keyword">file</span>-<span class="keyword">test</span>-mode=STRING   <span class="keyword">test</span> mode &#123;seqwr, seqrewr, seqrd, rndrd, rndwr, rndrw&#125;</div><div class="line">  --<span class="keyword">file</span>-io-mode=STRING     <span class="keyword">file</span> operations mode &#123;sync,async,mmap&#125; [sync]</div><div class="line">  --<span class="keyword">file</span>-async-backlog=<span class="keyword">N</span>    number of asynchronous operatons to queue per thread [128]</div><div class="line">  --<span class="keyword">file</span>-extra-flags=STRING additional flags to <span class="keyword">use</span> <span class="keyword">on</span> opening files &#123;sync,dsync,direct&#125; []</div><div class="line">  --<span class="keyword">file</span>-fsync-freq=<span class="keyword">N</span>       <span class="keyword">do</span> fsync() after this number of requests (0 - don't <span class="keyword">use</span> fsync()) [100]</div><div class="line">  --<span class="keyword">file</span>-fsync-all[=<span class="keyword">on</span>|off] <span class="keyword">do</span> fsync() after each write operation [off]</div><div class="line">  --<span class="keyword">file</span>-fsync-end[=<span class="keyword">on</span>|off] <span class="keyword">do</span> fsync() at the end of <span class="keyword">test</span> [<span class="keyword">on</span>]</div><div class="line">  --<span class="keyword">file</span>-fsync-mode=STRING  <span class="keyword">which</span> method to <span class="keyword">use</span> <span class="keyword">for</span> synchronization &#123;fsync, fdatasync&#125; [fsync]</div><div class="line">  --<span class="keyword">file</span>-merged-requests=<span class="keyword">N</span>  <span class="keyword">merge</span> at most this number of IO requests <span class="keyword">if</span> possible (0 - don't <span class="keyword">merge</span>) [0]</div><div class="line">  --<span class="keyword">file</span>-rw-<span class="keyword">ratio</span>=<span class="keyword">N</span>         reads/writes <span class="keyword">ratio</span> <span class="keyword">for</span> combined <span class="keyword">test</span> [1.5]</div><div class="line"></div><div class="line">[root@localhost ~]# sysbench <span class="keyword">memory</span> <span class="keyword">help</span></div><div class="line">sysbench 1.0.7 (using bundled LuaJIT 2.1.0-beta2)</div><div class="line"></div><div class="line"><span class="keyword">memory</span> options:</div><div class="line">  --<span class="keyword">memory</span>-block-size=SIZE    size of <span class="keyword">memory</span> block <span class="keyword">for</span> <span class="keyword">test</span> [1K]</div><div class="line">  --<span class="keyword">memory</span>-<span class="keyword">total</span>-size=SIZE    <span class="keyword">total</span> size of data to transfer [100G]</div><div class="line">  --<span class="keyword">memory</span>-scope=STRING       <span class="keyword">memory</span> access scope &#123;<span class="keyword">global</span>,<span class="keyword">local</span>&#125; [<span class="keyword">global</span>]</div><div class="line">  --<span class="keyword">memory</span>-hugetlb[=<span class="keyword">on</span>|off]   allocate <span class="keyword">memory</span> from HugeTLB pool [off]</div><div class="line">  --<span class="keyword">memory</span>-oper=STRING        <span class="keyword">type</span> of <span class="keyword">memory</span> operations &#123;<span class="keyword">read</span>, write, none&#125; [write]</div><div class="line">  --<span class="keyword">memory</span>-access-mode=STRING <span class="keyword">memory</span> access mode &#123;seq,rnd&#125; [seq]</div><div class="line"></div><div class="line">[root@localhost ~]# sysbench threads <span class="keyword">help</span></div><div class="line">sysbench 1.0.7 (using bundled LuaJIT 2.1.0-beta2)</div><div class="line"></div><div class="line">threads options:</div><div class="line">  --thread-yields=<span class="keyword">N</span> number of yields to <span class="keyword">do</span> per request [1000]</div><div class="line">  --thread-locks=<span class="keyword">N</span>  number of locks per thread [8]</div></pre></td></tr></table></figure>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="http://www.cnblogs.com/zhoujinyi/archive/2013/04/19/3029134.html" target="_blank" rel="external">sysbench 安装、使用和测试</a></p>
<p><a href="https://github.com/akopytov/sysbench" target="_blank" rel="external">https://github.com/akopytov/sysbench</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍了sysbench的安装和使用。&lt;/p&gt;
    
    </summary>
    
      <category term="数据库相关" scheme="http://wangshengzhuang.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3/"/>
    
      <category term="MySQL" scheme="http://wangshengzhuang.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3/MySQL/"/>
    
      <category term="性能测试" scheme="http://wangshengzhuang.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3/MySQL/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="sysbench" scheme="http://wangshengzhuang.com/tags/sysbench/"/>
    
      <category term="MySQL" scheme="http://wangshengzhuang.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>rmdir命令</title>
    <link href="http://wangshengzhuang.com/2017/05/20/Linux/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4/rmdir%E5%91%BD%E4%BB%A4/"/>
    <id>http://wangshengzhuang.com/2017/05/20/Linux/每天一个Linux命令/rmdir命令/</id>
    <published>2017-05-20T14:55:56.000Z</published>
    <updated>2017-06-29T15:49:46.685Z</updated>
    
    <content type="html"><![CDATA[<p>摘要: rmdir (Remove Directory删除目录): 用来删除空目录</p>
<a id="more"></a>
<h3 id="1、命令简介"><a href="#1、命令简介" class="headerlink" title="1、命令简介"></a>1、命令简介</h3><p><strong>rmdir</strong> (Remove Directory删除目录): 用来删除空目录，删除某目录时也必须具有对父目录的写权限。</p>
<h3 id="2、用法"><a href="#2、用法" class="headerlink" title="2、用法"></a>2、用法</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">用法：rmdir [选项]... 目录...</div></pre></td></tr></table></figure>
<h3 id="3、选项"><a href="#3、选项" class="headerlink" title="3、选项"></a>3、选项</h3><figure class="highlight haml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">-<span class="ruby">-ignore-fail-on-non-empty  忽略仅由目录非空产生的所有错误</span></div><div class="line">-<span class="ruby">p, –parents              删除指定目录及其上级文件夹，例如<span class="string">"rmdir -p a/b/c'"</span>  与<span class="string">"rmdir a/b/c a/b a'"</span> 基本相同</span></div><div class="line">-<span class="ruby">v, –verbose              输出处理的目录详情</span></div></pre></td></tr></table></figure>
<h3 id="4、实例"><a href="#4、实例" class="headerlink" title="4、实例"></a>4、实例</h3><h4 id="实例1：删除一个空目录"><a href="#实例1：删除一个空目录" class="headerlink" title="实例1：删除一个空目录"></a>实例1：删除一个空目录</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@oracledb study]# rmdir dir1</div></pre></td></tr></table></figure>
<h4 id="实例2：删除空目录显示信息"><a href="#实例2：删除空目录显示信息" class="headerlink" title="实例2：删除空目录显示信息"></a>实例2：删除空目录显示信息</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@oracledb study]# rmdir -v dir3</div><div class="line">rmdir: 正在删除目录 "dir3"</div></pre></td></tr></table></figure>
<h4 id="实例3：删除一个非空目录"><a href="#实例3：删除一个非空目录" class="headerlink" title="实例3：删除一个非空目录"></a>实例3：删除一个非空目录</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@oracledb study]# rmdir -v dir2</div><div class="line">rmdir: 正在删除目录 "dir2"</div><div class="line">rmdir: 删除 "dir2" 失败: 目录非空</div></pre></td></tr></table></figure>
<h4 id="实例4：若父目录为空，则递归删除父目录"><a href="#实例4：若父目录为空，则递归删除父目录" class="headerlink" title="实例4：若父目录为空，则递归删除父目录"></a>实例4：若父目录为空，则递归删除父目录</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@oracledb study]# rmdir -pv dir1/sub1/sub2</div><div class="line">rmdir: 正在删除目录 "dir1/sub1/sub2"</div><div class="line">rmdir: 正在删除目录 "dir1/sub1"</div><div class="line">rmdir: 正在删除目录 "dir1"</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;摘要: rmdir (Remove Directory删除目录): 用来删除空目录&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://wangshengzhuang.com/categories/Linux/"/>
    
      <category term="每天一个Linux命令" scheme="http://wangshengzhuang.com/categories/Linux/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="每天一个Linux命令" scheme="http://wangshengzhuang.com/tags/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AALinux%E5%91%BD%E4%BB%A4/"/>
    
      <category term="rmdir" scheme="http://wangshengzhuang.com/tags/rmdir/"/>
    
  </entry>
  
</feed>
